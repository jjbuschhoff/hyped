Search.setIndex({"alltitles": {"API References": [[72, null]], "Add-Ons": [[0, "add-ons"]], "Available Add-Ons": [[0, "available-add-ons"]], "Configuration": [[71, "configuration"]], "Content": [[72, "content"]], "Custom Data Processors": [[69, "custom-data-processors"]], "Data Pipe": [[68, "data-pipe"]], "Data Processor Configuration": [[69, "data-processor-configuration"]], "Data Processors": [[69, "data-processors"]], "Data Streaming": [[71, "data-streaming"]], "Example": [[69, "example"]], "Example: Computing Mean and Standard Deviation": [[73, "example-computing-mean-and-standard-deviation"]], "Feature Access": [[70, "feature-access"]], "FeatureCollection": [[70, "featurecollection"]], "FeatureDict": [[70, "featuredict"]], "FeatureKey": [[70, "featurekey"]], "Features": [[72, "features"]], "Getting Started": [[71, "getting-started"]], "Implementing Custom Data Processors": [[69, "implementing-custom-data-processors"]], "Indices and tables": [[72, "indices-and-tables"]], "Installation": [[71, "installation"]], "Installing Add-Ons": [[0, "installing-add-ons"]], "Key Features": [[68, "key-features"]], "Main Functionalities": [[68, "main-functionalities"]], "Module contents": [[1, "module-base"], [6, "module-common"], [13, "module-data"], [15, "module-data.io"], [16, "module-data.io.datasets"], [19, "module-data.io.writers"], [24, "module-data.processors"], [25, "module-data.processors.api"], [28, "module-data.processors.features"], [32, "module-data.processors.parsers"], [35, "module-data.processors.sequence"], [41, "module-data.processors.spans"], [49, "module-data.processors.statistics"], [52, "module-data.processors.statistics.sequence"], [56, "module-data.processors.statistics.value"], [60, "module-data.processors.taggers"], [63, "module-data.processors.templates"], [65, "module-data.processors.tokenizers"]], "Multiprocessing and Batch Processing": [[71, "multiprocessing-and-batch-processing"]], "Processor Configuration": [[71, "processor-configuration"]], "Statistic Processors": [[73, "statistic-processors"]], "Submodules": [[1, "submodules"], [6, "submodules"], [13, "submodules"], [16, "submodules"], [19, "submodules"], [24, "submodules"], [25, "submodules"], [28, "submodules"], [32, "submodules"], [35, "submodules"], [41, "submodules"], [49, "submodules"], [52, "submodules"], [56, "submodules"], [60, "submodules"], [63, "submodules"], [65, "submodules"]], "Subpackages": [[13, "subpackages"], [15, "subpackages"], [24, "subpackages"], [49, "subpackages"]], "Usage": [[71, "usage"]], "Welcome to hyped\u2019s documentation!": [[72, "welcome-to-hyped-s-documentation"]], "apply": [[68, "apply"]], "base package": [[1, "base-package"]], "base.auto module": [[2, "module-base.auto"]], "base.config module": [[3, "module-base.config"]], "base.generic module": [[4, "module-base.generic"]], "base.registry module": [[5, "module-base.registry"]], "batch_process": [[68, "batch-process"]], "common package": [[6, "common-package"]], "common.arrow module": [[7, "module-common.arrow"]], "common.consumer module": [[8, "module-common.consumer"]], "common.feature_checks module": [[9, "module-common.feature_checks"]], "common.feature_key module": [[10, "module-common.feature_key"]], "common.lazy module": [[11, "module-common.lazy"]], "common.pydantic module": [[12, "module-common.pydantic"]], "data package": [[13, "data-package"]], "data.graph module": [[14, "module-data.graph"]], "data.io package": [[15, "data-io-package"]], "data.io.datasets package": [[16, "data-io-datasets-package"]], "data.io.datasets.cas module": [[17, "module-data.io.datasets.cas"]], "data.io.datasets.typed_json module": [[18, "module-data.io.datasets.typed_json"]], "data.io.writers package": [[19, "data-io-writers-package"]], "data.io.writers.base module": [[20, "module-data.io.writers.base"]], "data.io.writers.csv module": [[21, "module-data.io.writers.csv"]], "data.io.writers.json module": [[22, "module-data.io.writers.json"]], "data.pipe module": [[23, "module-data.pipe"]], "data.processors package": [[24, "data-processors-package"]], "data.processors.api package": [[25, "data-processors-api-package"]], "data.processors.api.openai_chat module": [[26, "module-data.processors.api.openai_chat"]], "data.processors.base module": [[27, "module-data.processors.base"]], "data.processors.features package": [[28, "data-processors-features-package"]], "data.processors.features.filter module": [[29, "module-data.processors.features.filter"]], "data.processors.features.flatten module": [[30, "module-data.processors.features.flatten"]], "data.processors.features.format module": [[31, "module-data.processors.features.format"]], "data.processors.parsers package": [[32, "data-processors-parsers-package"]], "data.processors.parsers.json module": [[33, "module-data.processors.parsers.json"]], "data.processors.parsers.repair_json module": [[34, "module-data.processors.parsers.repair_json"]], "data.processors.sequence package": [[35, "data-processors-sequence-package"]], "data.processors.sequence.apply_mask module": [[36, "module-data.processors.sequence.apply_mask"]], "data.processors.sequence.chunk module": [[37, "module-data.processors.sequence.chunk"]], "data.processors.sequence.extend module": [[38, "module-data.processors.sequence.extend"]], "data.processors.sequence.filter module": [[39, "module-data.processors.sequence.filter"]], "data.processors.sequence.join_str_seq module": [[40, "module-data.processors.sequence.join_str_seq"]], "data.processors.spans package": [[41, "data-processors-spans-package"]], "data.processors.spans.apply_idx_spans module": [[42, "module-data.processors.spans.apply_idx_spans"]], "data.processors.spans.common module": [[43, "module-data.processors.spans.common"]], "data.processors.spans.from_bio module": [[44, "module-data.processors.spans.from_bio"]], "data.processors.spans.from_word_ids module": [[45, "module-data.processors.spans.from_word_ids"]], "data.processors.spans.idx_spans module": [[46, "module-data.processors.spans.idx_spans"]], "data.processors.spans.loc_to_glob module": [[47, "module-data.processors.spans.loc_to_glob"]], "data.processors.spans.overlaps module": [[48, "module-data.processors.spans.overlaps"]], "data.processors.statistics package": [[49, "data-processors-statistics-package"]], "data.processors.statistics.base module": [[50, "module-data.processors.statistics.base"]], "data.processors.statistics.report module": [[51, "module-data.processors.statistics.report"]], "data.processors.statistics.sequence package": [[52, "data-processors-statistics-sequence-package"]], "data.processors.statistics.sequence.disc_seq_val_hist module": [[53, "module-data.processors.statistics.sequence.disc_seq_val_hist"]], "data.processors.statistics.sequence.seq_len_hist module": [[54, "module-data.processors.statistics.sequence.seq_len_hist"]], "data.processors.statistics.sequence.seq_val_hist module": [[55, "module-data.processors.statistics.sequence.seq_val_hist"]], "data.processors.statistics.value package": [[56, "data-processors-statistics-value-package"]], "data.processors.statistics.value.disc_hist module": [[57, "module-data.processors.statistics.value.disc_hist"]], "data.processors.statistics.value.hist module": [[58, "module-data.processors.statistics.value.hist"]], "data.processors.statistics.value.mean_and_std module": [[59, "module-data.processors.statistics.value.mean_and_std"]], "data.processors.taggers package": [[60, "data-processors-taggers-package"]], "data.processors.taggers.bio module": [[61, "module-data.processors.taggers.bio"]], "data.processors.taggers.relex module": [[62, "module-data.processors.taggers.relex"]], "data.processors.templates package": [[63, "data-processors-templates-package"]], "data.processors.templates.jinja2 module": [[64, "module-data.processors.templates.jinja2"]], "data.processors.tokenizers package": [[65, "data-processors-tokenizers-package"]], "data.processors.tokenizers.hf module": [[66, "module-data.processors.tokenizers.hf"]], "hyped": [[67, "hyped"]], "init": [[68, "init"]], "prepare": [[68, "prepare"]]}, "docnames": ["add_ons", "api/base", "api/base.auto", "api/base.config", "api/base.generic", "api/base.registry", "api/common", "api/common.arrow", "api/common.consumer", "api/common.feature_checks", "api/common.feature_key", "api/common.lazy", "api/common.pydantic", "api/data", "api/data.graph", "api/data.io", "api/data.io.datasets", "api/data.io.datasets.cas", "api/data.io.datasets.typed_json", "api/data.io.writers", "api/data.io.writers.base", "api/data.io.writers.csv", "api/data.io.writers.json", "api/data.pipe", "api/data.processors", "api/data.processors.api", "api/data.processors.api.openai_chat", "api/data.processors.base", "api/data.processors.features", "api/data.processors.features.filter", "api/data.processors.features.flatten", "api/data.processors.features.format", "api/data.processors.parsers", "api/data.processors.parsers.json", "api/data.processors.parsers.repair_json", "api/data.processors.sequence", "api/data.processors.sequence.apply_mask", "api/data.processors.sequence.chunk", "api/data.processors.sequence.extend", "api/data.processors.sequence.filter", "api/data.processors.sequence.join_str_seq", "api/data.processors.spans", "api/data.processors.spans.apply_idx_spans", "api/data.processors.spans.common", "api/data.processors.spans.from_bio", "api/data.processors.spans.from_word_ids", "api/data.processors.spans.idx_spans", "api/data.processors.spans.loc_to_glob", "api/data.processors.spans.overlaps", "api/data.processors.statistics", "api/data.processors.statistics.base", "api/data.processors.statistics.report", "api/data.processors.statistics.sequence", "api/data.processors.statistics.sequence.disc_seq_val_hist", "api/data.processors.statistics.sequence.seq_len_hist", "api/data.processors.statistics.sequence.seq_val_hist", "api/data.processors.statistics.value", "api/data.processors.statistics.value.disc_hist", "api/data.processors.statistics.value.hist", "api/data.processors.statistics.value.mean_and_std", "api/data.processors.taggers", "api/data.processors.taggers.bio", "api/data.processors.taggers.relex", "api/data.processors.templates", "api/data.processors.templates.jinja2", "api/data.processors.tokenizers", "api/data.processors.tokenizers.hf", "api/hyped", "data_pipe", "data_processors", "feature_access", "getting_started", "index", "statistic_processors"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["add_ons.rst", "api/base.rst", "api/base.auto.rst", "api/base.config.rst", "api/base.generic.rst", "api/base.registry.rst", "api/common.rst", "api/common.arrow.rst", "api/common.consumer.rst", "api/common.feature_checks.rst", "api/common.feature_key.rst", "api/common.lazy.rst", "api/common.pydantic.rst", "api/data.rst", "api/data.graph.rst", "api/data.io.rst", "api/data.io.datasets.rst", "api/data.io.datasets.cas.rst", "api/data.io.datasets.typed_json.rst", "api/data.io.writers.rst", "api/data.io.writers.base.rst", "api/data.io.writers.csv.rst", "api/data.io.writers.json.rst", "api/data.pipe.rst", "api/data.processors.rst", "api/data.processors.api.rst", "api/data.processors.api.openai_chat.rst", "api/data.processors.base.rst", "api/data.processors.features.rst", "api/data.processors.features.filter.rst", "api/data.processors.features.flatten.rst", "api/data.processors.features.format.rst", "api/data.processors.parsers.rst", "api/data.processors.parsers.json.rst", "api/data.processors.parsers.repair_json.rst", "api/data.processors.sequence.rst", "api/data.processors.sequence.apply_mask.rst", "api/data.processors.sequence.chunk.rst", "api/data.processors.sequence.extend.rst", "api/data.processors.sequence.filter.rst", "api/data.processors.sequence.join_str_seq.rst", "api/data.processors.spans.rst", "api/data.processors.spans.apply_idx_spans.rst", "api/data.processors.spans.common.rst", "api/data.processors.spans.from_bio.rst", "api/data.processors.spans.from_word_ids.rst", "api/data.processors.spans.idx_spans.rst", "api/data.processors.spans.loc_to_glob.rst", "api/data.processors.spans.overlaps.rst", "api/data.processors.statistics.rst", "api/data.processors.statistics.base.rst", "api/data.processors.statistics.report.rst", "api/data.processors.statistics.sequence.rst", "api/data.processors.statistics.sequence.disc_seq_val_hist.rst", "api/data.processors.statistics.sequence.seq_len_hist.rst", "api/data.processors.statistics.sequence.seq_val_hist.rst", "api/data.processors.statistics.value.rst", "api/data.processors.statistics.value.disc_hist.rst", "api/data.processors.statistics.value.hist.rst", "api/data.processors.statistics.value.mean_and_std.rst", "api/data.processors.taggers.rst", "api/data.processors.taggers.bio.rst", "api/data.processors.taggers.relex.rst", "api/data.processors.templates.rst", "api/data.processors.templates.jinja2.rst", "api/data.processors.tokenizers.rst", "api/data.processors.tokenizers.hf.rst", "api/hyped.rst", "data_pipe.rst", "data_processors.rst", "feature_access.rst", "getting_started.rst", "index.rst", "statistic_processors.rst"], "indexentries": {"activate() (data.processors.statistics.report.statisticsreport method)": [[51, "data.processors.statistics.report.StatisticsReport.activate", false]], "activate() (data.processors.statistics.report.statisticsreportmanager method)": [[51, "data.processors.statistics.report.StatisticsReportManager.activate", false]], "add_special_tokens (data.processors.tokenizers.hf.huggingfacetokenizerconfig attribute)": [[66, "data.processors.tokenizers.hf.HuggingFaceTokenizerConfig.add_special_tokens", false]], "annotation_types (data.io.datasets.cas.casdatasetconfig attribute)": [[17, "data.io.datasets.cas.CasDatasetConfig.annotation_types", false]], "api_call() (data.processors.api.openai_chat.openaichatcompletion method)": [[26, "data.processors.api.openai_chat.OpenAIChatCompletion.api_call", false]], "api_key (data.processors.api.openai_chat.openaichatcompletionconfig attribute)": [[26, "data.processors.api.openai_chat.OpenAIChatCompletionConfig.api_key", false]], "append (data.processors.sequence.extend.extendsequenceconfig attribute)": [[38, "data.processors.sequence.extend.ExtendSequenceConfig.append", false]], "apply() (data.pipe.datapipe method)": [[23, "data.pipe.DataPipe.apply", false]], "applyindexspans (class in data.processors.spans.apply_idx_spans)": [[42, "data.processors.spans.apply_idx_spans.ApplyIndexSpans", false]], "applyindexspansconfig (class in data.processors.spans.apply_idx_spans)": [[42, "data.processors.spans.apply_idx_spans.ApplyIndexSpansConfig", false]], "applymask (class in data.processors.sequence.apply_mask)": [[36, "data.processors.sequence.apply_mask.ApplyMask", false]], "applymaskconfig (class in data.processors.sequence.apply_mask)": [[36, "data.processors.sequence.apply_mask.ApplyMaskConfig", false]], "approx (data.processors.spans.common.resolveoverlapsstrategy attribute)": [[43, "data.processors.spans.common.ResolveOverlapsStrategy.APPROX", false]], "attention_mask (data.processors.tokenizers.hf.huggingfacetokenizeroutputs attribute)": [[66, "data.processors.tokenizers.hf.HuggingFaceTokenizerOutputs.ATTENTION_MASK", false]], "autoconfig (class in base.config)": [[3, "base.config.AutoConfig", false]], "base": [[1, "module-base", false]], "base.auto": [[2, "module-base.auto", false]], "base.config": [[3, "module-base.config", false]], "base.generic": [[4, "module-base.generic", false]], "base.registry": [[5, "module-base.registry", false]], "base_url (data.processors.api.openai_chat.openaichatcompletionconfig attribute)": [[26, "data.processors.api.openai_chat.OpenAIChatCompletionConfig.base_url", false]], "baseautoclass (class in base.auto)": [[2, "base.auto.BaseAutoClass", false]], "baseautoconfigurable (class in base.config)": [[3, "base.config.BaseAutoConfigurable", false]], "baseconfig (class in base.config)": [[3, "base.config.BaseConfig", false]], "baseconfigurable (class in base.config)": [[3, "base.config.BaseConfigurable", false]], "basedataprocessor (class in data.processors.base)": [[27, "data.processors.base.BaseDataProcessor", false]], "basedataprocessorconfig (class in data.processors.base)": [[27, "data.processors.base.BaseDataProcessorConfig", false]], "basedatasetconsumer (class in common.consumer)": [[8, "common.consumer.BaseDatasetConsumer", false]], "basedatasetwriter (class in data.io.writers.base)": [[20, "data.io.writers.base.BaseDatasetWriter", false]], "basedatastatistic (class in data.processors.statistics.base)": [[50, "data.processors.statistics.base.BaseDataStatistic", false]], "basedatastatisticconfig (class in data.processors.statistics.base)": [[50, "data.processors.statistics.base.BaseDataStatisticConfig", false]], "batch_process() (data.pipe.datapipe method)": [[23, "data.pipe.DataPipe.batch_process", false]], "batch_process() (data.processors.base.basedataprocessor method)": [[27, "data.processors.base.BaseDataProcessor.batch_process", false]], "begin_tag_prefix (data.processors.spans.from_bio.tokenspansfrombiotagsconfig attribute)": [[44, "data.processors.spans.from_bio.TokenSpansFromBioTagsConfig.begin_tag_prefix", false]], "begin_tag_prefix (data.processors.taggers.bio.biotaggerconfig attribute)": [[61, "data.processors.taggers.bio.BioTaggerConfig.begin_tag_prefix", false]], "begins (data.processors.spans.common.labelledspansoutputs attribute)": [[43, "data.processors.spans.common.LabelledSpansOutputs.BEGINS", false]], "begins (data.processors.spans.common.spansoutputs attribute)": [[43, "data.processors.spans.common.SpansOutputs.BEGINS", false]], "bio_label_space (data.processors.taggers.bio.biotagger property)": [[61, "data.processors.taggers.bio.BioTagger.bio_label_space", false]], "bio_tags (data.processors.spans.from_bio.tokenspansfrombiotagsconfig attribute)": [[44, "data.processors.spans.from_bio.TokenSpansFromBioTagsConfig.bio_tags", false]], "bio_tags (data.processors.taggers.bio.biotaggeroutputs attribute)": [[61, "data.processors.taggers.bio.BioTaggerOutputs.BIO_TAGS", false]], "biotagger (class in data.processors.taggers.bio)": [[61, "data.processors.taggers.bio.BioTagger", false]], "biotaggerconfig (class in data.processors.taggers.bio)": [[61, "data.processors.taggers.bio.BioTaggerConfig", false]], "biotaggeroutputs (class in data.processors.taggers.bio)": [[61, "data.processors.taggers.bio.BioTaggerOutputs", false]], "boxes (data.processors.tokenizers.hf.huggingfacetokenizerconfig attribute)": [[66, "data.processors.tokenizers.hf.HuggingFaceTokenizerConfig.boxes", false]], "build_process_graph() (data.graph.processgraph method)": [[14, "data.graph.ProcessGraph.build_process_graph", false]], "build_sample() (in module data.processors.templates.jinja2)": [[64, "data.processors.templates.jinja2.build_sample", false]], "builder_config_class (data.io.datasets.cas.casdataset attribute)": [[17, "data.io.datasets.cas.CasDataset.BUILDER_CONFIG_CLASS", false]], "builder_config_class (data.io.datasets.typed_json.typedjsondataset attribute)": [[18, "data.io.datasets.typed_json.TypedJsonDataset.BUILDER_CONFIG_CLASS", false]], "casdataset (class in data.io.datasets.cas)": [[17, "data.io.datasets.cas.CasDataset", false]], "casdatasetconfig (class in data.io.datasets.cas)": [[17, "data.io.datasets.cas.CasDatasetConfig", false]], "check_feature_equals() (in module common.feature_checks)": [[9, "common.feature_checks.check_feature_equals", false]], "check_feature_is_sequence() (in module common.feature_checks)": [[9, "common.feature_checks.check_feature_is_sequence", false]], "check_features() (data.processors.statistics.base.basedatastatistic method)": [[50, "data.processors.statistics.base.BaseDataStatistic.check_features", false]], "check_features() (data.processors.statistics.sequence.disc_seq_val_hist.discretesequencevaluehistogram method)": [[53, "data.processors.statistics.sequence.disc_seq_val_hist.DiscreteSequenceValueHistogram.check_features", false]], "check_features() (data.processors.statistics.sequence.seq_len_hist.sequencelengthhistogram method)": [[54, "data.processors.statistics.sequence.seq_len_hist.SequenceLengthHistogram.check_features", false]], "check_features() (data.processors.statistics.sequence.seq_val_hist.sequencevaluehistogram method)": [[55, "data.processors.statistics.sequence.seq_val_hist.SequenceValueHistogram.check_features", false]], "check_features() (data.processors.statistics.value.disc_hist.discretehistogram method)": [[57, "data.processors.statistics.value.disc_hist.DiscreteHistogram.check_features", false]], "check_features() (data.processors.statistics.value.hist.histogram method)": [[58, "data.processors.statistics.value.hist.Histogram.check_features", false]], "check_features() (data.processors.statistics.value.mean_and_std.meanandstd method)": [[59, "data.processors.statistics.value.mean_and_std.MeanAndStd.check_features", false]], "check_object_matches_feature() (in module common.feature_checks)": [[9, "common.feature_checks.check_object_matches_feature", false]], "check_sequence_lengths_match() (in module common.feature_checks)": [[9, "common.feature_checks.check_sequence_lengths_match", false]], "chunk_size (data.processors.sequence.chunk.chunksequenceconfig attribute)": [[37, "data.processors.sequence.chunk.ChunkSequenceConfig.chunk_size", false]], "chunk_stride (data.processors.sequence.chunk.chunksequenceconfig attribute)": [[37, "data.processors.sequence.chunk.ChunkSequenceConfig.chunk_stride", false]], "chunksequence (class in data.processors.sequence.chunk)": [[37, "data.processors.sequence.chunk.ChunkSequence", false]], "chunksequenceconfig (class in data.processors.sequence.chunk)": [[37, "data.processors.sequence.chunk.ChunkSequenceConfig", false]], "common": [[6, "module-common", false]], "common.arrow": [[7, "module-common.arrow", false]], "common.consumer": [[8, "module-common.consumer", false]], "common.feature_checks": [[9, "module-common.feature_checks", false]], "common.feature_key": [[10, "module-common.feature_key", false]], "common.lazy": [[11, "module-common.lazy", false]], "common.pydantic": [[12, "module-common.pydantic", false]], "compute() (data.processors.statistics.base.basedatastatistic method)": [[50, "data.processors.statistics.base.BaseDataStatistic.compute", false]], "compute() (data.processors.statistics.value.disc_hist.discretehistogram method)": [[57, "data.processors.statistics.value.disc_hist.DiscreteHistogram.compute", false]], "compute() (data.processors.statistics.value.hist.histogram method)": [[58, "data.processors.statistics.value.hist.Histogram.compute", false]], "compute() (data.processors.statistics.value.mean_and_std.meanandstd method)": [[59, "data.processors.statistics.value.mean_and_std.MeanAndStd.compute", false]], "compute_spans_overlap_matrix() (in module data.processors.spans.common)": [[43, "data.processors.spans.common.compute_spans_overlap_matrix", false]], "concrete_types (base.registry.rootedtyperegistryview property)": [[5, "base.registry.RootedTypeRegistryView.concrete_types", false]], "config (base.config.factory property)": [[3, "base.config.Factory.config", false]], "config (data.processors.base.basedataprocessor property)": [[27, "data.processors.base.BaseDataProcessor.config", false]], "config_type (base.config.baseconfigurable attribute)": [[3, "base.config.BaseConfigurable.CONFIG_TYPE", false], [3, "base.config.BaseConfigurable.config_type", false]], "config_type (data.processors.features.flatten.flattenfeatures attribute)": [[30, "data.processors.features.flatten.FlattenFeatures.CONFIG_TYPE", false]], "config_type (data.processors.statistics.sequence.disc_seq_val_hist.discretesequencevaluehistogram attribute)": [[53, "data.processors.statistics.sequence.disc_seq_val_hist.DiscreteSequenceValueHistogram.CONFIG_TYPE", false]], "config_type (data.processors.statistics.sequence.seq_len_hist.sequencelengthhistogram attribute)": [[54, "data.processors.statistics.sequence.seq_len_hist.SequenceLengthHistogram.CONFIG_TYPE", false]], "config_type (data.processors.statistics.sequence.seq_val_hist.sequencevaluehistogram attribute)": [[55, "data.processors.statistics.sequence.seq_val_hist.SequenceValueHistogram.CONFIG_TYPE", false]], "const (class in common.feature_key)": [[10, "common.feature_key.Const", false]], "consume() (common.consumer.basedatasetconsumer method)": [[8, "common.consumer.BaseDatasetConsumer.consume", false]], "consume() (data.io.writers.csv.csvdatasetwriter method)": [[21, "data.io.writers.csv.CsvDatasetWriter.consume", false]], "consume_example() (common.consumer.basedatasetconsumer method)": [[8, "common.consumer.BaseDatasetConsumer.consume_example", false]], "consume_example() (data.io.writers.csv.csvdatasetwriter method)": [[21, "data.io.writers.csv.CsvDatasetWriter.consume_example", false]], "consume_example() (data.io.writers.json.jsondatasetwriter method)": [[22, "data.io.writers.json.JsonDatasetWriter.consume_example", false]], "consumerprocess (class in common.consumer)": [[8, "common.consumer.ConsumerProcess", false]], "consumerprocessexception": [[8, "common.consumer.ConsumerProcessException", false]], "consumerprocessexceptiongroup": [[8, "common.consumer.ConsumerProcessExceptionGroup", false]], "convert_features_to_arrow_schema() (in module common.arrow)": [[7, "common.arrow.convert_features_to_arrow_schema", false]], "coveredindexspans (class in data.processors.spans.idx_spans)": [[46, "data.processors.spans.idx_spans.CoveredIndexSpans", false]], "coveredindexspansconfig (class in data.processors.spans.idx_spans)": [[46, "data.processors.spans.idx_spans.CoveredIndexSpansConfig", false]], "create() (base.config.factory method)": [[3, "base.config.Factory.create", false]], "csvdatasetwriter (class in data.io.writers.csv)": [[21, "data.io.writers.csv.CsvDatasetWriter", false]], "cutoff_at_slice() (common.feature_key.featurekey method)": [[10, "common.feature_key.FeatureKey.cutoff_at_slice", false]], "data": [[13, "module-data", false]], "data.graph": [[14, "module-data.graph", false]], "data.io": [[15, "module-data.io", false]], "data.io.datasets": [[16, "module-data.io.datasets", false]], "data.io.datasets.cas": [[17, "module-data.io.datasets.cas", false]], "data.io.datasets.typed_json": [[18, "module-data.io.datasets.typed_json", false]], "data.io.writers": [[19, "module-data.io.writers", false]], "data.io.writers.base": [[20, "module-data.io.writers.base", false]], "data.io.writers.csv": [[21, "module-data.io.writers.csv", false]], "data.io.writers.json": [[22, "module-data.io.writers.json", false]], "data.pipe": [[23, "module-data.pipe", false]], "data.processors": [[24, "module-data.processors", false]], "data.processors.api": [[25, "module-data.processors.api", false]], "data.processors.api.openai_chat": [[26, "module-data.processors.api.openai_chat", false]], "data.processors.base": [[27, "module-data.processors.base", false]], "data.processors.features": [[28, "module-data.processors.features", false]], "data.processors.features.filter": [[29, "module-data.processors.features.filter", false]], "data.processors.features.flatten": [[30, "module-data.processors.features.flatten", false]], "data.processors.features.format": [[31, "module-data.processors.features.format", false]], "data.processors.parsers": [[32, "module-data.processors.parsers", false]], "data.processors.parsers.json": [[33, "module-data.processors.parsers.json", false]], "data.processors.parsers.repair_json": [[34, "module-data.processors.parsers.repair_json", false]], "data.processors.sequence": [[35, "module-data.processors.sequence", false]], "data.processors.sequence.apply_mask": [[36, "module-data.processors.sequence.apply_mask", false]], "data.processors.sequence.chunk": [[37, "module-data.processors.sequence.chunk", false]], "data.processors.sequence.extend": [[38, "module-data.processors.sequence.extend", false]], "data.processors.sequence.filter": [[39, "module-data.processors.sequence.filter", false]], "data.processors.sequence.join_str_seq": [[40, "module-data.processors.sequence.join_str_seq", false]], "data.processors.spans": [[41, "module-data.processors.spans", false]], "data.processors.spans.apply_idx_spans": [[42, "module-data.processors.spans.apply_idx_spans", false]], "data.processors.spans.common": [[43, "module-data.processors.spans.common", false]], "data.processors.spans.from_bio": [[44, "module-data.processors.spans.from_bio", false]], "data.processors.spans.from_word_ids": [[45, "module-data.processors.spans.from_word_ids", false]], "data.processors.spans.idx_spans": [[46, "module-data.processors.spans.idx_spans", false]], "data.processors.spans.loc_to_glob": [[47, "module-data.processors.spans.loc_to_glob", false]], "data.processors.spans.overlaps": [[48, "module-data.processors.spans.overlaps", false]], "data.processors.statistics": [[49, "module-data.processors.statistics", false]], "data.processors.statistics.base": [[50, "module-data.processors.statistics.base", false]], "data.processors.statistics.report": [[51, "module-data.processors.statistics.report", false]], "data.processors.statistics.sequence": [[52, "module-data.processors.statistics.sequence", false]], "data.processors.statistics.sequence.disc_seq_val_hist": [[53, "module-data.processors.statistics.sequence.disc_seq_val_hist", false]], "data.processors.statistics.sequence.seq_len_hist": [[54, "module-data.processors.statistics.sequence.seq_len_hist", false]], "data.processors.statistics.sequence.seq_val_hist": [[55, "module-data.processors.statistics.sequence.seq_val_hist", false]], "data.processors.statistics.value": [[56, "module-data.processors.statistics.value", false]], "data.processors.statistics.value.disc_hist": [[57, "module-data.processors.statistics.value.disc_hist", false]], "data.processors.statistics.value.hist": [[58, "module-data.processors.statistics.value.hist", false]], "data.processors.statistics.value.mean_and_std": [[59, "module-data.processors.statistics.value.mean_and_std", false]], "data.processors.taggers": [[60, "module-data.processors.taggers", false]], "data.processors.taggers.bio": [[61, "module-data.processors.taggers.bio", false]], "data.processors.taggers.relex": [[62, "module-data.processors.taggers.relex", false]], "data.processors.templates": [[63, "module-data.processors.templates", false]], "data.processors.templates.jinja2": [[64, "module-data.processors.templates.jinja2", false]], "data.processors.tokenizers": [[65, "module-data.processors.tokenizers", false]], "data.processors.tokenizers.hf": [[66, "module-data.processors.tokenizers.hf", false]], "data_processor (data.graph.nodetype attribute)": [[14, "data.graph.NodeType.DATA_PROCESSOR", false]], "data_statistic (data.graph.nodetype attribute)": [[14, "data.graph.NodeType.DATA_STATISTIC", false]], "datapipe (class in data.pipe)": [[23, "data.pipe.DataPipe", false]], "datapipeconfig (class in data.pipe)": [[23, "data.pipe.DataPipeConfig", false]], "deactivate() (data.processors.statistics.report.statisticsreport method)": [[51, "data.processors.statistics.report.StatisticsReport.deactivate", false]], "deactivate() (data.processors.statistics.report.statisticsreportmanager method)": [[51, "data.processors.statistics.report.StatisticsReportManager.deactivate", false]], "default_headers (data.processors.api.openai_chat.openaichatcompletionconfig attribute)": [[26, "data.processors.api.openai_chat.OpenAIChatCompletionConfig.default_headers", false]], "default_query (data.processors.api.openai_chat.openaichatcompletionconfig attribute)": [[26, "data.processors.api.openai_chat.OpenAIChatCompletionConfig.default_query", false]], "default_registry (in module base.registry)": [[5, "base.registry.default_registry", false]], "delimiter (data.processors.features.flatten.flattenfeaturesconfig attribute)": [[30, "data.processors.features.flatten.FlattenFeaturesConfig.delimiter", false]], "delimiter (data.processors.sequence.join_str_seq.joinstringsequenceconfig attribute)": [[40, "data.processors.sequence.join_str_seq.JoinStringSequenceConfig.delimiter", false]], "depth (data.processors.features.flatten.flattenfeaturesconfig attribute)": [[30, "data.processors.features.flatten.FlattenFeaturesConfig.depth", false]], "description (data.processors.api.openai_chat.openaitoolfunction attribute)": [[26, "data.processors.api.openai_chat.OpenAIToolFunction.description", false]], "discretehistogram (class in data.processors.statistics.value.disc_hist)": [[57, "data.processors.statistics.value.disc_hist.DiscreteHistogram", false]], "discretehistogramconfig (class in data.processors.statistics.value.disc_hist)": [[57, "data.processors.statistics.value.disc_hist.DiscreteHistogramConfig", false]], "discretesequencevaluehistogram (class in data.processors.statistics.sequence.disc_seq_val_hist)": [[53, "data.processors.statistics.sequence.disc_seq_val_hist.DiscreteSequenceValueHistogram", false]], "discretesequencevaluehistogramconfig (class in data.processors.statistics.sequence.disc_seq_val_hist)": [[53, "data.processors.statistics.sequence.disc_seq_val_hist.DiscreteSequenceValueHistogramConfig", false]], "drop_last (data.processors.sequence.chunk.chunksequenceconfig attribute)": [[37, "data.processors.sequence.chunk.ChunkSequenceConfig.drop_last", false]], "edgeattribute (class in data.graph)": [[14, "data.graph.EdgeAttribute", false]], "ends (data.processors.spans.common.labelledspansoutputs attribute)": [[43, "data.processors.spans.common.LabelledSpansOutputs.ENDS", false]], "ends (data.processors.spans.common.spansoutputs attribute)": [[43, "data.processors.spans.common.SpansOutputs.ENDS", false]], "entity_label_space (data.processors.taggers.bio.biotagger property)": [[61, "data.processors.taggers.bio.BioTagger.entity_label_space", false]], "entity_spans_begin (data.processors.taggers.bio.biotaggerconfig attribute)": [[61, "data.processors.taggers.bio.BioTaggerConfig.entity_spans_begin", false]], "entity_spans_end (data.processors.taggers.bio.biotaggerconfig attribute)": [[61, "data.processors.taggers.bio.BioTaggerConfig.entity_spans_end", false]], "entity_spans_inclusive (data.processors.taggers.bio.biotaggerconfig attribute)": [[61, "data.processors.taggers.bio.BioTaggerConfig.entity_spans_inclusive", false]], "entity_spans_label (data.processors.taggers.bio.biotaggerconfig attribute)": [[61, "data.processors.taggers.bio.BioTaggerConfig.entity_spans_label", false]], "exception (common.consumer.consumerprocess property)": [[8, "common.consumer.ConsumerProcess.exception", false]], "execution_index (data.graph.nodeattribute attribute)": [[14, "data.graph.NodeAttribute.EXECUTION_INDEX", false]], "extendsequence (class in data.processors.sequence.extend)": [[38, "data.processors.sequence.extend.ExtendSequence", false]], "extendsequenceconfig (class in data.processors.sequence.extend)": [[38, "data.processors.sequence.extend.ExtendSequenceConfig", false]], "extra_body (data.processors.api.openai_chat.openaichatcompletionconfig attribute)": [[26, "data.processors.api.openai_chat.OpenAIChatCompletionConfig.extra_body", false]], "extra_headers (data.processors.api.openai_chat.openaichatcompletionconfig attribute)": [[26, "data.processors.api.openai_chat.OpenAIChatCompletionConfig.extra_headers", false]], "extra_query (data.processors.api.openai_chat.openaichatcompletionconfig attribute)": [[26, "data.processors.api.openai_chat.OpenAIChatCompletionConfig.extra_query", false]], "extract() (data.processors.statistics.base.basedatastatistic method)": [[50, "data.processors.statistics.base.BaseDataStatistic.extract", false]], "extract() (data.processors.statistics.sequence.disc_seq_val_hist.discretesequencevaluehistogram method)": [[53, "data.processors.statistics.sequence.disc_seq_val_hist.DiscreteSequenceValueHistogram.extract", false]], "extract() (data.processors.statistics.sequence.seq_len_hist.sequencelengthhistogram method)": [[54, "data.processors.statistics.sequence.seq_len_hist.SequenceLengthHistogram.extract", false]], "extract() (data.processors.statistics.sequence.seq_val_hist.sequencevaluehistogram method)": [[55, "data.processors.statistics.sequence.seq_val_hist.SequenceValueHistogram.extract", false]], "extract() (data.processors.statistics.value.disc_hist.discretehistogram method)": [[57, "data.processors.statistics.value.disc_hist.DiscreteHistogram.extract", false]], "extract() (data.processors.statistics.value.hist.histogram method)": [[58, "data.processors.statistics.value.hist.Histogram.extract", false]], "extract() (data.processors.statistics.value.mean_and_std.meanandstd method)": [[59, "data.processors.statistics.value.mean_and_std.MeanAndStd.extract", false]], "factory (class in base.config)": [[3, "base.config.Factory", false]], "feature_key (data.processors.statistics.sequence.disc_seq_val_hist.discretesequencevaluehistogramconfig attribute)": [[53, "data.processors.statistics.sequence.disc_seq_val_hist.DiscreteSequenceValueHistogramConfig.feature_key", false]], "feature_key (data.processors.statistics.sequence.seq_val_hist.sequencevaluehistogramconfig attribute)": [[55, "data.processors.statistics.sequence.seq_val_hist.SequenceValueHistogramConfig.feature_key", false]], "feature_key (data.processors.statistics.value.disc_hist.discretehistogramconfig attribute)": [[57, "data.processors.statistics.value.disc_hist.DiscreteHistogramConfig.feature_key", false]], "feature_key (data.processors.statistics.value.hist.histogramconfig attribute)": [[58, "data.processors.statistics.value.hist.HistogramConfig.feature_key", false]], "feature_key (data.processors.statistics.value.mean_and_std.meanandstdconfig attribute)": [[59, "data.processors.statistics.value.mean_and_std.MeanAndStdConfig.feature_key", false]], "feature_keys (common.feature_key.featurecollection property)": [[10, "common.feature_key.FeatureCollection.feature_keys", false]], "featurecollection (class in common.feature_key)": [[10, "common.feature_key.FeatureCollection", false]], "featuredict (class in common.feature_key)": [[10, "common.feature_key.FeatureDict", false]], "featurekey (class in common.feature_key)": [[10, "common.feature_key.FeatureKey", false]], "features (data.graph.edgeattribute attribute)": [[14, "data.graph.EdgeAttribute.FEATURES", false]], "features (data.io.datasets.cas.casdataset property)": [[17, "data.io.datasets.cas.CasDataset.features", false]], "features (data.io.datasets.typed_json.typedjsondatasetconfig attribute)": [[18, "data.io.datasets.typed_json.TypedJsonDatasetConfig.features", false]], "filtered_sequence_feature (data.processors.sequence.filter.filtersequence property)": [[39, "data.processors.sequence.filter.FilterSequence.filtered_sequence_feature", false]], "filterfeatures (class in data.processors.features.filter)": [[29, "data.processors.features.filter.FilterFeatures", false]], "filterfeaturesconfig (class in data.processors.features.filter)": [[29, "data.processors.features.filter.FilterFeaturesConfig", false]], "filtersequence (class in data.processors.sequence.filter)": [[39, "data.processors.sequence.filter.FilterSequence", false]], "filtersequenceconfig (class in data.processors.sequence.filter)": [[39, "data.processors.sequence.filter.FilterSequenceConfig", false]], "finalize_worker() (common.consumer.basedatasetconsumer method)": [[8, "common.consumer.BaseDatasetConsumer.finalize_worker", false]], "finalize_worker() (data.io.writers.base.basedatasetwriter method)": [[20, "data.io.writers.base.BaseDatasetWriter.finalize_worker", false]], "finalize_worker() (data.io.writers.json.jsondatasetwriter method)": [[22, "data.io.writers.json.JsonDatasetWriter.finalize_worker", false]], "flattenfeatures (class in data.processors.features.flatten)": [[30, "data.processors.features.flatten.FlattenFeatures", false]], "flattenfeaturesconfig (class in data.processors.features.flatten)": [[30, "data.processors.features.flatten.FlattenFeaturesConfig", false]], "formatfeatures (class in data.processors.features.format)": [[31, "data.processors.features.format.FormatFeatures", false]], "formatfeaturesconfig (class in data.processors.features.format)": [[31, "data.processors.features.format.FormatFeaturesConfig", false]], "frequency_penalty (data.processors.api.openai_chat.openaichatcompletionconfig attribute)": [[26, "data.processors.api.openai_chat.OpenAIChatCompletionConfig.frequency_penalty", false]], "from_config() (base.config.baseautoconfigurable class method)": [[3, "base.config.BaseAutoConfigurable.from_config", false]], "from_config() (base.config.baseconfigurable class method)": [[3, "base.config.BaseConfigurable.from_config", false]], "from_config() (data.pipe.datapipe class method)": [[23, "data.pipe.DataPipe.from_config", false]], "from_config() (data.processors.base.basedataprocessor class method)": [[27, "data.processors.base.BaseDataProcessor.from_config", false]], "from_dict() (base.config.autoconfig class method)": [[3, "base.config.AutoConfig.from_dict", false]], "from_dict() (base.config.baseconfig class method)": [[3, "base.config.BaseConfig.from_dict", false]], "from_feature_keys() (common.feature_key.featuredict static method)": [[10, "common.feature_key.FeatureDict.from_feature_keys", false]], "from_json() (base.config.autoconfig class method)": [[3, "base.config.AutoConfig.from_json", false]], "from_json() (base.config.baseconfig class method)": [[3, "base.config.BaseConfig.from_json", false]], "from_tuple() (common.feature_key.featurekey class method)": [[10, "common.feature_key.FeatureKey.from_tuple", false]], "ftype (common.feature_key.const property)": [[10, "common.feature_key.Const.ftype", false]], "function (data.processors.api.openai_chat.openaitool attribute)": [[26, "data.processors.api.openai_chat.OpenAITool.function", false]], "generic_config_type (base.config.baseconfigurable attribute)": [[3, "base.config.BaseConfigurable.generic_config_type", false]], "get() (data.processors.statistics.report.statisticsreport method)": [[51, "data.processors.statistics.report.StatisticsReport.get", false]], "get() (data.processors.statistics.report.statisticsreportstorage method)": [[51, "data.processors.statistics.report.StatisticsReportStorage.get", false]], "get_hash_register() (base.registry.typeregistry method)": [[5, "base.registry.TypeRegistry.get_hash_register", false]], "get_lock_for() (data.processors.statistics.report.statisticsreportstorage method)": [[51, "data.processors.statistics.report.StatisticsReportStorage.get_lock_for", false]], "get_nested_type() (in module common.arrow)": [[7, "common.arrow.get_nested_type", false]], "get_num_proc() (common.consumer.basedatasetconsumer method)": [[8, "common.consumer.BaseDatasetConsumer.get_num_proc", false]], "get_sequence_feature() (in module common.feature_checks)": [[9, "common.feature_checks.get_sequence_feature", false]], "get_sequence_length() (in module common.feature_checks)": [[9, "common.feature_checks.get_sequence_length", false]], "get_type_by_hash() (base.registry.rootedtyperegistryview method)": [[5, "base.registry.RootedTypeRegistryView.get_type_by_hash", false]], "get_type_by_t() (base.registry.rootedtyperegistryview method)": [[5, "base.registry.RootedTypeRegistryView.get_type_by_t", false]], "get_type_register() (base.registry.typeregistry method)": [[5, "base.registry.TypeRegistry.get_type_register", false]], "global_offsets_begin (data.processors.spans.loc_to_glob.localtoglobaloffsetsconfig attribute)": [[47, "data.processors.spans.loc_to_glob.LocalToGlobalOffsetsConfig.global_offsets_begin", false]], "hash_register (base.registry.rootedtyperegistryview property)": [[5, "base.registry.RootedTypeRegistryView.hash_register", false]], "hash_tree_bfs() (base.registry.typeregistry method)": [[5, "base.registry.TypeRegistry.hash_tree_bfs", false]], "high (data.processors.statistics.sequence.seq_len_hist.sequencelengthhistogramconfig attribute)": [[54, "data.processors.statistics.sequence.seq_len_hist.SequenceLengthHistogramConfig.high", false]], "high (data.processors.statistics.sequence.seq_val_hist.sequencevaluehistogramconfig attribute)": [[55, "data.processors.statistics.sequence.seq_val_hist.SequenceValueHistogramConfig.high", false]], "high (data.processors.statistics.value.hist.histogramconfig attribute)": [[58, "data.processors.statistics.value.hist.HistogramConfig.high", false]], "histogram (class in data.processors.statistics.value.hist)": [[58, "data.processors.statistics.value.hist.Histogram", false]], "histogramconfig (class in data.processors.statistics.value.hist)": [[58, "data.processors.statistics.value.hist.HistogramConfig", false]], "huggingfacetokenizer (class in data.processors.tokenizers.hf)": [[66, "data.processors.tokenizers.hf.HuggingFaceTokenizer", false]], "huggingfacetokenizerconfig (class in data.processors.tokenizers.hf)": [[66, "data.processors.tokenizers.hf.HuggingFaceTokenizerConfig", false]], "huggingfacetokenizeroutputs (class in data.processors.tokenizers.hf)": [[66, "data.processors.tokenizers.hf.HuggingFaceTokenizerOutputs", false]], "idx_spans_begin (data.processors.spans.apply_idx_spans.applyindexspansconfig attribute)": [[42, "data.processors.spans.apply_idx_spans.ApplyIndexSpansConfig.idx_spans_begin", false]], "idx_spans_end (data.processors.spans.apply_idx_spans.applyindexspansconfig attribute)": [[42, "data.processors.spans.apply_idx_spans.ApplyIndexSpansConfig.idx_spans_end", false]], "in_feature_sequence_length (data.processors.sequence.chunk.chunksequence property)": [[37, "data.processors.sequence.chunk.ChunkSequence.in_feature_sequence_length", false]], "in_features (data.processors.base.basedataprocessor property)": [[27, "data.processors.base.BaseDataProcessor.in_features", false]], "in_tag_prefix (data.processors.spans.from_bio.tokenspansfrombiotagsconfig attribute)": [[44, "data.processors.spans.from_bio.TokenSpansFromBioTagsConfig.in_tag_prefix", false]], "in_tag_prefix (data.processors.taggers.bio.biotaggerconfig attribute)": [[61, "data.processors.taggers.bio.BioTaggerConfig.in_tag_prefix", false]], "incremental_mean_and_std() (data.processors.statistics.value.mean_and_std.meanandstdtuple static method)": [[59, "data.processors.statistics.value.mean_and_std.MeanAndStdTuple.incremental_mean_and_std", false]], "index_batch() (common.feature_key.featurecollection method)": [[10, "common.feature_key.FeatureCollection.index_batch", false]], "index_batch() (common.feature_key.featuredict method)": [[10, "common.feature_key.FeatureDict.index_batch", false]], "index_batch() (common.feature_key.featurekey method)": [[10, "common.feature_key.FeatureKey.index_batch", false]], "index_example() (common.feature_key.featurecollection method)": [[10, "common.feature_key.FeatureCollection.index_example", false]], "index_example() (common.feature_key.featurekey method)": [[10, "common.feature_key.FeatureKey.index_example", false]], "index_features() (common.feature_key.featurecollection method)": [[10, "common.feature_key.FeatureCollection.index_features", false]], "index_features() (common.feature_key.featurekey method)": [[10, "common.feature_key.FeatureKey.index_features", false]], "initial_value() (data.processors.statistics.base.basedatastatistic method)": [[50, "data.processors.statistics.base.BaseDataStatistic.initial_value", false]], "initial_value() (data.processors.statistics.value.disc_hist.discretehistogram method)": [[57, "data.processors.statistics.value.disc_hist.DiscreteHistogram.initial_value", false]], "initial_value() (data.processors.statistics.value.hist.histogram method)": [[58, "data.processors.statistics.value.hist.Histogram.initial_value", false]], "initial_value() (data.processors.statistics.value.mean_and_std.meanandstd method)": [[59, "data.processors.statistics.value.mean_and_std.MeanAndStd.initial_value", false]], "initialize_worker() (common.consumer.basedatasetconsumer method)": [[8, "common.consumer.BaseDatasetConsumer.initialize_worker", false]], "initialize_worker() (data.io.writers.base.basedatasetwriter method)": [[20, "data.io.writers.base.BaseDatasetWriter.initialize_worker", false]], "initialize_worker() (data.io.writers.csv.csvdatasetwriter method)": [[21, "data.io.writers.csv.CsvDatasetWriter.initialize_worker", false]], "input_feature (data.graph.nodetype attribute)": [[14, "data.graph.NodeType.INPUT_FEATURE", false]], "input_ids (data.processors.tokenizers.hf.huggingfacetokenizeroutputs attribute)": [[66, "data.processors.tokenizers.hf.HuggingFaceTokenizerOutputs.INPUT_IDS", false]], "input_sequence (data.processors.taggers.bio.biotaggerconfig attribute)": [[61, "data.processors.taggers.bio.BioTaggerConfig.input_sequence", false]], "input_sequence (data.processors.taggers.relex.relextaggerconfig attribute)": [[62, "data.processors.taggers.relex.RelExTaggerConfig.input_sequence", false]], "internal_apply() (data.pipe.datapipe method)": [[23, "data.pipe.DataPipe.internal_apply", false]], "internal_batch_process() (data.pipe.datapipe method)": [[23, "data.pipe.DataPipe.internal_batch_process", false]], "internal_batch_process() (data.processors.base.basedataprocessor method)": [[27, "data.processors.base.BaseDataProcessor.internal_batch_process", false]], "internal_batch_process() (data.processors.features.format.formatfeatures method)": [[31, "data.processors.features.format.FormatFeatures.internal_batch_process", false]], "internal_batch_process() (data.processors.parsers.json.jsonparser method)": [[33, "data.processors.parsers.json.JsonParser.internal_batch_process", false]], "internal_batch_process() (data.processors.statistics.base.basedatastatistic method)": [[50, "data.processors.statistics.base.BaseDataStatistic.internal_batch_process", false]], "internal_batch_process() (data.processors.tokenizers.hf.huggingfacetokenizer method)": [[66, "data.processors.tokenizers.hf.HuggingFaceTokenizer.internal_batch_process", false]], "invalid_tag (data.processors.taggers.bio.biotagger attribute)": [[61, "data.processors.taggers.bio.BioTagger.INVALID_TAG", false]], "invalid_val (data.processors.taggers.bio.biotagger attribute)": [[61, "data.processors.taggers.bio.BioTagger.INVALID_VAL", false]], "is_active() (data.processors.statistics.report.statisticsreportmanager method)": [[51, "data.processors.statistics.report.StatisticsReportManager.is_active", false]], "is_empty() (data.processors.statistics.report.statisticsreportmanager method)": [[51, "data.processors.statistics.report.StatisticsReportManager.is_empty", false]], "is_idx_spans_inclusive (data.processors.spans.apply_idx_spans.applyindexspansconfig attribute)": [[42, "data.processors.spans.apply_idx_spans.ApplyIndexSpansConfig.is_idx_spans_inclusive", false]], "is_prepared (data.pipe.datapipe property)": [[23, "data.pipe.DataPipe.is_prepared", false]], "is_prepared (data.processors.base.basedataprocessor property)": [[27, "data.processors.base.BaseDataProcessor.is_prepared", false]], "is_queries_inclusive (data.processors.spans.idx_spans.coveredindexspansconfig attribute)": [[46, "data.processors.spans.idx_spans.CoveredIndexSpansConfig.is_queries_inclusive", false]], "is_simple (common.feature_key.featurekey property)": [[10, "common.feature_key.FeatureKey.is_simple", false]], "is_spans_inclusive (data.processors.spans.apply_idx_spans.applyindexspansconfig attribute)": [[42, "data.processors.spans.apply_idx_spans.ApplyIndexSpansConfig.is_spans_inclusive", false]], "is_spans_inclusive (data.processors.spans.idx_spans.coveredindexspansconfig attribute)": [[46, "data.processors.spans.idx_spans.CoveredIndexSpansConfig.is_spans_inclusive", false]], "is_spans_inclusive (data.processors.spans.overlaps.resolvespanoverlapsconfig attribute)": [[48, "data.processors.spans.overlaps.ResolveSpanOverlapsConfig.is_spans_inclusive", false]], "is_split_into_words (data.processors.tokenizers.hf.huggingfacetokenizerconfig attribute)": [[66, "data.processors.tokenizers.hf.HuggingFaceTokenizerConfig.is_split_into_words", false]], "iter_batch_process() (data.pipe.datapipe method)": [[23, "data.pipe.DataPipe.iter_batch_process", false]], "iter_keys_in_features() (common.feature_key.featurekey class method)": [[10, "common.feature_key.FeatureKey.iter_keys_in_features", false]], "jinja2 (class in data.processors.templates.jinja2)": [[64, "data.processors.templates.jinja2.Jinja2", false]], "jinja2config (class in data.processors.templates.jinja2)": [[64, "data.processors.templates.jinja2.Jinja2Config", false]], "joinstringsequence (class in data.processors.sequence.join_str_seq)": [[40, "data.processors.sequence.join_str_seq.JoinStringSequence", false]], "joinstringsequenceconfig (class in data.processors.sequence.join_str_seq)": [[40, "data.processors.sequence.join_str_seq.JoinStringSequenceConfig", false]], "json_str (data.processors.parsers.json.jsonparserconfig attribute)": [[33, "data.processors.parsers.json.JsonParserConfig.json_str", false]], "json_str (data.processors.parsers.repair_json.repairjsonparserconfig attribute)": [[34, "data.processors.parsers.repair_json.RepairJsonParserConfig.json_str", false]], "jsondatasetwriter (class in data.io.writers.json)": [[22, "data.io.writers.json.JsonDatasetWriter", false]], "jsonparser (class in data.processors.parsers.json)": [[33, "data.processors.parsers.json.JsonParser", false]], "jsonparserconfig (class in data.processors.parsers.json)": [[33, "data.processors.parsers.json.JsonParserConfig", false]], "keep (data.processors.features.filter.filterfeaturesconfig attribute)": [[29, "data.processors.features.filter.FilterFeaturesConfig.keep", false]], "keep_first (data.processors.spans.common.resolveoverlapsstrategy attribute)": [[43, "data.processors.spans.common.ResolveOverlapsStrategy.KEEP_FIRST", false]], "keep_input_features (data.pipe.datapipeconfig attribute)": [[23, "data.pipe.DataPipeConfig.keep_input_features", false]], "keep_input_features (data.processors.base.basedataprocessorconfig attribute)": [[27, "data.processors.base.BaseDataProcessorConfig.keep_input_features", false]], "keep_input_features (data.processors.features.filter.filterfeaturesconfig attribute)": [[29, "data.processors.features.filter.FilterFeaturesConfig.keep_input_features", false]], "keep_largest (data.processors.spans.common.resolveoverlapsstrategy attribute)": [[43, "data.processors.spans.common.ResolveOverlapsStrategy.KEEP_LARGEST", false]], "keep_last (data.processors.spans.common.resolveoverlapsstrategy attribute)": [[43, "data.processors.spans.common.ResolveOverlapsStrategy.KEEP_LAST", false]], "keep_smallest (data.processors.spans.common.resolveoverlapsstrategy attribute)": [[43, "data.processors.spans.common.ResolveOverlapsStrategy.KEEP_SMALLEST", false]], "kwargs_from_config (data.processors.tokenizers.hf.huggingfacetokenizer attribute)": [[66, "data.processors.tokenizers.hf.HuggingFaceTokenizer.KWARGS_FROM_CONFIG", false]], "kwargs_from_example (data.processors.tokenizers.hf.huggingfacetokenizer attribute)": [[66, "data.processors.tokenizers.hf.HuggingFaceTokenizer.KWARGS_FROM_EXAMPLE", false]], "label (data.graph.nodeattribute attribute)": [[14, "data.graph.NodeAttribute.LABEL", false]], "label_feature (data.processors.spans.from_bio.tokenspansfrombiotags property)": [[44, "data.processors.spans.from_bio.TokenSpansFromBioTags.label_feature", false]], "labelledspansoutputs (class in data.processors.spans.common)": [[43, "data.processors.spans.common.LabelledSpansOutputs", false]], "labels (data.processors.spans.common.labelledspansoutputs attribute)": [[43, "data.processors.spans.common.LabelledSpansOutputs.LABELS", false]], "layer (data.graph.nodeattribute attribute)": [[14, "data.graph.NodeAttribute.LAYER", false]], "lazyinstance (class in common.lazy)": [[11, "common.lazy.LazyInstance", false]], "lazysharedinstance (class in common.lazy)": [[11, "common.lazy.LazySharedInstance", false]], "length (data.processors.tokenizers.hf.huggingfacetokenizeroutputs attribute)": [[66, "data.processors.tokenizers.hf.HuggingFaceTokenizerOutputs.LENGTH", false]], "local_offsets_begin (data.processors.spans.loc_to_glob.localtoglobaloffsetsconfig attribute)": [[47, "data.processors.spans.loc_to_glob.LocalToGlobalOffsetsConfig.local_offsets_begin", false]], "local_offsets_end (data.processors.spans.loc_to_glob.localtoglobaloffsetsconfig attribute)": [[47, "data.processors.spans.loc_to_glob.LocalToGlobalOffsetsConfig.local_offsets_end", false]], "local_offsets_inclusive (data.processors.spans.loc_to_glob.localtoglobaloffsetsconfig attribute)": [[47, "data.processors.spans.loc_to_glob.LocalToGlobalOffsetsConfig.local_offsets_inclusive", false]], "local_to_global_mapping (data.processors.spans.loc_to_glob.localtoglobaloffsetsconfig attribute)": [[47, "data.processors.spans.loc_to_glob.LocalToGlobalOffsetsConfig.local_to_global_mapping", false]], "localtoglobaloffsets (class in data.processors.spans.loc_to_glob)": [[47, "data.processors.spans.loc_to_glob.LocalToGlobalOffsets", false]], "localtoglobaloffsetsconfig (class in data.processors.spans.loc_to_glob)": [[47, "data.processors.spans.loc_to_glob.LocalToGlobalOffsetsConfig", false]], "logit_bias (data.processors.api.openai_chat.openaichatcompletionconfig attribute)": [[26, "data.processors.api.openai_chat.OpenAIChatCompletionConfig.logit_bias", false]], "logprobs (data.processors.api.openai_chat.openaichatcompletionconfig attribute)": [[26, "data.processors.api.openai_chat.OpenAIChatCompletionConfig.logprobs", false]], "low (data.processors.statistics.sequence.seq_len_hist.sequencelengthhistogramconfig attribute)": [[54, "data.processors.statistics.sequence.seq_len_hist.SequenceLengthHistogramConfig.low", false]], "low (data.processors.statistics.sequence.seq_val_hist.sequencevaluehistogramconfig attribute)": [[55, "data.processors.statistics.sequence.seq_val_hist.SequenceValueHistogramConfig.low", false]], "low (data.processors.statistics.value.hist.histogramconfig attribute)": [[58, "data.processors.statistics.value.hist.HistogramConfig.low", false]], "make_spans_exclusive() (in module data.processors.spans.common)": [[43, "data.processors.spans.common.make_spans_exclusive", false]], "manager (data.processors.statistics.report.statisticsreportmanager property)": [[51, "data.processors.statistics.report.StatisticsReportManager.manager", false]], "manager (data.processors.statistics.report.statisticsreportstorage property)": [[51, "data.processors.statistics.report.StatisticsReportStorage.manager", false]], "map_features() (data.pipe.datapipe method)": [[23, "data.pipe.DataPipe.map_features", false]], "map_features() (data.processors.api.openai_chat.openaichatcompletion method)": [[26, "data.processors.api.openai_chat.OpenAIChatCompletion.map_features", false]], "map_features() (data.processors.base.basedataprocessor method)": [[27, "data.processors.base.BaseDataProcessor.map_features", false]], "map_features() (data.processors.features.filter.filterfeatures method)": [[29, "data.processors.features.filter.FilterFeatures.map_features", false]], "map_features() (data.processors.features.flatten.flattenfeatures method)": [[30, "data.processors.features.flatten.FlattenFeatures.map_features", false]], "map_features() (data.processors.features.format.formatfeatures method)": [[31, "data.processors.features.format.FormatFeatures.map_features", false]], "map_features() (data.processors.parsers.json.jsonparser method)": [[33, "data.processors.parsers.json.JsonParser.map_features", false]], "map_features() (data.processors.parsers.repair_json.repairjsonparser method)": [[34, "data.processors.parsers.repair_json.RepairJsonParser.map_features", false]], "map_features() (data.processors.sequence.apply_mask.applymask method)": [[36, "data.processors.sequence.apply_mask.ApplyMask.map_features", false]], "map_features() (data.processors.sequence.chunk.chunksequence method)": [[37, "data.processors.sequence.chunk.ChunkSequence.map_features", false]], "map_features() (data.processors.sequence.extend.extendsequence method)": [[38, "data.processors.sequence.extend.ExtendSequence.map_features", false]], "map_features() (data.processors.sequence.filter.filtersequence method)": [[39, "data.processors.sequence.filter.FilterSequence.map_features", false]], "map_features() (data.processors.sequence.join_str_seq.joinstringsequence method)": [[40, "data.processors.sequence.join_str_seq.JoinStringSequence.map_features", false]], "map_features() (data.processors.spans.apply_idx_spans.applyindexspans method)": [[42, "data.processors.spans.apply_idx_spans.ApplyIndexSpans.map_features", false]], "map_features() (data.processors.spans.from_bio.tokenspansfrombiotags method)": [[44, "data.processors.spans.from_bio.TokenSpansFromBioTags.map_features", false]], "map_features() (data.processors.spans.from_word_ids.tokenspansfromwordids method)": [[45, "data.processors.spans.from_word_ids.TokenSpansFromWordIds.map_features", false]], "map_features() (data.processors.spans.idx_spans.coveredindexspans method)": [[46, "data.processors.spans.idx_spans.CoveredIndexSpans.map_features", false]], "map_features() (data.processors.spans.loc_to_glob.localtoglobaloffsets method)": [[47, "data.processors.spans.loc_to_glob.LocalToGlobalOffsets.map_features", false]], "map_features() (data.processors.spans.overlaps.resolvespanoverlaps method)": [[48, "data.processors.spans.overlaps.ResolveSpanOverlaps.map_features", false]], "map_features() (data.processors.statistics.base.basedatastatistic method)": [[50, "data.processors.statistics.base.BaseDataStatistic.map_features", false]], "map_features() (data.processors.taggers.bio.biotagger method)": [[61, "data.processors.taggers.bio.BioTagger.map_features", false]], "map_features() (data.processors.taggers.relex.relextagger method)": [[62, "data.processors.taggers.relex.RelExTagger.map_features", false]], "map_features() (data.processors.templates.jinja2.jinja2 method)": [[64, "data.processors.templates.jinja2.Jinja2.map_features", false]], "map_features() (data.processors.tokenizers.hf.huggingfacetokenizer method)": [[66, "data.processors.tokenizers.hf.HuggingFaceTokenizer.map_features", false]], "marked_sequence (data.processors.taggers.relex.relextaggeroutputs attribute)": [[62, "data.processors.taggers.relex.RelExTaggerOutputs.MARKED_SEQUENCE", false]], "markers (data.processors.taggers.relex.relextaggerconfig property)": [[62, "data.processors.taggers.relex.RelExTaggerConfig.markers", false]], "mask (data.processors.sequence.apply_mask.applymaskconfig attribute)": [[36, "data.processors.sequence.apply_mask.ApplyMaskConfig.mask", false]], "mask (data.processors.spans.from_word_ids.tokenspansfromwordidsconfig attribute)": [[45, "data.processors.spans.from_word_ids.TokenSpansFromWordIdsConfig.mask", false]], "mask (data.processors.taggers.bio.biotaggerconfig attribute)": [[61, "data.processors.taggers.bio.BioTaggerConfig.mask", false]], "max_concurrent_calls (data.processors.api.openai_chat.openaichatcompletionconfig attribute)": [[26, "data.processors.api.openai_chat.OpenAIChatCompletionConfig.max_concurrent_calls", false]], "max_length (data.processors.statistics.sequence.seq_len_hist.sequencelengthhistogramconfig attribute)": [[54, "data.processors.statistics.sequence.seq_len_hist.SequenceLengthHistogramConfig.max_length", false]], "max_length (data.processors.tokenizers.hf.huggingfacetokenizerconfig attribute)": [[66, "data.processors.tokenizers.hf.HuggingFaceTokenizerConfig.max_length", false]], "max_retries (data.processors.api.openai_chat.openaichatcompletionconfig attribute)": [[26, "data.processors.api.openai_chat.OpenAIChatCompletionConfig.max_retries", false]], "max_seq_length_to_unpack (data.processors.features.flatten.flattenfeaturesconfig attribute)": [[30, "data.processors.features.flatten.FlattenFeaturesConfig.max_seq_length_to_unpack", false]], "max_sequence_length (data.processors.taggers.relex.relextaggerconfig attribute)": [[62, "data.processors.taggers.relex.RelExTaggerConfig.max_sequence_length", false]], "max_tokens (data.processors.api.openai_chat.openaichatcompletionconfig attribute)": [[26, "data.processors.api.openai_chat.OpenAIChatCompletionConfig.max_tokens", false]], "max_width (data.graph.processgraph property)": [[14, "data.graph.ProcessGraph.max_width", false]], "mean (data.processors.statistics.value.mean_and_std.meanandstdtuple attribute)": [[59, "data.processors.statistics.value.mean_and_std.MeanAndStdTuple.mean", false]], "meanandstd (class in data.processors.statistics.value.mean_and_std)": [[59, "data.processors.statistics.value.mean_and_std.MeanAndStd", false]], "meanandstdconfig (class in data.processors.statistics.value.mean_and_std)": [[59, "data.processors.statistics.value.mean_and_std.MeanAndStdConfig", false]], "meanandstdtuple (class in data.processors.statistics.value.mean_and_std)": [[59, "data.processors.statistics.value.mean_and_std.MeanAndStdTuple", false]], "messages (data.processors.api.openai_chat.openaichatcompletionconfig attribute)": [[26, "data.processors.api.openai_chat.OpenAIChatCompletionConfig.messages", false]], "model (data.processors.api.openai_chat.openaichatcompletionconfig attribute)": [[26, "data.processors.api.openai_chat.OpenAIChatCompletionConfig.model", false]], "model_computed_fields (base.config.baseconfig attribute)": [[3, "base.config.BaseConfig.model_computed_fields", false]], "model_computed_fields (common.feature_key.const attribute)": [[10, "common.feature_key.Const.model_computed_fields", false]], "model_computed_fields (common.feature_key.featurecollection attribute)": [[10, "common.feature_key.FeatureCollection.model_computed_fields", false]], "model_computed_fields (common.feature_key.featuredict attribute)": [[10, "common.feature_key.FeatureDict.model_computed_fields", false]], "model_computed_fields (data.pipe.datapipeconfig attribute)": [[23, "data.pipe.DataPipeConfig.model_computed_fields", false]], "model_computed_fields (data.processors.api.openai_chat.openaichatcompletionconfig attribute)": [[26, "data.processors.api.openai_chat.OpenAIChatCompletionConfig.model_computed_fields", false]], "model_computed_fields (data.processors.base.basedataprocessorconfig attribute)": [[27, "data.processors.base.BaseDataProcessorConfig.model_computed_fields", false]], "model_computed_fields (data.processors.features.filter.filterfeaturesconfig attribute)": [[29, "data.processors.features.filter.FilterFeaturesConfig.model_computed_fields", false]], "model_computed_fields (data.processors.features.flatten.flattenfeaturesconfig attribute)": [[30, "data.processors.features.flatten.FlattenFeaturesConfig.model_computed_fields", false]], "model_computed_fields (data.processors.features.format.formatfeaturesconfig attribute)": [[31, "data.processors.features.format.FormatFeaturesConfig.model_computed_fields", false]], "model_computed_fields (data.processors.parsers.json.jsonparserconfig attribute)": [[33, "data.processors.parsers.json.JsonParserConfig.model_computed_fields", false]], "model_computed_fields (data.processors.parsers.repair_json.repairjsonparserconfig attribute)": [[34, "data.processors.parsers.repair_json.RepairJsonParserConfig.model_computed_fields", false]], "model_computed_fields (data.processors.sequence.apply_mask.applymaskconfig attribute)": [[36, "data.processors.sequence.apply_mask.ApplyMaskConfig.model_computed_fields", false]], "model_computed_fields (data.processors.sequence.chunk.chunksequenceconfig attribute)": [[37, "data.processors.sequence.chunk.ChunkSequenceConfig.model_computed_fields", false]], "model_computed_fields (data.processors.sequence.extend.extendsequenceconfig attribute)": [[38, "data.processors.sequence.extend.ExtendSequenceConfig.model_computed_fields", false]], "model_computed_fields (data.processors.sequence.filter.filtersequenceconfig attribute)": [[39, "data.processors.sequence.filter.FilterSequenceConfig.model_computed_fields", false]], "model_computed_fields (data.processors.sequence.join_str_seq.joinstringsequenceconfig attribute)": [[40, "data.processors.sequence.join_str_seq.JoinStringSequenceConfig.model_computed_fields", false]], "model_computed_fields (data.processors.spans.apply_idx_spans.applyindexspansconfig attribute)": [[42, "data.processors.spans.apply_idx_spans.ApplyIndexSpansConfig.model_computed_fields", false]], "model_computed_fields (data.processors.spans.from_bio.tokenspansfrombiotagsconfig attribute)": [[44, "data.processors.spans.from_bio.TokenSpansFromBioTagsConfig.model_computed_fields", false]], "model_computed_fields (data.processors.spans.from_word_ids.tokenspansfromwordidsconfig attribute)": [[45, "data.processors.spans.from_word_ids.TokenSpansFromWordIdsConfig.model_computed_fields", false]], "model_computed_fields (data.processors.spans.idx_spans.coveredindexspansconfig attribute)": [[46, "data.processors.spans.idx_spans.CoveredIndexSpansConfig.model_computed_fields", false]], "model_computed_fields (data.processors.spans.loc_to_glob.localtoglobaloffsetsconfig attribute)": [[47, "data.processors.spans.loc_to_glob.LocalToGlobalOffsetsConfig.model_computed_fields", false]], "model_computed_fields (data.processors.spans.overlaps.resolvespanoverlapsconfig attribute)": [[48, "data.processors.spans.overlaps.ResolveSpanOverlapsConfig.model_computed_fields", false]], "model_computed_fields (data.processors.statistics.base.basedatastatisticconfig attribute)": [[50, "data.processors.statistics.base.BaseDataStatisticConfig.model_computed_fields", false]], "model_computed_fields (data.processors.statistics.sequence.disc_seq_val_hist.discretesequencevaluehistogramconfig attribute)": [[53, "data.processors.statistics.sequence.disc_seq_val_hist.DiscreteSequenceValueHistogramConfig.model_computed_fields", false]], "model_computed_fields (data.processors.statistics.sequence.seq_len_hist.sequencelengthhistogramconfig attribute)": [[54, "data.processors.statistics.sequence.seq_len_hist.SequenceLengthHistogramConfig.model_computed_fields", false]], "model_computed_fields (data.processors.statistics.sequence.seq_val_hist.sequencevaluehistogramconfig attribute)": [[55, "data.processors.statistics.sequence.seq_val_hist.SequenceValueHistogramConfig.model_computed_fields", false]], "model_computed_fields (data.processors.statistics.value.disc_hist.discretehistogramconfig attribute)": [[57, "data.processors.statistics.value.disc_hist.DiscreteHistogramConfig.model_computed_fields", false]], "model_computed_fields (data.processors.statistics.value.hist.histogramconfig attribute)": [[58, "data.processors.statistics.value.hist.HistogramConfig.model_computed_fields", false]], "model_computed_fields (data.processors.statistics.value.mean_and_std.meanandstdconfig attribute)": [[59, "data.processors.statistics.value.mean_and_std.MeanAndStdConfig.model_computed_fields", false]], "model_computed_fields (data.processors.taggers.bio.biotaggerconfig attribute)": [[61, "data.processors.taggers.bio.BioTaggerConfig.model_computed_fields", false]], "model_computed_fields (data.processors.taggers.relex.relextaggerconfig attribute)": [[62, "data.processors.taggers.relex.RelExTaggerConfig.model_computed_fields", false]], "model_computed_fields (data.processors.templates.jinja2.jinja2config attribute)": [[64, "data.processors.templates.jinja2.Jinja2Config.model_computed_fields", false]], "model_computed_fields (data.processors.tokenizers.hf.huggingfacetokenizerconfig attribute)": [[66, "data.processors.tokenizers.hf.HuggingFaceTokenizerConfig.model_computed_fields", false]], "model_config (base.config.baseconfig attribute)": [[3, "base.config.BaseConfig.model_config", false]], "model_config (common.feature_key.const attribute)": [[10, "common.feature_key.Const.model_config", false]], "model_config (common.feature_key.featurecollection attribute)": [[10, "common.feature_key.FeatureCollection.model_config", false]], "model_config (common.feature_key.featuredict attribute)": [[10, "common.feature_key.FeatureDict.model_config", false]], "model_config (data.pipe.datapipeconfig attribute)": [[23, "data.pipe.DataPipeConfig.model_config", false]], "model_config (data.processors.api.openai_chat.openaichatcompletionconfig attribute)": [[26, "data.processors.api.openai_chat.OpenAIChatCompletionConfig.model_config", false]], "model_config (data.processors.base.basedataprocessorconfig attribute)": [[27, "data.processors.base.BaseDataProcessorConfig.model_config", false]], "model_config (data.processors.features.filter.filterfeaturesconfig attribute)": [[29, "data.processors.features.filter.FilterFeaturesConfig.model_config", false]], "model_config (data.processors.features.flatten.flattenfeaturesconfig attribute)": [[30, "data.processors.features.flatten.FlattenFeaturesConfig.model_config", false]], "model_config (data.processors.features.format.formatfeaturesconfig attribute)": [[31, "data.processors.features.format.FormatFeaturesConfig.model_config", false]], "model_config (data.processors.parsers.json.jsonparserconfig attribute)": [[33, "data.processors.parsers.json.JsonParserConfig.model_config", false]], "model_config (data.processors.parsers.repair_json.repairjsonparserconfig attribute)": [[34, "data.processors.parsers.repair_json.RepairJsonParserConfig.model_config", false]], "model_config (data.processors.sequence.apply_mask.applymaskconfig attribute)": [[36, "data.processors.sequence.apply_mask.ApplyMaskConfig.model_config", false]], "model_config (data.processors.sequence.chunk.chunksequenceconfig attribute)": [[37, "data.processors.sequence.chunk.ChunkSequenceConfig.model_config", false]], "model_config (data.processors.sequence.extend.extendsequenceconfig attribute)": [[38, "data.processors.sequence.extend.ExtendSequenceConfig.model_config", false]], "model_config (data.processors.sequence.filter.filtersequenceconfig attribute)": [[39, "data.processors.sequence.filter.FilterSequenceConfig.model_config", false]], "model_config (data.processors.sequence.join_str_seq.joinstringsequenceconfig attribute)": [[40, "data.processors.sequence.join_str_seq.JoinStringSequenceConfig.model_config", false]], "model_config (data.processors.spans.apply_idx_spans.applyindexspansconfig attribute)": [[42, "data.processors.spans.apply_idx_spans.ApplyIndexSpansConfig.model_config", false]], "model_config (data.processors.spans.from_bio.tokenspansfrombiotagsconfig attribute)": [[44, "data.processors.spans.from_bio.TokenSpansFromBioTagsConfig.model_config", false]], "model_config (data.processors.spans.from_word_ids.tokenspansfromwordidsconfig attribute)": [[45, "data.processors.spans.from_word_ids.TokenSpansFromWordIdsConfig.model_config", false]], "model_config (data.processors.spans.idx_spans.coveredindexspansconfig attribute)": [[46, "data.processors.spans.idx_spans.CoveredIndexSpansConfig.model_config", false]], "model_config (data.processors.spans.loc_to_glob.localtoglobaloffsetsconfig attribute)": [[47, "data.processors.spans.loc_to_glob.LocalToGlobalOffsetsConfig.model_config", false]], "model_config (data.processors.spans.overlaps.resolvespanoverlapsconfig attribute)": [[48, "data.processors.spans.overlaps.ResolveSpanOverlapsConfig.model_config", false]], "model_config (data.processors.statistics.base.basedatastatisticconfig attribute)": [[50, "data.processors.statistics.base.BaseDataStatisticConfig.model_config", false]], "model_config (data.processors.statistics.sequence.disc_seq_val_hist.discretesequencevaluehistogramconfig attribute)": [[53, "data.processors.statistics.sequence.disc_seq_val_hist.DiscreteSequenceValueHistogramConfig.model_config", false]], "model_config (data.processors.statistics.sequence.seq_len_hist.sequencelengthhistogramconfig attribute)": [[54, "data.processors.statistics.sequence.seq_len_hist.SequenceLengthHistogramConfig.model_config", false]], "model_config (data.processors.statistics.sequence.seq_val_hist.sequencevaluehistogramconfig attribute)": [[55, "data.processors.statistics.sequence.seq_val_hist.SequenceValueHistogramConfig.model_config", false]], "model_config (data.processors.statistics.value.disc_hist.discretehistogramconfig attribute)": [[57, "data.processors.statistics.value.disc_hist.DiscreteHistogramConfig.model_config", false]], "model_config (data.processors.statistics.value.hist.histogramconfig attribute)": [[58, "data.processors.statistics.value.hist.HistogramConfig.model_config", false]], "model_config (data.processors.statistics.value.mean_and_std.meanandstdconfig attribute)": [[59, "data.processors.statistics.value.mean_and_std.MeanAndStdConfig.model_config", false]], "model_config (data.processors.taggers.bio.biotaggerconfig attribute)": [[61, "data.processors.taggers.bio.BioTaggerConfig.model_config", false]], "model_config (data.processors.taggers.relex.relextaggerconfig attribute)": [[62, "data.processors.taggers.relex.RelExTaggerConfig.model_config", false]], "model_config (data.processors.templates.jinja2.jinja2config attribute)": [[64, "data.processors.templates.jinja2.Jinja2Config.model_config", false]], "model_config (data.processors.tokenizers.hf.huggingfacetokenizerconfig attribute)": [[66, "data.processors.tokenizers.hf.HuggingFaceTokenizerConfig.model_config", false]], "model_fields (base.config.baseconfig attribute)": [[3, "base.config.BaseConfig.model_fields", false]], "model_fields (common.feature_key.const attribute)": [[10, "common.feature_key.Const.model_fields", false]], "model_fields (common.feature_key.featurecollection attribute)": [[10, "common.feature_key.FeatureCollection.model_fields", false]], "model_fields (common.feature_key.featuredict attribute)": [[10, "common.feature_key.FeatureDict.model_fields", false]], "model_fields (data.pipe.datapipeconfig attribute)": [[23, "data.pipe.DataPipeConfig.model_fields", false]], "model_fields (data.processors.api.openai_chat.openaichatcompletionconfig attribute)": [[26, "data.processors.api.openai_chat.OpenAIChatCompletionConfig.model_fields", false]], "model_fields (data.processors.base.basedataprocessorconfig attribute)": [[27, "data.processors.base.BaseDataProcessorConfig.model_fields", false]], "model_fields (data.processors.features.filter.filterfeaturesconfig attribute)": [[29, "data.processors.features.filter.FilterFeaturesConfig.model_fields", false]], "model_fields (data.processors.features.flatten.flattenfeaturesconfig attribute)": [[30, "data.processors.features.flatten.FlattenFeaturesConfig.model_fields", false]], "model_fields (data.processors.features.format.formatfeaturesconfig attribute)": [[31, "data.processors.features.format.FormatFeaturesConfig.model_fields", false]], "model_fields (data.processors.parsers.json.jsonparserconfig attribute)": [[33, "data.processors.parsers.json.JsonParserConfig.model_fields", false]], "model_fields (data.processors.parsers.repair_json.repairjsonparserconfig attribute)": [[34, "data.processors.parsers.repair_json.RepairJsonParserConfig.model_fields", false]], "model_fields (data.processors.sequence.apply_mask.applymaskconfig attribute)": [[36, "data.processors.sequence.apply_mask.ApplyMaskConfig.model_fields", false]], "model_fields (data.processors.sequence.chunk.chunksequenceconfig attribute)": [[37, "data.processors.sequence.chunk.ChunkSequenceConfig.model_fields", false]], "model_fields (data.processors.sequence.extend.extendsequenceconfig attribute)": [[38, "data.processors.sequence.extend.ExtendSequenceConfig.model_fields", false]], "model_fields (data.processors.sequence.filter.filtersequenceconfig attribute)": [[39, "data.processors.sequence.filter.FilterSequenceConfig.model_fields", false]], "model_fields (data.processors.sequence.join_str_seq.joinstringsequenceconfig attribute)": [[40, "data.processors.sequence.join_str_seq.JoinStringSequenceConfig.model_fields", false]], "model_fields (data.processors.spans.apply_idx_spans.applyindexspansconfig attribute)": [[42, "data.processors.spans.apply_idx_spans.ApplyIndexSpansConfig.model_fields", false]], "model_fields (data.processors.spans.from_bio.tokenspansfrombiotagsconfig attribute)": [[44, "data.processors.spans.from_bio.TokenSpansFromBioTagsConfig.model_fields", false]], "model_fields (data.processors.spans.from_word_ids.tokenspansfromwordidsconfig attribute)": [[45, "data.processors.spans.from_word_ids.TokenSpansFromWordIdsConfig.model_fields", false]], "model_fields (data.processors.spans.idx_spans.coveredindexspansconfig attribute)": [[46, "data.processors.spans.idx_spans.CoveredIndexSpansConfig.model_fields", false]], "model_fields (data.processors.spans.loc_to_glob.localtoglobaloffsetsconfig attribute)": [[47, "data.processors.spans.loc_to_glob.LocalToGlobalOffsetsConfig.model_fields", false]], "model_fields (data.processors.spans.overlaps.resolvespanoverlapsconfig attribute)": [[48, "data.processors.spans.overlaps.ResolveSpanOverlapsConfig.model_fields", false]], "model_fields (data.processors.statistics.base.basedatastatisticconfig attribute)": [[50, "data.processors.statistics.base.BaseDataStatisticConfig.model_fields", false]], "model_fields (data.processors.statistics.sequence.disc_seq_val_hist.discretesequencevaluehistogramconfig attribute)": [[53, "data.processors.statistics.sequence.disc_seq_val_hist.DiscreteSequenceValueHistogramConfig.model_fields", false]], "model_fields (data.processors.statistics.sequence.seq_len_hist.sequencelengthhistogramconfig attribute)": [[54, "data.processors.statistics.sequence.seq_len_hist.SequenceLengthHistogramConfig.model_fields", false]], "model_fields (data.processors.statistics.sequence.seq_val_hist.sequencevaluehistogramconfig attribute)": [[55, "data.processors.statistics.sequence.seq_val_hist.SequenceValueHistogramConfig.model_fields", false]], "model_fields (data.processors.statistics.value.disc_hist.discretehistogramconfig attribute)": [[57, "data.processors.statistics.value.disc_hist.DiscreteHistogramConfig.model_fields", false]], "model_fields (data.processors.statistics.value.hist.histogramconfig attribute)": [[58, "data.processors.statistics.value.hist.HistogramConfig.model_fields", false]], "model_fields (data.processors.statistics.value.mean_and_std.meanandstdconfig attribute)": [[59, "data.processors.statistics.value.mean_and_std.MeanAndStdConfig.model_fields", false]], "model_fields (data.processors.taggers.bio.biotaggerconfig attribute)": [[61, "data.processors.taggers.bio.BioTaggerConfig.model_fields", false]], "model_fields (data.processors.taggers.relex.relextaggerconfig attribute)": [[62, "data.processors.taggers.relex.RelExTaggerConfig.model_fields", false]], "model_fields (data.processors.templates.jinja2.jinja2config attribute)": [[64, "data.processors.templates.jinja2.Jinja2Config.model_fields", false]], "model_fields (data.processors.tokenizers.hf.huggingfacetokenizerconfig attribute)": [[66, "data.processors.tokenizers.hf.HuggingFaceTokenizerConfig.model_fields", false]], "model_post_init() (data.processors.base.basedataprocessorconfig method)": [[27, "data.processors.base.BaseDataProcessorConfig.model_post_init", false]], "model_post_init() (data.processors.statistics.sequence.seq_len_hist.sequencelengthhistogramconfig method)": [[54, "data.processors.statistics.sequence.seq_len_hist.SequenceLengthHistogramConfig.model_post_init", false]], "module": [[1, "module-base", false], [2, "module-base.auto", false], [3, "module-base.config", false], [4, "module-base.generic", false], [5, "module-base.registry", false], [6, "module-common", false], [7, "module-common.arrow", false], [8, "module-common.consumer", false], [9, "module-common.feature_checks", false], [10, "module-common.feature_key", false], [11, "module-common.lazy", false], [12, "module-common.pydantic", false], [13, "module-data", false], [14, "module-data.graph", false], [15, "module-data.io", false], [16, "module-data.io.datasets", false], [17, "module-data.io.datasets.cas", false], [18, "module-data.io.datasets.typed_json", false], [19, "module-data.io.writers", false], [20, "module-data.io.writers.base", false], [21, "module-data.io.writers.csv", false], [22, "module-data.io.writers.json", false], [23, "module-data.pipe", false], [24, "module-data.processors", false], [25, "module-data.processors.api", false], [26, "module-data.processors.api.openai_chat", false], [27, "module-data.processors.base", false], [28, "module-data.processors.features", false], [29, "module-data.processors.features.filter", false], [30, "module-data.processors.features.flatten", false], [31, "module-data.processors.features.format", false], [32, "module-data.processors.parsers", false], [33, "module-data.processors.parsers.json", false], [34, "module-data.processors.parsers.repair_json", false], [35, "module-data.processors.sequence", false], [36, "module-data.processors.sequence.apply_mask", false], [37, "module-data.processors.sequence.chunk", false], [38, "module-data.processors.sequence.extend", false], [39, "module-data.processors.sequence.filter", false], [40, "module-data.processors.sequence.join_str_seq", false], [41, "module-data.processors.spans", false], [42, "module-data.processors.spans.apply_idx_spans", false], [43, "module-data.processors.spans.common", false], [44, "module-data.processors.spans.from_bio", false], [45, "module-data.processors.spans.from_word_ids", false], [46, "module-data.processors.spans.idx_spans", false], [47, "module-data.processors.spans.loc_to_glob", false], [48, "module-data.processors.spans.overlaps", false], [49, "module-data.processors.statistics", false], [50, "module-data.processors.statistics.base", false], [51, "module-data.processors.statistics.report", false], [52, "module-data.processors.statistics.sequence", false], [53, "module-data.processors.statistics.sequence.disc_seq_val_hist", false], [54, "module-data.processors.statistics.sequence.seq_len_hist", false], [55, "module-data.processors.statistics.sequence.seq_val_hist", false], [56, "module-data.processors.statistics.value", false], [57, "module-data.processors.statistics.value.disc_hist", false], [58, "module-data.processors.statistics.value.hist", false], [59, "module-data.processors.statistics.value.mean_and_std", false], [60, "module-data.processors.taggers", false], [61, "module-data.processors.taggers.bio", false], [62, "module-data.processors.taggers.relex", false], [63, "module-data.processors.templates", false], [64, "module-data.processors.templates.jinja2", false], [65, "module-data.processors.tokenizers", false], [66, "module-data.processors.tokenizers.hf", false]], "n (data.processors.statistics.value.mean_and_std.meanandstdtuple attribute)": [[59, "data.processors.statistics.value.mean_and_std.MeanAndStdTuple.n", false]], "name (data.processors.api.openai_chat.openaitoolfunction attribute)": [[26, "data.processors.api.openai_chat.OpenAIToolFunction.name", false]], "new_features (data.pipe.datapipe property)": [[23, "data.pipe.DataPipe.new_features", false]], "new_features (data.processors.base.basedataprocessor property)": [[27, "data.processors.base.BaseDataProcessor.new_features", false]], "new_statistics_report_storage() (data.processors.statistics.report.statisticsreportmanager method)": [[51, "data.processors.statistics.report.StatisticsReportManager.new_statistics_report_storage", false]], "nodeattribute (class in data.graph)": [[14, "data.graph.NodeAttribute", false]], "nodetype (class in data.graph)": [[14, "data.graph.NodeType", false]], "num_bins (data.processors.statistics.sequence.seq_len_hist.sequencelengthhistogramconfig attribute)": [[54, "data.processors.statistics.sequence.seq_len_hist.SequenceLengthHistogramConfig.num_bins", false]], "num_bins (data.processors.statistics.sequence.seq_val_hist.sequencevaluehistogramconfig attribute)": [[55, "data.processors.statistics.sequence.seq_val_hist.SequenceValueHistogramConfig.num_bins", false]], "num_bins (data.processors.statistics.value.hist.histogramconfig attribute)": [[58, "data.processors.statistics.value.hist.HistogramConfig.num_bins", false]], "num_layers (data.graph.processgraph property)": [[14, "data.graph.ProcessGraph.num_layers", false]], "num_processes (data.io.datasets.cas.casdatasetconfig attribute)": [[17, "data.io.datasets.cas.CasDatasetConfig.num_processes", false]], "offsets_mapping (data.processors.tokenizers.hf.huggingfacetokenizeroutputs attribute)": [[66, "data.processors.tokenizers.hf.HuggingFaceTokenizerOutputs.OFFSETS_MAPPING", false]], "openaichatcompletion (class in data.processors.api.openai_chat)": [[26, "data.processors.api.openai_chat.OpenAIChatCompletion", false]], "openaichatcompletionconfig (class in data.processors.api.openai_chat)": [[26, "data.processors.api.openai_chat.OpenAIChatCompletionConfig", false]], "openaitool (class in data.processors.api.openai_chat)": [[26, "data.processors.api.openai_chat.OpenAITool", false]], "openaitoolfunction (class in data.processors.api.openai_chat)": [[26, "data.processors.api.openai_chat.OpenAIToolFunction", false]], "organization (data.processors.api.openai_chat.openaichatcompletionconfig attribute)": [[26, "data.processors.api.openai_chat.OpenAIChatCompletionConfig.organization", false]], "out_features (data.pipe.datapipe property)": [[23, "data.pipe.DataPipe.out_features", false]], "out_features (data.processors.base.basedataprocessor property)": [[27, "data.processors.base.BaseDataProcessor.out_features", false]], "out_tag (data.processors.spans.from_bio.tokenspansfrombiotagsconfig attribute)": [[44, "data.processors.spans.from_bio.TokenSpansFromBioTagsConfig.out_tag", false]], "out_tag (data.processors.taggers.bio.biotaggerconfig attribute)": [[61, "data.processors.taggers.bio.BioTaggerConfig.out_tag", false]], "output (data.processors.sequence.extend.extendsequenceconfig attribute)": [[38, "data.processors.sequence.extend.ExtendSequenceConfig.output", false]], "output (data.processors.sequence.join_str_seq.joinstringsequenceconfig attribute)": [[40, "data.processors.sequence.join_str_seq.JoinStringSequenceConfig.output", false]], "output (data.processors.templates.jinja2.jinja2config attribute)": [[64, "data.processors.templates.jinja2.Jinja2Config.output", false]], "output_feature (data.graph.nodetype attribute)": [[14, "data.graph.NodeType.OUTPUT_FEATURE", false]], "output_format (data.pipe.datapipeconfig attribute)": [[23, "data.pipe.DataPipeConfig.output_format", false]], "output_format (data.processors.base.basedataprocessorconfig attribute)": [[27, "data.processors.base.BaseDataProcessorConfig.output_format", false]], "output_format (data.processors.features.flatten.flattenfeaturesconfig attribute)": [[30, "data.processors.features.flatten.FlattenFeaturesConfig.output_format", false]], "output_format (data.processors.features.format.formatfeaturesconfig attribute)": [[31, "data.processors.features.format.FormatFeaturesConfig.output_format", false]], "output_format (data.processors.statistics.base.basedatastatisticconfig attribute)": [[50, "data.processors.statistics.base.BaseDataStatisticConfig.output_format", false]], "overflow_to_sample_mapping (data.processors.tokenizers.hf.huggingfacetokenizeroutputs attribute)": [[66, "data.processors.tokenizers.hf.HuggingFaceTokenizerOutputs.OVERFLOW_TO_SAMPLE_MAPPING", false]], "pad_to_multiple_of (data.processors.tokenizers.hf.huggingfacetokenizerconfig attribute)": [[66, "data.processors.tokenizers.hf.HuggingFaceTokenizerConfig.pad_to_multiple_of", false]], "padding (data.processors.tokenizers.hf.huggingfacetokenizerconfig attribute)": [[66, "data.processors.tokenizers.hf.HuggingFaceTokenizerConfig.padding", false]], "parameters (data.processors.api.openai_chat.openaitoolfunction attribute)": [[26, "data.processors.api.openai_chat.OpenAIToolFunction.parameters", false]], "plot() (data.graph.processgraph method)": [[14, "data.graph.ProcessGraph.plot", false]], "prepare() (data.processors.base.basedataprocessor method)": [[27, "data.processors.base.BaseDataProcessor.prepare", false]], "prepend (data.processors.sequence.extend.extendsequenceconfig attribute)": [[38, "data.processors.sequence.extend.ExtendSequenceConfig.prepend", false]], "presence_penalty (data.processors.api.openai_chat.openaichatcompletionconfig attribute)": [[26, "data.processors.api.openai_chat.OpenAIChatCompletionConfig.presence_penalty", false]], "process() (data.pipe.datapipe method)": [[23, "data.pipe.DataPipe.process", false]], "process() (data.processors.api.openai_chat.openaichatcompletion method)": [[26, "data.processors.api.openai_chat.OpenAIChatCompletion.process", false]], "process() (data.processors.base.basedataprocessor method)": [[27, "data.processors.base.BaseDataProcessor.process", false]], "process() (data.processors.features.filter.filterfeatures method)": [[29, "data.processors.features.filter.FilterFeatures.process", false]], "process() (data.processors.parsers.repair_json.repairjsonparser method)": [[34, "data.processors.parsers.repair_json.RepairJsonParser.process", false]], "process() (data.processors.sequence.apply_mask.applymask method)": [[36, "data.processors.sequence.apply_mask.ApplyMask.process", false]], "process() (data.processors.sequence.chunk.chunksequence method)": [[37, "data.processors.sequence.chunk.ChunkSequence.process", false]], "process() (data.processors.sequence.extend.extendsequence method)": [[38, "data.processors.sequence.extend.ExtendSequence.process", false]], "process() (data.processors.sequence.filter.filtersequence method)": [[39, "data.processors.sequence.filter.FilterSequence.process", false]], "process() (data.processors.sequence.join_str_seq.joinstringsequence method)": [[40, "data.processors.sequence.join_str_seq.JoinStringSequence.process", false]], "process() (data.processors.spans.apply_idx_spans.applyindexspans method)": [[42, "data.processors.spans.apply_idx_spans.ApplyIndexSpans.process", false]], "process() (data.processors.spans.from_bio.tokenspansfrombiotags method)": [[44, "data.processors.spans.from_bio.TokenSpansFromBioTags.process", false]], "process() (data.processors.spans.from_word_ids.tokenspansfromwordids method)": [[45, "data.processors.spans.from_word_ids.TokenSpansFromWordIds.process", false]], "process() (data.processors.spans.idx_spans.coveredindexspans method)": [[46, "data.processors.spans.idx_spans.CoveredIndexSpans.process", false]], "process() (data.processors.spans.loc_to_glob.localtoglobaloffsets method)": [[47, "data.processors.spans.loc_to_glob.LocalToGlobalOffsets.process", false]], "process() (data.processors.spans.overlaps.resolvespanoverlaps method)": [[48, "data.processors.spans.overlaps.ResolveSpanOverlaps.process", false]], "process() (data.processors.taggers.bio.biotagger method)": [[61, "data.processors.taggers.bio.BioTagger.process", false]], "process() (data.processors.taggers.relex.relextagger method)": [[62, "data.processors.taggers.relex.RelExTagger.process", false]], "process() (data.processors.templates.jinja2.jinja2 method)": [[64, "data.processors.templates.jinja2.Jinja2.process", false]], "processgraph (class in data.graph)": [[14, "data.graph.ProcessGraph", false]], "project (data.processors.api.openai_chat.openaichatcompletionconfig attribute)": [[26, "data.processors.api.openai_chat.OpenAIChatCompletionConfig.project", false]], "pydantic_model_from_features() (in module common.pydantic)": [[12, "common.pydantic.pydantic_model_from_features", false]], "queries_begin (data.processors.spans.idx_spans.coveredindexspansconfig attribute)": [[46, "data.processors.spans.idx_spans.CoveredIndexSpansConfig.queries_begin", false]], "queries_end (data.processors.spans.idx_spans.coveredindexspansconfig attribute)": [[46, "data.processors.spans.idx_spans.CoveredIndexSpansConfig.queries_end", false]], "raise (data.processors.spans.common.resolveoverlapsstrategy attribute)": [[43, "data.processors.spans.common.ResolveOverlapsStrategy.RAISE", false]], "raise_feature_equals() (in module common.feature_checks)": [[9, "common.feature_checks.raise_feature_equals", false]], "raise_feature_is_sequence() (in module common.feature_checks)": [[9, "common.feature_checks.raise_feature_is_sequence", false]], "raise_features_align() (in module common.feature_checks)": [[9, "common.feature_checks.raise_features_align", false]], "raise_is_simple() (common.feature_key.featurekey method)": [[10, "common.feature_key.FeatureKey.raise_is_simple", false]], "raise_object_matches_feature() (in module common.feature_checks)": [[9, "common.feature_checks.raise_object_matches_feature", false]], "rate_limit_exp_backoff (data.processors.api.openai_chat.openaichatcompletionconfig attribute)": [[26, "data.processors.api.openai_chat.OpenAIChatCompletionConfig.rate_limit_exp_backoff", false]], "rate_limit_max_retries (data.processors.api.openai_chat.openaichatcompletionconfig attribute)": [[26, "data.processors.api.openai_chat.OpenAIChatCompletionConfig.rate_limit_max_retries", false]], "raw_features (data.pipe.datapipe property)": [[23, "data.pipe.DataPipe.raw_features", false]], "raw_features (data.processors.base.basedataprocessor property)": [[27, "data.processors.base.BaseDataProcessor.raw_features", false]], "register() (data.processors.statistics.report.statisticsreportstorage method)": [[51, "data.processors.statistics.report.StatisticsReportStorage.register", false]], "register_meta_mixin (class in base.registry)": [[5, "base.registry.register_meta_mixin", false]], "register_type() (base.registry.typeregistry method)": [[5, "base.registry.TypeRegistry.register_type", false]], "register_type_meta (class in base.registry)": [[5, "base.registry.register_type_meta", false]], "registered_keys (data.processors.statistics.report.statisticsreport property)": [[51, "data.processors.statistics.report.StatisticsReport.registered_keys", false]], "registertypes (class in base.registry)": [[5, "base.registry.RegisterTypes", false]], "registrable (class in base.registry)": [[5, "base.registry.Registrable", false]], "relextagger (class in data.processors.taggers.relex)": [[62, "data.processors.taggers.relex.RelExTagger", false]], "relextaggerconfig (class in data.processors.taggers.relex)": [[62, "data.processors.taggers.relex.RelExTaggerConfig", false]], "relextaggeroutputs (class in data.processors.taggers.relex)": [[62, "data.processors.taggers.relex.RelExTaggerOutputs", false]], "remove (data.processors.features.filter.filterfeaturesconfig attribute)": [[29, "data.processors.features.filter.FilterFeaturesConfig.remove", false]], "remove_from_batch() (common.feature_key.featurekey method)": [[10, "common.feature_key.FeatureKey.remove_from_batch", false]], "remove_from_example() (common.feature_key.featurekey method)": [[10, "common.feature_key.FeatureKey.remove_from_example", false]], "remove_from_features() (common.feature_key.featurekey method)": [[10, "common.feature_key.FeatureKey.remove_from_features", false]], "repairjsonparser (class in data.processors.parsers.repair_json)": [[34, "data.processors.parsers.repair_json.RepairJsonParser", false]], "repairjsonparserconfig (class in data.processors.parsers.repair_json)": [[34, "data.processors.parsers.repair_json.RepairJsonParserConfig", false]], "reports() (data.processors.statistics.report.statisticsreportmanager method)": [[51, "data.processors.statistics.report.StatisticsReportManager.reports", false]], "required_feature_keys (data.pipe.datapipe property)": [[23, "data.pipe.DataPipe.required_feature_keys", false]], "required_feature_keys (data.processors.base.basedataprocessor property)": [[27, "data.processors.base.BaseDataProcessor.required_feature_keys", false]], "required_feature_keys (data.processors.base.basedataprocessorconfig property)": [[27, "data.processors.base.BaseDataProcessorConfig.required_feature_keys", false]], "required_feature_keys (data.processors.features.filter.filterfeatures property)": [[29, "data.processors.features.filter.FilterFeatures.required_feature_keys", false]], "required_feature_keys (data.processors.templates.jinja2.jinja2 property)": [[64, "data.processors.templates.jinja2.Jinja2.required_feature_keys", false]], "required_feature_keys (data.processors.templates.jinja2.jinja2config property)": [[64, "data.processors.templates.jinja2.Jinja2Config.required_feature_keys", false]], "resolve_overlaps() (in module data.processors.spans.common)": [[43, "data.processors.spans.common.resolve_overlaps", false]], "resolveoverlapsstrategy (class in data.processors.spans.common)": [[43, "data.processors.spans.common.ResolveOverlapsStrategy", false]], "resolvespanoverlaps (class in data.processors.spans.overlaps)": [[48, "data.processors.spans.overlaps.ResolveSpanOverlaps", false]], "resolvespanoverlapsconfig (class in data.processors.spans.overlaps)": [[48, "data.processors.spans.overlaps.ResolveSpanOverlapsConfig", false]], "response_format (data.processors.api.openai_chat.openaichatcompletionconfig attribute)": [[26, "data.processors.api.openai_chat.OpenAIChatCompletionConfig.response_format", false]], "return_attention_mask (data.processors.tokenizers.hf.huggingfacetokenizerconfig attribute)": [[66, "data.processors.tokenizers.hf.HuggingFaceTokenizerConfig.return_attention_mask", false]], "return_length (data.processors.tokenizers.hf.huggingfacetokenizerconfig attribute)": [[66, "data.processors.tokenizers.hf.HuggingFaceTokenizerConfig.return_length", false]], "return_offsets_mapping (data.processors.tokenizers.hf.huggingfacetokenizerconfig attribute)": [[66, "data.processors.tokenizers.hf.HuggingFaceTokenizerConfig.return_offsets_mapping", false]], "return_special_tokens_mask (data.processors.tokenizers.hf.huggingfacetokenizerconfig attribute)": [[66, "data.processors.tokenizers.hf.HuggingFaceTokenizerConfig.return_special_tokens_mask", false]], "return_token_type_ids (data.processors.tokenizers.hf.huggingfacetokenizerconfig attribute)": [[66, "data.processors.tokenizers.hf.HuggingFaceTokenizerConfig.return_token_type_ids", false]], "return_tokens (data.processors.tokenizers.hf.huggingfacetokenizerconfig attribute)": [[66, "data.processors.tokenizers.hf.HuggingFaceTokenizerConfig.return_tokens", false]], "return_word_ids (data.processors.tokenizers.hf.huggingfacetokenizerconfig attribute)": [[66, "data.processors.tokenizers.hf.HuggingFaceTokenizerConfig.return_word_ids", false]], "rootedtyperegistryview (class in base.registry)": [[5, "base.registry.RootedTypeRegistryView", false]], "run() (common.consumer.consumerprocess method)": [[8, "common.consumer.ConsumerProcess.run", false]], "scheme (common.feature_key.featurecollection attribute)": [[10, "common.feature_key.FeatureCollection.scheme", false]], "scheme (common.feature_key.featuredict attribute)": [[10, "common.feature_key.FeatureDict.scheme", false]], "scheme (data.processors.parsers.json.jsonparserconfig attribute)": [[33, "data.processors.parsers.json.JsonParserConfig.scheme", false]], "scheme (data.processors.parsers.repair_json.repairjsonparserconfig attribute)": [[34, "data.processors.parsers.repair_json.RepairJsonParserConfig.scheme", false]], "seed (data.processors.api.openai_chat.openaichatcompletionconfig attribute)": [[26, "data.processors.api.openai_chat.OpenAIChatCompletionConfig.seed", false]], "sequence (data.processors.sequence.chunk.chunksequenceconfig attribute)": [[37, "data.processors.sequence.chunk.ChunkSequenceConfig.sequence", false]], "sequence (data.processors.sequence.extend.extendsequenceconfig attribute)": [[38, "data.processors.sequence.extend.ExtendSequenceConfig.sequence", false]], "sequence (data.processors.sequence.filter.filtersequenceconfig attribute)": [[39, "data.processors.sequence.filter.FilterSequenceConfig.sequence", false]], "sequence (data.processors.sequence.join_str_seq.joinstringsequenceconfig attribute)": [[40, "data.processors.sequence.join_str_seq.JoinStringSequenceConfig.sequence", false]], "sequencelengthhistogram (class in data.processors.statistics.sequence.seq_len_hist)": [[54, "data.processors.statistics.sequence.seq_len_hist.SequenceLengthHistogram", false]], "sequencelengthhistogramconfig (class in data.processors.statistics.sequence.seq_len_hist)": [[54, "data.processors.statistics.sequence.seq_len_hist.SequenceLengthHistogramConfig", false]], "sequences (data.processors.sequence.apply_mask.applymaskconfig attribute)": [[36, "data.processors.sequence.apply_mask.ApplyMaskConfig.sequences", false]], "sequencevaluehistogram (class in data.processors.statistics.sequence.seq_val_hist)": [[55, "data.processors.statistics.sequence.seq_val_hist.SequenceValueHistogram", false]], "sequencevaluehistogramconfig (class in data.processors.statistics.sequence.seq_val_hist)": [[55, "data.processors.statistics.sequence.seq_val_hist.SequenceValueHistogramConfig", false]], "set() (data.processors.statistics.report.statisticsreportstorage method)": [[51, "data.processors.statistics.report.StatisticsReportStorage.set", false]], "set() (data.processors.statistics.report.syncmanager method)": [[51, "data.processors.statistics.report.SyncManager.set", false]], "short_desc() (common.consumer.consumerprocessexception method)": [[8, "common.consumer.ConsumerProcessException.short_desc", false]], "simple_subkey (common.feature_key.featurekey property)": [[10, "common.feature_key.FeatureKey.simple_subkey", false]], "skip_json_loads (data.processors.parsers.repair_json.repairjsonparserconfig attribute)": [[34, "data.processors.parsers.repair_json.RepairJsonParserConfig.skip_json_loads", false]], "solve_typevar() (in module base.generic)": [[4, "base.generic.solve_typevar", false]], "source_begin_marker (data.processors.taggers.relex.relextaggerconfig attribute)": [[62, "data.processors.taggers.relex.RelExTaggerConfig.source_begin_marker", false]], "source_end_marker (data.processors.taggers.relex.relextaggerconfig attribute)": [[62, "data.processors.taggers.relex.RelExTaggerConfig.source_end_marker", false]], "source_span_begin (data.processors.taggers.relex.relextaggerconfig attribute)": [[62, "data.processors.taggers.relex.RelExTaggerConfig.source_span_begin", false]], "source_span_end (data.processors.taggers.relex.relextaggerconfig attribute)": [[62, "data.processors.taggers.relex.RelExTaggerConfig.source_span_end", false]], "source_span_inclusive (data.processors.taggers.relex.relextaggerconfig attribute)": [[62, "data.processors.taggers.relex.RelExTaggerConfig.source_span_inclusive", false]], "spans_begin (data.processors.spans.apply_idx_spans.applyindexspansconfig attribute)": [[42, "data.processors.spans.apply_idx_spans.ApplyIndexSpansConfig.spans_begin", false]], "spans_begin (data.processors.spans.idx_spans.coveredindexspansconfig attribute)": [[46, "data.processors.spans.idx_spans.CoveredIndexSpansConfig.spans_begin", false]], "spans_begin (data.processors.spans.overlaps.resolvespanoverlapsconfig attribute)": [[48, "data.processors.spans.overlaps.ResolveSpanOverlapsConfig.spans_begin", false]], "spans_end (data.processors.spans.apply_idx_spans.applyindexspansconfig attribute)": [[42, "data.processors.spans.apply_idx_spans.ApplyIndexSpansConfig.spans_end", false]], "spans_end (data.processors.spans.idx_spans.coveredindexspansconfig attribute)": [[46, "data.processors.spans.idx_spans.CoveredIndexSpansConfig.spans_end", false]], "spans_end (data.processors.spans.overlaps.resolvespanoverlapsconfig attribute)": [[48, "data.processors.spans.overlaps.ResolveSpanOverlapsConfig.spans_end", false]], "spansoutputs (class in data.processors.spans.common)": [[43, "data.processors.spans.common.SpansOutputs", false]], "special_tokens_mask (data.processors.tokenizers.hf.huggingfacetokenizeroutputs attribute)": [[66, "data.processors.tokenizers.hf.HuggingFaceTokenizerOutputs.SPECIAL_TOKENS_MASK", false]], "statistic_key (data.processors.statistics.base.basedatastatisticconfig attribute)": [[50, "data.processors.statistics.base.BaseDataStatisticConfig.statistic_key", false]], "statisticsreport (class in data.processors.statistics.report)": [[51, "data.processors.statistics.report.StatisticsReport", false]], "statisticsreportmanager (class in data.processors.statistics.report)": [[51, "data.processors.statistics.report.StatisticsReportManager", false]], "statisticsreportmanager() (data.processors.statistics.report.syncmanager method)": [[51, "data.processors.statistics.report.SyncManager.StatisticsReportManager", false]], "statisticsreportstorage (class in data.processors.statistics.report)": [[51, "data.processors.statistics.report.StatisticsReportStorage", false]], "std (data.processors.statistics.value.mean_and_std.meanandstdtuple attribute)": [[59, "data.processors.statistics.value.mean_and_std.MeanAndStdTuple.std", false]], "stop (data.processors.api.openai_chat.openaichatcompletionconfig attribute)": [[26, "data.processors.api.openai_chat.OpenAIChatCompletionConfig.stop", false]], "strategy (data.processors.spans.overlaps.resolvespanoverlapsconfig attribute)": [[48, "data.processors.spans.overlaps.ResolveSpanOverlapsConfig.strategy", false]], "stride (data.processors.tokenizers.hf.huggingfacetokenizerconfig attribute)": [[66, "data.processors.tokenizers.hf.HuggingFaceTokenizerConfig.stride", false]], "syncmanager (class in data.processors.statistics.report)": [[51, "data.processors.statistics.report.SyncManager", false]], "tag_feature (data.processors.spans.from_bio.tokenspansfrombiotags property)": [[44, "data.processors.spans.from_bio.TokenSpansFromBioTags.tag_feature", false]], "target_begin_marker (data.processors.taggers.relex.relextaggerconfig attribute)": [[62, "data.processors.taggers.relex.RelExTaggerConfig.target_begin_marker", false]], "target_end_marker (data.processors.taggers.relex.relextaggerconfig attribute)": [[62, "data.processors.taggers.relex.RelExTaggerConfig.target_end_marker", false]], "target_span_begin (data.processors.taggers.relex.relextaggerconfig attribute)": [[62, "data.processors.taggers.relex.RelExTaggerConfig.target_span_begin", false]], "target_span_end (data.processors.taggers.relex.relextaggerconfig attribute)": [[62, "data.processors.taggers.relex.RelExTaggerConfig.target_span_end", false]], "target_span_inclusive (data.processors.taggers.relex.relextaggerconfig attribute)": [[62, "data.processors.taggers.relex.RelExTaggerConfig.target_span_inclusive", false]], "temperature (data.processors.api.openai_chat.openaichatcompletionconfig attribute)": [[26, "data.processors.api.openai_chat.OpenAIChatCompletionConfig.temperature", false]], "template (data.processors.templates.jinja2.jinja2config attribute)": [[64, "data.processors.templates.jinja2.Jinja2Config.template", false]], "text (data.processors.tokenizers.hf.huggingfacetokenizerconfig attribute)": [[66, "data.processors.tokenizers.hf.HuggingFaceTokenizerConfig.text", false]], "text_pair (data.processors.tokenizers.hf.huggingfacetokenizerconfig attribute)": [[66, "data.processors.tokenizers.hf.HuggingFaceTokenizerConfig.text_pair", false]], "text_pair_target (data.processors.tokenizers.hf.huggingfacetokenizerconfig attribute)": [[66, "data.processors.tokenizers.hf.HuggingFaceTokenizerConfig.text_pair_target", false]], "text_target (data.processors.tokenizers.hf.huggingfacetokenizerconfig attribute)": [[66, "data.processors.tokenizers.hf.HuggingFaceTokenizerConfig.text_target", false]], "timeout (data.processors.api.openai_chat.openaichatcompletionconfig attribute)": [[26, "data.processors.api.openai_chat.OpenAIChatCompletionConfig.timeout", false]], "to_dict() (base.config.baseconfig method)": [[3, "base.config.BaseConfig.to_dict", false]], "to_dict() (common.feature_key.featuredict method)": [[10, "common.feature_key.FeatureDict.to_dict", false]], "to_flatten (data.processors.features.flatten.flattenfeaturesconfig attribute)": [[30, "data.processors.features.flatten.FlattenFeaturesConfig.to_flatten", false]], "to_json() (base.config.baseconfig method)": [[3, "base.config.BaseConfig.to_json", false]], "token_type_ids (data.processors.tokenizers.hf.huggingfacetokenizeroutputs attribute)": [[66, "data.processors.tokenizers.hf.HuggingFaceTokenizerOutputs.TOKEN_TYPE_IDS", false]], "tokenizer (data.processors.tokenizers.hf.huggingfacetokenizerconfig attribute)": [[66, "data.processors.tokenizers.hf.HuggingFaceTokenizerConfig.tokenizer", false]], "tokens (data.processors.tokenizers.hf.huggingfacetokenizeroutputs attribute)": [[66, "data.processors.tokenizers.hf.HuggingFaceTokenizerOutputs.TOKENS", false]], "tokenspansfrombiotags (class in data.processors.spans.from_bio)": [[44, "data.processors.spans.from_bio.TokenSpansFromBioTags", false]], "tokenspansfrombiotagsconfig (class in data.processors.spans.from_bio)": [[44, "data.processors.spans.from_bio.TokenSpansFromBioTagsConfig", false]], "tokenspansfromwordids (class in data.processors.spans.from_word_ids)": [[45, "data.processors.spans.from_word_ids.TokenSpansFromWordIds", false]], "tokenspansfromwordidsconfig (class in data.processors.spans.from_word_ids)": [[45, "data.processors.spans.from_word_ids.TokenSpansFromWordIdsConfig", false]], "tool_choice (data.processors.api.openai_chat.openaichatcompletionconfig attribute)": [[26, "data.processors.api.openai_chat.OpenAIChatCompletionConfig.tool_choice", false]], "tools (data.processors.api.openai_chat.openaichatcompletionconfig attribute)": [[26, "data.processors.api.openai_chat.OpenAIChatCompletionConfig.tools", false]], "top_logprobs (data.processors.api.openai_chat.openaichatcompletionconfig attribute)": [[26, "data.processors.api.openai_chat.OpenAIChatCompletionConfig.top_logprobs", false]], "top_p (data.processors.api.openai_chat.openaichatcompletionconfig attribute)": [[26, "data.processors.api.openai_chat.OpenAIChatCompletionConfig.top_p", false]], "truncation (data.processors.tokenizers.hf.huggingfacetokenizerconfig attribute)": [[66, "data.processors.tokenizers.hf.HuggingFaceTokenizerConfig.truncation", false]], "type (data.graph.nodeattribute attribute)": [[14, "data.graph.NodeAttribute.TYPE", false]], "type (data.processors.api.openai_chat.openaitool attribute)": [[26, "data.processors.api.openai_chat.OpenAITool.type", false]], "type_hash (base.registry.registrable property)": [[5, "base.registry.Registrable.type_hash", false]], "type_id (base.config.baseconfigurable property)": [[3, "base.config.BaseConfigurable.type_id", false]], "type_id (base.registry.registrable property)": [[5, "base.registry.Registrable.type_id", false]], "type_ids (base.registry.rootedtyperegistryview property)": [[5, "base.registry.RootedTypeRegistryView.type_ids", false]], "type_register (base.registry.rootedtyperegistryview property)": [[5, "base.registry.RootedTypeRegistryView.type_register", false]], "type_registry (base.auto.baseautoclass property)": [[2, "base.auto.BaseAutoClass.type_registry", false]], "type_registry (base.registry.register_meta_mixin property)": [[5, "base.registry.register_meta_mixin.type_registry", false]], "typedjsondataset (class in data.io.datasets.typed_json)": [[18, "data.io.datasets.typed_json.TypedJsonDataset", false]], "typedjsondatasetconfig (class in data.io.datasets.typed_json)": [[18, "data.io.datasets.typed_json.TypedJsonDatasetConfig", false]], "typeregistry (class in base.registry)": [[5, "base.registry.TypeRegistry", false]], "types (base.registry.rootedtyperegistryview property)": [[5, "base.registry.RootedTypeRegistryView.types", false]], "typesystem (data.io.datasets.cas.casdatasetconfig attribute)": [[17, "data.io.datasets.cas.CasDatasetConfig.typesystem", false]], "unpack() (common.feature_key.featurecollection method)": [[10, "common.feature_key.FeatureCollection.unpack", false]], "update() (data.processors.statistics.base.basedatastatistic method)": [[50, "data.processors.statistics.base.BaseDataStatistic.update", false]], "update() (data.processors.statistics.value.disc_hist.discretehistogram method)": [[57, "data.processors.statistics.value.disc_hist.DiscreteHistogram.update", false]], "update() (data.processors.statistics.value.hist.histogram method)": [[58, "data.processors.statistics.value.hist.Histogram.update", false]], "valid_set (data.processors.sequence.filter.filtersequenceconfig attribute)": [[39, "data.processors.sequence.filter.FilterSequenceConfig.valid_set", false]], "valids (data.processors.sequence.filter.filtersequenceconfig attribute)": [[39, "data.processors.sequence.filter.FilterSequenceConfig.valids", false]], "value (common.feature_key.const attribute)": [[10, "common.feature_key.Const.value", false]], "word_ids (data.processors.spans.from_word_ids.tokenspansfromwordidsconfig attribute)": [[45, "data.processors.spans.from_word_ids.TokenSpansFromWordIdsConfig.word_ids", false]], "word_ids (data.processors.tokenizers.hf.huggingfacetokenizeroutputs attribute)": [[66, "data.processors.tokenizers.hf.HuggingFaceTokenizerOutputs.WORD_IDS", false]], "worker_shard_file_obj() (data.io.writers.base.basedatasetwriter method)": [[20, "data.io.writers.base.BaseDatasetWriter.worker_shard_file_obj", false]], "worker_shard_file_obj() (data.io.writers.csv.csvdatasetwriter method)": [[21, "data.io.writers.csv.CsvDatasetWriter.worker_shard_file_obj", false]], "worker_shard_file_obj() (data.io.writers.json.jsondatasetwriter method)": [[22, "data.io.writers.json.JsonDatasetWriter.worker_shard_file_obj", false]]}, "objects": {"": [[1, 0, 0, "-", "base"], [6, 0, 0, "-", "common"], [13, 0, 0, "-", "data"]], "base": [[2, 0, 0, "-", "auto"], [3, 0, 0, "-", "config"], [4, 0, 0, "-", "generic"], [5, 0, 0, "-", "registry"]], "base.auto": [[2, 1, 1, "", "BaseAutoClass"]], "base.auto.BaseAutoClass": [[2, 2, 1, "", "type_registry"]], "base.config": [[3, 1, 1, "", "AutoConfig"], [3, 1, 1, "", "BaseAutoConfigurable"], [3, 1, 1, "", "BaseConfig"], [3, 1, 1, "", "BaseConfigurable"], [3, 1, 1, "", "Factory"]], "base.config.AutoConfig": [[3, 3, 1, "", "from_dict"], [3, 3, 1, "", "from_json"]], "base.config.BaseAutoConfigurable": [[3, 3, 1, "", "from_config"]], "base.config.BaseConfig": [[3, 3, 1, "", "from_dict"], [3, 3, 1, "", "from_json"], [3, 4, 1, "", "model_computed_fields"], [3, 4, 1, "", "model_config"], [3, 4, 1, "", "model_fields"], [3, 3, 1, "", "to_dict"], [3, 3, 1, "", "to_json"]], "base.config.BaseConfigurable": [[3, 4, 1, "", "CONFIG_TYPE"], [3, 4, 1, "", "config_type"], [3, 3, 1, "", "from_config"], [3, 4, 1, "", "generic_config_type"], [3, 2, 1, "", "type_id"]], "base.config.Factory": [[3, 2, 1, "", "config"], [3, 3, 1, "", "create"]], "base.generic": [[4, 5, 1, "", "solve_typevar"]], "base.registry": [[5, 1, 1, "", "RegisterTypes"], [5, 1, 1, "", "Registrable"], [5, 1, 1, "", "RootedTypeRegistryView"], [5, 1, 1, "", "TypeRegistry"], [5, 6, 1, "", "default_registry"], [5, 1, 1, "", "register_meta_mixin"], [5, 1, 1, "", "register_type_meta"]], "base.registry.Registrable": [[5, 2, 1, "", "type_hash"], [5, 2, 1, "", "type_id"]], "base.registry.RootedTypeRegistryView": [[5, 2, 1, "", "concrete_types"], [5, 3, 1, "", "get_type_by_hash"], [5, 3, 1, "", "get_type_by_t"], [5, 2, 1, "", "hash_register"], [5, 2, 1, "", "type_ids"], [5, 2, 1, "", "type_register"], [5, 2, 1, "", "types"]], "base.registry.TypeRegistry": [[5, 3, 1, "", "get_hash_register"], [5, 3, 1, "", "get_type_register"], [5, 3, 1, "", "hash_tree_bfs"], [5, 3, 1, "", "register_type"]], "base.registry.register_meta_mixin": [[5, 2, 1, "", "type_registry"]], "common": [[7, 0, 0, "-", "arrow"], [8, 0, 0, "-", "consumer"], [9, 0, 0, "-", "feature_checks"], [10, 0, 0, "-", "feature_key"], [11, 0, 0, "-", "lazy"], [12, 0, 0, "-", "pydantic"]], "common.arrow": [[7, 5, 1, "", "convert_features_to_arrow_schema"], [7, 5, 1, "", "get_nested_type"]], "common.consumer": [[8, 1, 1, "", "BaseDatasetConsumer"], [8, 1, 1, "", "ConsumerProcess"], [8, 7, 1, "", "ConsumerProcessException"], [8, 7, 1, "", "ConsumerProcessExceptionGroup"]], "common.consumer.BaseDatasetConsumer": [[8, 3, 1, "", "consume"], [8, 3, 1, "", "consume_example"], [8, 3, 1, "", "finalize_worker"], [8, 3, 1, "", "get_num_proc"], [8, 3, 1, "", "initialize_worker"]], "common.consumer.ConsumerProcess": [[8, 2, 1, "", "exception"], [8, 3, 1, "", "run"]], "common.consumer.ConsumerProcessException": [[8, 3, 1, "", "short_desc"]], "common.feature_checks": [[9, 5, 1, "", "check_feature_equals"], [9, 5, 1, "", "check_feature_is_sequence"], [9, 5, 1, "", "check_object_matches_feature"], [9, 5, 1, "", "check_sequence_lengths_match"], [9, 5, 1, "", "get_sequence_feature"], [9, 5, 1, "", "get_sequence_length"], [9, 5, 1, "", "raise_feature_equals"], [9, 5, 1, "", "raise_feature_is_sequence"], [9, 5, 1, "", "raise_features_align"], [9, 5, 1, "", "raise_object_matches_feature"]], "common.feature_key": [[10, 1, 1, "", "Const"], [10, 1, 1, "", "FeatureCollection"], [10, 1, 1, "", "FeatureDict"], [10, 1, 1, "", "FeatureKey"]], "common.feature_key.Const": [[10, 2, 1, "", "ftype"], [10, 4, 1, "", "model_computed_fields"], [10, 4, 1, "", "model_config"], [10, 4, 1, "", "model_fields"], [10, 4, 1, "", "value"]], "common.feature_key.FeatureCollection": [[10, 2, 1, "", "feature_keys"], [10, 3, 1, "", "index_batch"], [10, 3, 1, "", "index_example"], [10, 3, 1, "", "index_features"], [10, 4, 1, "", "model_computed_fields"], [10, 4, 1, "", "model_config"], [10, 4, 1, "", "model_fields"], [10, 4, 1, "", "scheme"], [10, 3, 1, "", "unpack"]], "common.feature_key.FeatureDict": [[10, 3, 1, "", "from_feature_keys"], [10, 3, 1, "", "index_batch"], [10, 4, 1, "", "model_computed_fields"], [10, 4, 1, "", "model_config"], [10, 4, 1, "", "model_fields"], [10, 4, 1, "", "scheme"], [10, 3, 1, "", "to_dict"]], "common.feature_key.FeatureKey": [[10, 3, 1, "", "cutoff_at_slice"], [10, 3, 1, "", "from_tuple"], [10, 3, 1, "", "index_batch"], [10, 3, 1, "", "index_example"], [10, 3, 1, "", "index_features"], [10, 2, 1, "", "is_simple"], [10, 3, 1, "", "iter_keys_in_features"], [10, 3, 1, "", "raise_is_simple"], [10, 3, 1, "", "remove_from_batch"], [10, 3, 1, "", "remove_from_example"], [10, 3, 1, "", "remove_from_features"], [10, 2, 1, "", "simple_subkey"]], "common.lazy": [[11, 1, 1, "", "LazyInstance"], [11, 1, 1, "", "LazySharedInstance"]], "common.pydantic": [[12, 5, 1, "", "pydantic_model_from_features"]], "data": [[14, 0, 0, "-", "graph"], [15, 0, 0, "-", "io"], [23, 0, 0, "-", "pipe"], [24, 0, 0, "-", "processors"]], "data.graph": [[14, 1, 1, "", "EdgeAttribute"], [14, 1, 1, "", "NodeAttribute"], [14, 1, 1, "", "NodeType"], [14, 1, 1, "", "ProcessGraph"]], "data.graph.EdgeAttribute": [[14, 4, 1, "", "FEATURES"]], "data.graph.NodeAttribute": [[14, 4, 1, "", "EXECUTION_INDEX"], [14, 4, 1, "", "LABEL"], [14, 4, 1, "", "LAYER"], [14, 4, 1, "", "TYPE"]], "data.graph.NodeType": [[14, 4, 1, "", "DATA_PROCESSOR"], [14, 4, 1, "", "DATA_STATISTIC"], [14, 4, 1, "", "INPUT_FEATURE"], [14, 4, 1, "", "OUTPUT_FEATURE"]], "data.graph.ProcessGraph": [[14, 3, 1, "", "build_process_graph"], [14, 2, 1, "", "max_width"], [14, 2, 1, "", "num_layers"], [14, 3, 1, "", "plot"]], "data.io": [[16, 0, 0, "-", "datasets"], [19, 0, 0, "-", "writers"]], "data.io.datasets": [[17, 0, 0, "-", "cas"], [18, 0, 0, "-", "typed_json"]], "data.io.datasets.cas": [[17, 1, 1, "", "CasDataset"], [17, 1, 1, "", "CasDatasetConfig"]], "data.io.datasets.cas.CasDataset": [[17, 4, 1, "", "BUILDER_CONFIG_CLASS"], [17, 2, 1, "", "features"]], "data.io.datasets.cas.CasDatasetConfig": [[17, 4, 1, "", "annotation_types"], [17, 4, 1, "", "num_processes"], [17, 4, 1, "", "typesystem"]], "data.io.datasets.typed_json": [[18, 1, 1, "", "TypedJsonDataset"], [18, 1, 1, "", "TypedJsonDatasetConfig"]], "data.io.datasets.typed_json.TypedJsonDataset": [[18, 4, 1, "", "BUILDER_CONFIG_CLASS"]], "data.io.datasets.typed_json.TypedJsonDatasetConfig": [[18, 4, 1, "", "features"]], "data.io.writers": [[20, 0, 0, "-", "base"], [21, 0, 0, "-", "csv"], [22, 0, 0, "-", "json"]], "data.io.writers.base": [[20, 1, 1, "", "BaseDatasetWriter"]], "data.io.writers.base.BaseDatasetWriter": [[20, 3, 1, "", "finalize_worker"], [20, 3, 1, "", "initialize_worker"], [20, 3, 1, "", "worker_shard_file_obj"]], "data.io.writers.csv": [[21, 1, 1, "", "CsvDatasetWriter"]], "data.io.writers.csv.CsvDatasetWriter": [[21, 3, 1, "", "consume"], [21, 3, 1, "", "consume_example"], [21, 3, 1, "", "initialize_worker"], [21, 3, 1, "", "worker_shard_file_obj"]], "data.io.writers.json": [[22, 1, 1, "", "JsonDatasetWriter"]], "data.io.writers.json.JsonDatasetWriter": [[22, 3, 1, "", "consume_example"], [22, 3, 1, "", "finalize_worker"], [22, 3, 1, "", "worker_shard_file_obj"]], "data.pipe": [[23, 1, 1, "", "DataPipe"], [23, 1, 1, "", "DataPipeConfig"]], "data.pipe.DataPipe": [[23, 3, 1, "", "apply"], [23, 3, 1, "", "batch_process"], [23, 3, 1, "", "from_config"], [23, 3, 1, "", "internal_apply"], [23, 3, 1, "", "internal_batch_process"], [23, 2, 1, "", "is_prepared"], [23, 3, 1, "", "iter_batch_process"], [23, 3, 1, "", "map_features"], [23, 2, 1, "", "new_features"], [23, 2, 1, "", "out_features"], [23, 3, 1, "", "process"], [23, 2, 1, "", "raw_features"], [23, 2, 1, "", "required_feature_keys"]], "data.pipe.DataPipeConfig": [[23, 4, 1, "", "keep_input_features"], [23, 4, 1, "", "model_computed_fields"], [23, 4, 1, "", "model_config"], [23, 4, 1, "", "model_fields"], [23, 4, 1, "", "output_format"]], "data.processors": [[25, 0, 0, "-", "api"], [27, 0, 0, "-", "base"], [28, 0, 0, "-", "features"], [32, 0, 0, "-", "parsers"], [35, 0, 0, "-", "sequence"], [41, 0, 0, "-", "spans"], [49, 0, 0, "-", "statistics"], [60, 0, 0, "-", "taggers"], [63, 0, 0, "-", "templates"], [65, 0, 0, "-", "tokenizers"]], "data.processors.api": [[26, 0, 0, "-", "openai_chat"]], "data.processors.api.openai_chat": [[26, 1, 1, "", "OpenAIChatCompletion"], [26, 1, 1, "", "OpenAIChatCompletionConfig"], [26, 1, 1, "", "OpenAITool"], [26, 1, 1, "", "OpenAIToolFunction"]], "data.processors.api.openai_chat.OpenAIChatCompletion": [[26, 3, 1, "", "api_call"], [26, 3, 1, "", "map_features"], [26, 3, 1, "", "process"]], "data.processors.api.openai_chat.OpenAIChatCompletionConfig": [[26, 4, 1, "", "api_key"], [26, 4, 1, "", "base_url"], [26, 4, 1, "", "default_headers"], [26, 4, 1, "", "default_query"], [26, 4, 1, "", "extra_body"], [26, 4, 1, "", "extra_headers"], [26, 4, 1, "", "extra_query"], [26, 4, 1, "", "frequency_penalty"], [26, 4, 1, "", "logit_bias"], [26, 4, 1, "", "logprobs"], [26, 4, 1, "", "max_concurrent_calls"], [26, 4, 1, "", "max_retries"], [26, 4, 1, "", "max_tokens"], [26, 4, 1, "", "messages"], [26, 4, 1, "", "model"], [26, 4, 1, "", "model_computed_fields"], [26, 4, 1, "", "model_config"], [26, 4, 1, "", "model_fields"], [26, 4, 1, "", "organization"], [26, 4, 1, "", "presence_penalty"], [26, 4, 1, "", "project"], [26, 4, 1, "", "rate_limit_exp_backoff"], [26, 4, 1, "", "rate_limit_max_retries"], [26, 4, 1, "", "response_format"], [26, 4, 1, "", "seed"], [26, 4, 1, "", "stop"], [26, 4, 1, "", "temperature"], [26, 4, 1, "", "timeout"], [26, 4, 1, "", "tool_choice"], [26, 4, 1, "", "tools"], [26, 4, 1, "", "top_logprobs"], [26, 4, 1, "", "top_p"]], "data.processors.api.openai_chat.OpenAITool": [[26, 4, 1, "", "function"], [26, 4, 1, "", "type"]], "data.processors.api.openai_chat.OpenAIToolFunction": [[26, 4, 1, "", "description"], [26, 4, 1, "", "name"], [26, 4, 1, "", "parameters"]], "data.processors.base": [[27, 1, 1, "", "BaseDataProcessor"], [27, 1, 1, "", "BaseDataProcessorConfig"]], "data.processors.base.BaseDataProcessor": [[27, 3, 1, "", "batch_process"], [27, 2, 1, "", "config"], [27, 3, 1, "", "from_config"], [27, 2, 1, "", "in_features"], [27, 3, 1, "", "internal_batch_process"], [27, 2, 1, "", "is_prepared"], [27, 3, 1, "", "map_features"], [27, 2, 1, "", "new_features"], [27, 2, 1, "", "out_features"], [27, 3, 1, "", "prepare"], [27, 3, 1, "", "process"], [27, 2, 1, "", "raw_features"], [27, 2, 1, "", "required_feature_keys"]], "data.processors.base.BaseDataProcessorConfig": [[27, 4, 1, "", "keep_input_features"], [27, 4, 1, "", "model_computed_fields"], [27, 4, 1, "", "model_config"], [27, 4, 1, "", "model_fields"], [27, 3, 1, "", "model_post_init"], [27, 4, 1, "", "output_format"], [27, 2, 1, "", "required_feature_keys"]], "data.processors.features": [[29, 0, 0, "-", "filter"], [30, 0, 0, "-", "flatten"], [31, 0, 0, "-", "format"]], "data.processors.features.filter": [[29, 1, 1, "", "FilterFeatures"], [29, 1, 1, "", "FilterFeaturesConfig"]], "data.processors.features.filter.FilterFeatures": [[29, 3, 1, "", "map_features"], [29, 3, 1, "", "process"], [29, 2, 1, "", "required_feature_keys"]], "data.processors.features.filter.FilterFeaturesConfig": [[29, 4, 1, "", "keep"], [29, 4, 1, "", "keep_input_features"], [29, 4, 1, "", "model_computed_fields"], [29, 4, 1, "", "model_config"], [29, 4, 1, "", "model_fields"], [29, 4, 1, "", "remove"]], "data.processors.features.flatten": [[30, 1, 1, "", "FlattenFeatures"], [30, 1, 1, "", "FlattenFeaturesConfig"]], "data.processors.features.flatten.FlattenFeatures": [[30, 4, 1, "", "CONFIG_TYPE"], [30, 3, 1, "", "map_features"]], "data.processors.features.flatten.FlattenFeaturesConfig": [[30, 4, 1, "", "delimiter"], [30, 4, 1, "", "depth"], [30, 4, 1, "", "max_seq_length_to_unpack"], [30, 4, 1, "", "model_computed_fields"], [30, 4, 1, "", "model_config"], [30, 4, 1, "", "model_fields"], [30, 4, 1, "", "output_format"], [30, 4, 1, "", "to_flatten"]], "data.processors.features.format": [[31, 1, 1, "", "FormatFeatures"], [31, 1, 1, "", "FormatFeaturesConfig"]], "data.processors.features.format.FormatFeatures": [[31, 3, 1, "", "internal_batch_process"], [31, 3, 1, "", "map_features"]], "data.processors.features.format.FormatFeaturesConfig": [[31, 4, 1, "", "model_computed_fields"], [31, 4, 1, "", "model_config"], [31, 4, 1, "", "model_fields"], [31, 4, 1, "", "output_format"]], "data.processors.parsers": [[33, 0, 0, "-", "json"], [34, 0, 0, "-", "repair_json"]], "data.processors.parsers.json": [[33, 1, 1, "", "JsonParser"], [33, 1, 1, "", "JsonParserConfig"]], "data.processors.parsers.json.JsonParser": [[33, 3, 1, "", "internal_batch_process"], [33, 3, 1, "", "map_features"]], "data.processors.parsers.json.JsonParserConfig": [[33, 4, 1, "", "json_str"], [33, 4, 1, "", "model_computed_fields"], [33, 4, 1, "", "model_config"], [33, 4, 1, "", "model_fields"], [33, 4, 1, "", "scheme"]], "data.processors.parsers.repair_json": [[34, 1, 1, "", "RepairJsonParser"], [34, 1, 1, "", "RepairJsonParserConfig"]], "data.processors.parsers.repair_json.RepairJsonParser": [[34, 3, 1, "", "map_features"], [34, 3, 1, "", "process"]], "data.processors.parsers.repair_json.RepairJsonParserConfig": [[34, 4, 1, "", "json_str"], [34, 4, 1, "", "model_computed_fields"], [34, 4, 1, "", "model_config"], [34, 4, 1, "", "model_fields"], [34, 4, 1, "", "scheme"], [34, 4, 1, "", "skip_json_loads"]], "data.processors.sequence": [[36, 0, 0, "-", "apply_mask"], [37, 0, 0, "-", "chunk"], [38, 0, 0, "-", "extend"], [39, 0, 0, "-", "filter"], [40, 0, 0, "-", "join_str_seq"]], "data.processors.sequence.apply_mask": [[36, 1, 1, "", "ApplyMask"], [36, 1, 1, "", "ApplyMaskConfig"]], "data.processors.sequence.apply_mask.ApplyMask": [[36, 3, 1, "", "map_features"], [36, 3, 1, "", "process"]], "data.processors.sequence.apply_mask.ApplyMaskConfig": [[36, 4, 1, "", "mask"], [36, 4, 1, "", "model_computed_fields"], [36, 4, 1, "", "model_config"], [36, 4, 1, "", "model_fields"], [36, 4, 1, "", "sequences"]], "data.processors.sequence.chunk": [[37, 1, 1, "", "ChunkSequence"], [37, 1, 1, "", "ChunkSequenceConfig"]], "data.processors.sequence.chunk.ChunkSequence": [[37, 2, 1, "", "in_feature_sequence_length"], [37, 3, 1, "", "map_features"], [37, 3, 1, "", "process"]], "data.processors.sequence.chunk.ChunkSequenceConfig": [[37, 4, 1, "", "chunk_size"], [37, 4, 1, "", "chunk_stride"], [37, 4, 1, "", "drop_last"], [37, 4, 1, "", "model_computed_fields"], [37, 4, 1, "", "model_config"], [37, 4, 1, "", "model_fields"], [37, 4, 1, "", "sequence"]], "data.processors.sequence.extend": [[38, 1, 1, "", "ExtendSequence"], [38, 1, 1, "", "ExtendSequenceConfig"]], "data.processors.sequence.extend.ExtendSequence": [[38, 3, 1, "", "map_features"], [38, 3, 1, "", "process"]], "data.processors.sequence.extend.ExtendSequenceConfig": [[38, 4, 1, "", "append"], [38, 4, 1, "", "model_computed_fields"], [38, 4, 1, "", "model_config"], [38, 4, 1, "", "model_fields"], [38, 4, 1, "", "output"], [38, 4, 1, "", "prepend"], [38, 4, 1, "", "sequence"]], "data.processors.sequence.filter": [[39, 1, 1, "", "FilterSequence"], [39, 1, 1, "", "FilterSequenceConfig"]], "data.processors.sequence.filter.FilterSequence": [[39, 2, 1, "", "filtered_sequence_feature"], [39, 3, 1, "", "map_features"], [39, 3, 1, "", "process"]], "data.processors.sequence.filter.FilterSequenceConfig": [[39, 4, 1, "", "model_computed_fields"], [39, 4, 1, "", "model_config"], [39, 4, 1, "", "model_fields"], [39, 4, 1, "", "sequence"], [39, 4, 1, "", "valid_set"], [39, 4, 1, "", "valids"]], "data.processors.sequence.join_str_seq": [[40, 1, 1, "", "JoinStringSequence"], [40, 1, 1, "", "JoinStringSequenceConfig"]], "data.processors.sequence.join_str_seq.JoinStringSequence": [[40, 3, 1, "", "map_features"], [40, 3, 1, "", "process"]], "data.processors.sequence.join_str_seq.JoinStringSequenceConfig": [[40, 4, 1, "", "delimiter"], [40, 4, 1, "", "model_computed_fields"], [40, 4, 1, "", "model_config"], [40, 4, 1, "", "model_fields"], [40, 4, 1, "", "output"], [40, 4, 1, "", "sequence"]], "data.processors.spans": [[42, 0, 0, "-", "apply_idx_spans"], [43, 0, 0, "-", "common"], [44, 0, 0, "-", "from_bio"], [45, 0, 0, "-", "from_word_ids"], [46, 0, 0, "-", "idx_spans"], [47, 0, 0, "-", "loc_to_glob"], [48, 0, 0, "-", "overlaps"]], "data.processors.spans.apply_idx_spans": [[42, 1, 1, "", "ApplyIndexSpans"], [42, 1, 1, "", "ApplyIndexSpansConfig"]], "data.processors.spans.apply_idx_spans.ApplyIndexSpans": [[42, 3, 1, "", "map_features"], [42, 3, 1, "", "process"]], "data.processors.spans.apply_idx_spans.ApplyIndexSpansConfig": [[42, 4, 1, "", "idx_spans_begin"], [42, 4, 1, "", "idx_spans_end"], [42, 4, 1, "", "is_idx_spans_inclusive"], [42, 4, 1, "", "is_spans_inclusive"], [42, 4, 1, "", "model_computed_fields"], [42, 4, 1, "", "model_config"], [42, 4, 1, "", "model_fields"], [42, 4, 1, "", "spans_begin"], [42, 4, 1, "", "spans_end"]], "data.processors.spans.common": [[43, 1, 1, "", "LabelledSpansOutputs"], [43, 1, 1, "", "ResolveOverlapsStrategy"], [43, 1, 1, "", "SpansOutputs"], [43, 5, 1, "", "compute_spans_overlap_matrix"], [43, 5, 1, "", "make_spans_exclusive"], [43, 5, 1, "", "resolve_overlaps"]], "data.processors.spans.common.LabelledSpansOutputs": [[43, 4, 1, "", "BEGINS"], [43, 4, 1, "", "ENDS"], [43, 4, 1, "", "LABELS"]], "data.processors.spans.common.ResolveOverlapsStrategy": [[43, 4, 1, "", "APPROX"], [43, 4, 1, "", "KEEP_FIRST"], [43, 4, 1, "", "KEEP_LARGEST"], [43, 4, 1, "", "KEEP_LAST"], [43, 4, 1, "", "KEEP_SMALLEST"], [43, 4, 1, "", "RAISE"]], "data.processors.spans.common.SpansOutputs": [[43, 4, 1, "", "BEGINS"], [43, 4, 1, "", "ENDS"]], "data.processors.spans.from_bio": [[44, 1, 1, "", "TokenSpansFromBioTags"], [44, 1, 1, "", "TokenSpansFromBioTagsConfig"]], "data.processors.spans.from_bio.TokenSpansFromBioTags": [[44, 2, 1, "", "label_feature"], [44, 3, 1, "", "map_features"], [44, 3, 1, "", "process"], [44, 2, 1, "", "tag_feature"]], "data.processors.spans.from_bio.TokenSpansFromBioTagsConfig": [[44, 4, 1, "", "begin_tag_prefix"], [44, 4, 1, "", "bio_tags"], [44, 4, 1, "", "in_tag_prefix"], [44, 4, 1, "", "model_computed_fields"], [44, 4, 1, "", "model_config"], [44, 4, 1, "", "model_fields"], [44, 4, 1, "", "out_tag"]], "data.processors.spans.from_word_ids": [[45, 1, 1, "", "TokenSpansFromWordIds"], [45, 1, 1, "", "TokenSpansFromWordIdsConfig"]], "data.processors.spans.from_word_ids.TokenSpansFromWordIds": [[45, 3, 1, "", "map_features"], [45, 3, 1, "", "process"]], "data.processors.spans.from_word_ids.TokenSpansFromWordIdsConfig": [[45, 4, 1, "", "mask"], [45, 4, 1, "", "model_computed_fields"], [45, 4, 1, "", "model_config"], [45, 4, 1, "", "model_fields"], [45, 4, 1, "", "word_ids"]], "data.processors.spans.idx_spans": [[46, 1, 1, "", "CoveredIndexSpans"], [46, 1, 1, "", "CoveredIndexSpansConfig"]], "data.processors.spans.idx_spans.CoveredIndexSpans": [[46, 3, 1, "", "map_features"], [46, 3, 1, "", "process"]], "data.processors.spans.idx_spans.CoveredIndexSpansConfig": [[46, 4, 1, "", "is_queries_inclusive"], [46, 4, 1, "", "is_spans_inclusive"], [46, 4, 1, "", "model_computed_fields"], [46, 4, 1, "", "model_config"], [46, 4, 1, "", "model_fields"], [46, 4, 1, "", "queries_begin"], [46, 4, 1, "", "queries_end"], [46, 4, 1, "", "spans_begin"], [46, 4, 1, "", "spans_end"]], "data.processors.spans.loc_to_glob": [[47, 1, 1, "", "LocalToGlobalOffsets"], [47, 1, 1, "", "LocalToGlobalOffsetsConfig"]], "data.processors.spans.loc_to_glob.LocalToGlobalOffsets": [[47, 3, 1, "", "map_features"], [47, 3, 1, "", "process"]], "data.processors.spans.loc_to_glob.LocalToGlobalOffsetsConfig": [[47, 4, 1, "", "global_offsets_begin"], [47, 4, 1, "", "local_offsets_begin"], [47, 4, 1, "", "local_offsets_end"], [47, 4, 1, "", "local_offsets_inclusive"], [47, 4, 1, "", "local_to_global_mapping"], [47, 4, 1, "", "model_computed_fields"], [47, 4, 1, "", "model_config"], [47, 4, 1, "", "model_fields"]], "data.processors.spans.overlaps": [[48, 1, 1, "", "ResolveSpanOverlaps"], [48, 1, 1, "", "ResolveSpanOverlapsConfig"]], "data.processors.spans.overlaps.ResolveSpanOverlaps": [[48, 3, 1, "", "map_features"], [48, 3, 1, "", "process"]], "data.processors.spans.overlaps.ResolveSpanOverlapsConfig": [[48, 4, 1, "", "is_spans_inclusive"], [48, 4, 1, "", "model_computed_fields"], [48, 4, 1, "", "model_config"], [48, 4, 1, "", "model_fields"], [48, 4, 1, "", "spans_begin"], [48, 4, 1, "", "spans_end"], [48, 4, 1, "", "strategy"]], "data.processors.statistics": [[50, 0, 0, "-", "base"], [51, 0, 0, "-", "report"], [52, 0, 0, "-", "sequence"], [56, 0, 0, "-", "value"]], "data.processors.statistics.base": [[50, 1, 1, "", "BaseDataStatistic"], [50, 1, 1, "", "BaseDataStatisticConfig"]], "data.processors.statistics.base.BaseDataStatistic": [[50, 3, 1, "", "check_features"], [50, 3, 1, "", "compute"], [50, 3, 1, "", "extract"], [50, 3, 1, "", "initial_value"], [50, 3, 1, "", "internal_batch_process"], [50, 3, 1, "", "map_features"], [50, 3, 1, "", "update"]], "data.processors.statistics.base.BaseDataStatisticConfig": [[50, 4, 1, "", "model_computed_fields"], [50, 4, 1, "", "model_config"], [50, 4, 1, "", "model_fields"], [50, 4, 1, "", "output_format"], [50, 4, 1, "", "statistic_key"]], "data.processors.statistics.report": [[51, 1, 1, "", "StatisticsReport"], [51, 1, 1, "", "StatisticsReportManager"], [51, 1, 1, "", "StatisticsReportStorage"], [51, 1, 1, "", "SyncManager"]], "data.processors.statistics.report.StatisticsReport": [[51, 3, 1, "", "activate"], [51, 3, 1, "", "deactivate"], [51, 3, 1, "", "get"], [51, 2, 1, "", "registered_keys"]], "data.processors.statistics.report.StatisticsReportManager": [[51, 3, 1, "", "activate"], [51, 3, 1, "", "deactivate"], [51, 3, 1, "", "is_active"], [51, 3, 1, "", "is_empty"], [51, 2, 1, "", "manager"], [51, 3, 1, "", "new_statistics_report_storage"], [51, 3, 1, "", "reports"]], "data.processors.statistics.report.StatisticsReportStorage": [[51, 3, 1, "", "get"], [51, 3, 1, "", "get_lock_for"], [51, 2, 1, "", "manager"], [51, 3, 1, "", "register"], [51, 3, 1, "", "set"]], "data.processors.statistics.report.SyncManager": [[51, 3, 1, "", "StatisticsReportManager"], [51, 3, 1, "", "set"]], "data.processors.statistics.sequence": [[53, 0, 0, "-", "disc_seq_val_hist"], [54, 0, 0, "-", "seq_len_hist"], [55, 0, 0, "-", "seq_val_hist"]], "data.processors.statistics.sequence.disc_seq_val_hist": [[53, 1, 1, "", "DiscreteSequenceValueHistogram"], [53, 1, 1, "", "DiscreteSequenceValueHistogramConfig"]], "data.processors.statistics.sequence.disc_seq_val_hist.DiscreteSequenceValueHistogram": [[53, 4, 1, "", "CONFIG_TYPE"], [53, 3, 1, "", "check_features"], [53, 3, 1, "", "extract"]], "data.processors.statistics.sequence.disc_seq_val_hist.DiscreteSequenceValueHistogramConfig": [[53, 4, 1, "", "feature_key"], [53, 4, 1, "", "model_computed_fields"], [53, 4, 1, "", "model_config"], [53, 4, 1, "", "model_fields"]], "data.processors.statistics.sequence.seq_len_hist": [[54, 1, 1, "", "SequenceLengthHistogram"], [54, 1, 1, "", "SequenceLengthHistogramConfig"]], "data.processors.statistics.sequence.seq_len_hist.SequenceLengthHistogram": [[54, 4, 1, "", "CONFIG_TYPE"], [54, 3, 1, "", "check_features"], [54, 3, 1, "", "extract"]], "data.processors.statistics.sequence.seq_len_hist.SequenceLengthHistogramConfig": [[54, 4, 1, "", "high"], [54, 4, 1, "", "low"], [54, 4, 1, "", "max_length"], [54, 4, 1, "", "model_computed_fields"], [54, 4, 1, "", "model_config"], [54, 4, 1, "", "model_fields"], [54, 3, 1, "", "model_post_init"], [54, 4, 1, "", "num_bins"]], "data.processors.statistics.sequence.seq_val_hist": [[55, 1, 1, "", "SequenceValueHistogram"], [55, 1, 1, "", "SequenceValueHistogramConfig"]], "data.processors.statistics.sequence.seq_val_hist.SequenceValueHistogram": [[55, 4, 1, "", "CONFIG_TYPE"], [55, 3, 1, "", "check_features"], [55, 3, 1, "", "extract"]], "data.processors.statistics.sequence.seq_val_hist.SequenceValueHistogramConfig": [[55, 4, 1, "", "feature_key"], [55, 4, 1, "", "high"], [55, 4, 1, "", "low"], [55, 4, 1, "", "model_computed_fields"], [55, 4, 1, "", "model_config"], [55, 4, 1, "", "model_fields"], [55, 4, 1, "", "num_bins"]], "data.processors.statistics.value": [[57, 0, 0, "-", "disc_hist"], [58, 0, 0, "-", "hist"], [59, 0, 0, "-", "mean_and_std"]], "data.processors.statistics.value.disc_hist": [[57, 1, 1, "", "DiscreteHistogram"], [57, 1, 1, "", "DiscreteHistogramConfig"]], "data.processors.statistics.value.disc_hist.DiscreteHistogram": [[57, 3, 1, "", "check_features"], [57, 3, 1, "", "compute"], [57, 3, 1, "", "extract"], [57, 3, 1, "", "initial_value"], [57, 3, 1, "", "update"]], "data.processors.statistics.value.disc_hist.DiscreteHistogramConfig": [[57, 4, 1, "", "feature_key"], [57, 4, 1, "", "model_computed_fields"], [57, 4, 1, "", "model_config"], [57, 4, 1, "", "model_fields"]], "data.processors.statistics.value.hist": [[58, 1, 1, "", "Histogram"], [58, 1, 1, "", "HistogramConfig"]], "data.processors.statistics.value.hist.Histogram": [[58, 3, 1, "", "check_features"], [58, 3, 1, "", "compute"], [58, 3, 1, "", "extract"], [58, 3, 1, "", "initial_value"], [58, 3, 1, "", "update"]], "data.processors.statistics.value.hist.HistogramConfig": [[58, 4, 1, "", "feature_key"], [58, 4, 1, "", "high"], [58, 4, 1, "", "low"], [58, 4, 1, "", "model_computed_fields"], [58, 4, 1, "", "model_config"], [58, 4, 1, "", "model_fields"], [58, 4, 1, "", "num_bins"]], "data.processors.statistics.value.mean_and_std": [[59, 1, 1, "", "MeanAndStd"], [59, 1, 1, "", "MeanAndStdConfig"], [59, 1, 1, "", "MeanAndStdTuple"]], "data.processors.statistics.value.mean_and_std.MeanAndStd": [[59, 3, 1, "", "check_features"], [59, 3, 1, "", "compute"], [59, 3, 1, "", "extract"], [59, 3, 1, "", "initial_value"]], "data.processors.statistics.value.mean_and_std.MeanAndStdConfig": [[59, 4, 1, "", "feature_key"], [59, 4, 1, "", "model_computed_fields"], [59, 4, 1, "", "model_config"], [59, 4, 1, "", "model_fields"]], "data.processors.statistics.value.mean_and_std.MeanAndStdTuple": [[59, 3, 1, "", "incremental_mean_and_std"], [59, 4, 1, "", "mean"], [59, 4, 1, "", "n"], [59, 4, 1, "", "std"]], "data.processors.taggers": [[61, 0, 0, "-", "bio"], [62, 0, 0, "-", "relex"]], "data.processors.taggers.bio": [[61, 1, 1, "", "BioTagger"], [61, 1, 1, "", "BioTaggerConfig"], [61, 1, 1, "", "BioTaggerOutputs"]], "data.processors.taggers.bio.BioTagger": [[61, 4, 1, "", "INVALID_TAG"], [61, 4, 1, "", "INVALID_VAL"], [61, 2, 1, "", "bio_label_space"], [61, 2, 1, "", "entity_label_space"], [61, 3, 1, "", "map_features"], [61, 3, 1, "", "process"]], "data.processors.taggers.bio.BioTaggerConfig": [[61, 4, 1, "", "begin_tag_prefix"], [61, 4, 1, "", "entity_spans_begin"], [61, 4, 1, "", "entity_spans_end"], [61, 4, 1, "", "entity_spans_inclusive"], [61, 4, 1, "", "entity_spans_label"], [61, 4, 1, "", "in_tag_prefix"], [61, 4, 1, "", "input_sequence"], [61, 4, 1, "", "mask"], [61, 4, 1, "", "model_computed_fields"], [61, 4, 1, "", "model_config"], [61, 4, 1, "", "model_fields"], [61, 4, 1, "", "out_tag"]], "data.processors.taggers.bio.BioTaggerOutputs": [[61, 4, 1, "", "BIO_TAGS"]], "data.processors.taggers.relex": [[62, 1, 1, "", "RelExTagger"], [62, 1, 1, "", "RelExTaggerConfig"], [62, 1, 1, "", "RelExTaggerOutputs"]], "data.processors.taggers.relex.RelExTagger": [[62, 3, 1, "", "map_features"], [62, 3, 1, "", "process"]], "data.processors.taggers.relex.RelExTaggerConfig": [[62, 4, 1, "", "input_sequence"], [62, 2, 1, "", "markers"], [62, 4, 1, "", "max_sequence_length"], [62, 4, 1, "", "model_computed_fields"], [62, 4, 1, "", "model_config"], [62, 4, 1, "", "model_fields"], [62, 4, 1, "", "source_begin_marker"], [62, 4, 1, "", "source_end_marker"], [62, 4, 1, "", "source_span_begin"], [62, 4, 1, "", "source_span_end"], [62, 4, 1, "", "source_span_inclusive"], [62, 4, 1, "", "target_begin_marker"], [62, 4, 1, "", "target_end_marker"], [62, 4, 1, "", "target_span_begin"], [62, 4, 1, "", "target_span_end"], [62, 4, 1, "", "target_span_inclusive"]], "data.processors.taggers.relex.RelExTaggerOutputs": [[62, 4, 1, "", "MARKED_SEQUENCE"]], "data.processors.templates": [[64, 0, 0, "-", "jinja2"]], "data.processors.templates.jinja2": [[64, 1, 1, "", "Jinja2"], [64, 1, 1, "", "Jinja2Config"], [64, 5, 1, "", "build_sample"]], "data.processors.templates.jinja2.Jinja2": [[64, 3, 1, "", "map_features"], [64, 3, 1, "", "process"], [64, 2, 1, "", "required_feature_keys"]], "data.processors.templates.jinja2.Jinja2Config": [[64, 4, 1, "", "model_computed_fields"], [64, 4, 1, "", "model_config"], [64, 4, 1, "", "model_fields"], [64, 4, 1, "", "output"], [64, 2, 1, "", "required_feature_keys"], [64, 4, 1, "", "template"]], "data.processors.tokenizers": [[66, 0, 0, "-", "hf"]], "data.processors.tokenizers.hf": [[66, 1, 1, "", "HuggingFaceTokenizer"], [66, 1, 1, "", "HuggingFaceTokenizerConfig"], [66, 1, 1, "", "HuggingFaceTokenizerOutputs"]], "data.processors.tokenizers.hf.HuggingFaceTokenizer": [[66, 4, 1, "", "KWARGS_FROM_CONFIG"], [66, 4, 1, "", "KWARGS_FROM_EXAMPLE"], [66, 3, 1, "", "internal_batch_process"], [66, 3, 1, "", "map_features"]], "data.processors.tokenizers.hf.HuggingFaceTokenizerConfig": [[66, 4, 1, "", "add_special_tokens"], [66, 4, 1, "", "boxes"], [66, 4, 1, "", "is_split_into_words"], [66, 4, 1, "", "max_length"], [66, 4, 1, "", "model_computed_fields"], [66, 4, 1, "", "model_config"], [66, 4, 1, "", "model_fields"], [66, 4, 1, "", "pad_to_multiple_of"], [66, 4, 1, "", "padding"], [66, 4, 1, "", "return_attention_mask"], [66, 4, 1, "", "return_length"], [66, 4, 1, "", "return_offsets_mapping"], [66, 4, 1, "", "return_special_tokens_mask"], [66, 4, 1, "", "return_token_type_ids"], [66, 4, 1, "", "return_tokens"], [66, 4, 1, "", "return_word_ids"], [66, 4, 1, "", "stride"], [66, 4, 1, "", "text"], [66, 4, 1, "", "text_pair"], [66, 4, 1, "", "text_pair_target"], [66, 4, 1, "", "text_target"], [66, 4, 1, "", "tokenizer"], [66, 4, 1, "", "truncation"]], "data.processors.tokenizers.hf.HuggingFaceTokenizerOutputs": [[66, 4, 1, "", "ATTENTION_MASK"], [66, 4, 1, "", "INPUT_IDS"], [66, 4, 1, "", "LENGTH"], [66, 4, 1, "", "OFFSETS_MAPPING"], [66, 4, 1, "", "OVERFLOW_TO_SAMPLE_MAPPING"], [66, 4, 1, "", "SPECIAL_TOKENS_MASK"], [66, 4, 1, "", "TOKENS"], [66, 4, 1, "", "TOKEN_TYPE_IDS"], [66, 4, 1, "", "WORD_IDS"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:property", "3": "py:method", "4": "py:attribute", "5": "py:function", "6": "py:data", "7": "py:exception"}, "terms": {"": [0, 9, 21, 22, 23, 26, 27, 37, 42, 46, 59, 64, 68, 69, 70, 71, 73], "0": [8, 10, 14, 17, 18, 20, 21, 22, 26, 51, 54, 59, 66, 68, 70], "0125": 26, "1": [9, 10, 14, 26, 30, 42, 43, 46, 47, 51, 61, 62, 66, 68, 70], "10": [10, 14, 26], "100": [26, 61], "10000": 14, "10485760": 18, "128": [26, 71], "16": 68, "1a598a0dfd699f7a7ebe9eb6273fb5ac4b9e519a": 7, "2": [8, 10, 20, 21, 22, 26, 70], "20": 26, "25": 14, "3": 26, "32": [68, 71], "4": [10, 17, 71], "5": 26, "8": [10, 18, 26, 30], "A": [3, 9, 10, 14, 23, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66, 68, 69, 70], "As": [10, 50], "By": [26, 27, 30, 50, 69, 70], "For": [14, 26, 48, 66, 69, 71], "If": [9, 10, 26, 27, 30, 44, 45, 68, 69], "In": [44, 61, 64, 69, 70, 71, 73], "It": [7, 10, 14, 23, 27, 50, 51, 68, 69], "Not": 64, "On": 27, "Ons": 72, "That": [42, 46], "The": [3, 5, 8, 10, 11, 14, 17, 18, 21, 22, 26, 27, 31, 36, 39, 43, 44, 50, 57, 58, 61, 64, 68, 69, 70, 73], "Then": [10, 42, 46, 71], "These": [27, 50], "To": 69, "With": 72, "_0": [42, 46], "_1": [42, 46], "__context": 27, "__fields__": [3, 10, 23, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66], "__init__": [68, 69], "__type_hash__": 3, "_begin": 47, "_begin_i": 47, "_end_i": 47, "_global": 47, "_io": [20, 21, 22], "_k": [42, 46], "_mapping_i": 47, "_offset": 47, "_scalartype_co": [54, 55, 58], "_sequencelengthhistogramconfig__context": 54, "_to": 47, "_to_glob": 47, "a_": [42, 46], "a_i": [42, 46], "ab": 59, "abc": [3, 5, 8, 20, 27], "abcmeta": 5, "about": [3, 10, 23, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66, 68, 73], "abstract": [3, 5, 8, 20, 27, 50], "acceler": 68, "access": [5, 64, 68, 69, 71, 72], "accord": [10, 31, 37, 64, 71, 72], "accross": 5, "accumul": 47, "acquir": 50, "across": [0, 68, 72, 73], "act": 7, "activ": [49, 50, 51, 66], "actual": [8, 31, 50, 69], "ad": [0, 40, 57, 58], "adapt": 72, "add": [26, 51, 66, 71, 72], "add_special_token": [65, 66], "addit": [0, 26, 68, 69], "addition": [68, 71], "address": 51, "adher": 62, "adjac": 40, "advanc": [68, 71], "after": [8, 11, 27, 68], "aggreg": 73, "aim": 48, "alia": [3, 17, 18, 30, 53, 54, 55], "align": [9, 27], "all": [5, 8, 10, 11, 14, 17, 23, 27, 30, 31, 33, 37, 39, 45, 50, 58, 59, 68, 69], "allow": [5, 57, 58, 68, 69, 70, 71, 72], "alon": 69, "alreadi": [21, 22, 26, 66], "also": [9, 10, 23, 39, 48, 68, 72], "altern": [26, 71], "an": [8, 21, 22, 26, 27, 36, 37, 42, 43, 44, 45, 46, 47, 48, 50, 61, 68, 69, 70, 73], "analys": 4, "analysi": 71, "ani": [3, 8, 9, 10, 18, 20, 21, 22, 23, 26, 27, 29, 31, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66, 69, 70], "annot": [10, 17, 23, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66], "annotation_typ": [16, 17], "answer": 46, "api": [0, 13, 24, 69], "api_cal": [25, 26], "api_kei": [25, 26], "appear": 26, "append": [3, 35, 38], "appli": [10, 13, 23, 27, 36, 42, 43, 44, 45, 46, 47, 48, 59, 61, 64, 66, 69, 71, 72, 73], "applic": [68, 71], "apply_idx_span": [24, 41], "apply_mask": [24, 35], "applyindexspan": [24, 41, 42], "applyindexspansconfig": [24, 41, 42], "applymask": [24, 35, 36], "applymaskconfig": [24, 35, 36], "approach": 70, "appropri": [3, 17, 18, 23, 27], "approx": [41, 43, 48], "approxim": 43, "ar": [0, 14, 17, 18, 26, 27, 29, 37, 39, 42, 43, 44, 45, 46, 47, 48, 50, 51, 61, 62, 64, 66, 68, 69, 70, 71, 73], "arbitrari": [9, 43], "arbitrary_types_allow": 66, "area": 10, "arg": [8, 27, 51], "argument": [3, 4, 5, 7, 8, 9, 10, 12, 14, 17, 18, 20, 21, 22, 23, 26, 27, 29, 30, 31, 33, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66], "around": 62, "arrai": [54, 55, 58], "array2d": [7, 9, 10, 33, 34, 64], "array3d": [7, 9, 10, 33, 34, 64], "array4d": [7, 9, 10, 33, 34, 64], "array5d": [7, 9, 10, 33, 34, 64], "arrow": [6, 14, 67], "arrow_schema": 7, "arrows": 14, "associ": 26, "assum": [33, 34], "async": [26, 27, 69], "async_batch_process": 27, "async_gen_batch_process": 27, "asynchron": 69, "atom": 73, "attent": 66, "attention_mask": [65, 66, 69], "attr": 5, "attribut": [14, 17, 18, 26, 27, 29, 30, 31, 33, 34, 36, 37, 39, 40, 42, 44, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66, 68, 69], "audio": [7, 9, 10, 33, 34, 64], "augment": [27, 69], "authkei": 51, "auto": [1, 3, 26, 67], "autoconfig": [1, 3, 67], "autom": 68, "automat": 5, "autotoken": 66, "avail": [5, 21, 22, 23, 27, 66, 68, 71, 72], "availabel": 66, "avoid": 72, "ax": 14, "b": [9, 10, 42, 44, 46, 59, 61, 68, 70], "b_k": [42, 46], "back": 8, "backend": 33, "backoff": 26, "bar": [21, 22], "base": [8, 10, 11, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 26, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66, 67, 69, 71, 72], "base_path": [17, 18], "base_url": [25, 26], "baseautoclass": [1, 2, 3, 67], "baseautoconfigur": [1, 3, 67], "baseconfig": [1, 3, 27, 67], "baseconfigur": [1, 3, 27, 67], "basedataprocessor": [13, 23, 24, 26, 27, 29, 31, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 50, 61, 62, 64, 66, 69], "basedataprocessorconfig": [13, 23, 24, 26, 27, 29, 31, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 50, 61, 62, 64, 66, 69], "basedatasetconsum": [6, 8, 20, 67], "basedatasetwrit": [15, 19, 20, 21, 22], "basedatastatist": [24, 49, 50, 57, 58, 59], "basedatastatisticconfig": [24, 49, 50, 57, 58, 59], "basemodel": [3, 10, 12, 27], "basic": [8, 26, 27, 50, 72], "batch": [10, 23, 27, 33, 50, 53, 54, 55, 57, 58, 59, 66, 68, 69, 70, 72], "batch_process": [13, 23, 24, 27, 72], "batch_siz": [68, 71], "becaus": 70, "been": 71, "befor": [8, 27], "beg": 62, "begin": [27, 41, 42, 43, 44, 46, 47, 48, 61, 62], "begin_tag_prefix": [41, 44, 60, 61], "behav": 27, "behavior": [50, 69, 71, 72], "behind": 10, "being": [57, 58, 70], "belong": 69, "below": [69, 71, 72], "bert": [66, 69, 71], "best": [0, 26], "between": [14, 26, 40, 43, 48, 51, 57, 58, 62], "bin": [54, 55, 58], "bin_count": [54, 55, 58], "bin_id": [54, 55, 58], "binari": 43, "bio": [24, 44, 60], "bio_label_spac": [60, 61], "bio_tag": [41, 44, 60, 61], "biotagg": [24, 60, 61], "biotaggerconfig": [24, 60, 61], "biotaggeroutput": [24, 60, 61], "blob": 7, "block": 50, "block_siz": 18, "bool": [9, 10, 14, 17, 18, 20, 21, 22, 23, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66], "boolean": [9, 10, 27, 43, 51], "both": [10, 27, 29, 70], "boundari": [14, 43, 61, 62, 66], "box": [65, 66, 72], "breadth": 5, "broken": 34, "build": [3, 10, 12, 14, 45, 53, 54, 55, 57, 58, 64, 70], "build_batch": 10, "build_featur": 10, "build_process_graph": [13, 14], "build_sampl": [10, 24, 63, 64], "builder_config_class": [16, 17, 18], "builderconfig": 17, "built": [68, 72], "c": [10, 68], "ca": [15, 16], "cache_dir": [17, 18], "call": [3, 9, 17, 18, 26, 27, 66], "callabl": 11, "can": [0, 4, 10, 11, 26, 27, 42, 46, 51, 68, 69, 70, 71, 72], "capabl": [0, 68, 70], "casdataset": [15, 16, 17], "casdatasetconfig": [15, 16, 17], "case": [5, 8, 26, 31, 64, 68, 69, 70, 72], "categori": [69, 73], "cd": 71, "chain": 68, "chang": 50, "charact": [40, 46, 47, 66], "characterist": 73, "chat": 26, "check": [9, 10, 18, 23, 26, 27, 36, 37, 42, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 57, 58, 59, 61, 64, 66, 69, 71], "check_featur": [49, 50, 52, 53, 54, 55, 56, 57, 58, 59], "check_feature_equ": [6, 9, 67], "check_feature_is_sequ": [6, 9, 67], "check_object_matches_featur": [6, 9, 67], "check_sequence_lengths_match": [6, 9, 67], "choos": 0, "chunk": [24, 35], "chunk_featur": 37, "chunk_siz": [35, 37], "chunk_strid": [35, 37], "chunksequ": [24, 35, 37], "chunksequenceconfig": [24, 35, 37], "chunksiz": 18, "class": [2, 3, 5, 8, 10, 11, 14, 17, 18, 20, 21, 22, 23, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66, 68, 69, 70, 71], "classlabel": [7, 9, 10, 33, 34, 39, 44, 53, 57, 61, 64], "classmethod": [3, 10, 23, 27], "classvar": [3, 10, 23, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66], "cleanup": [20, 22], "client": 26, "clone": 71, "close": [20, 22], "cluster": 0, "code": [0, 5, 71], "collect": [8, 10, 26, 36, 68, 69, 72, 73], "color": 14, "color_map": 14, "column": [43, 45, 61, 62, 64, 66], "com": [7, 71], "combin": [59, 70], "come": 72, "common": [24, 41, 46, 67, 69, 72], "commun": 0, "compar": 9, "compat": [26, 68], "compil": 5, "complet": [26, 27], "complex": [10, 50, 70, 72], "compon": 70, "comprehens": 68, "compris": 26, "comput": [0, 3, 5, 10, 14, 23, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 66, 68, 72], "computation": 68, "compute_spans_overlap_matrix": [24, 41, 43], "computedfieldinfo": [3, 10, 23, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66], "concaten": 40, "concept": [10, 70], "concret": 5, "concrete_typ": [1, 5], "concurr": 26, "config": [1, 10, 23, 24, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66, 67, 69], "config_kwarg": [17, 18], "config_nam": [17, 18], "config_typ": [1, 3, 28, 30, 52, 53, 54, 55], "configdict": [3, 10, 23, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66], "configur": [3, 10, 17, 18, 23, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66, 70, 72], "confirm": 9, "conflict": 27, "conform": [3, 10, 23, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66], "consid": [9, 10, 26, 45], "consist": [10, 14, 68], "const": [6, 10, 26, 67, 70], "constant": [10, 50, 70], "constraint": 68, "construct": [3, 10, 69, 70], "consum": [6, 19, 20, 21, 22, 67, 68, 71], "consume_exampl": [6, 8, 19, 21, 22], "consumerprocess": [6, 8, 67], "consumerprocessexcept": [6, 8, 67], "consumerprocessexceptiongroup": [6, 8, 67], "contain": [10, 14, 17, 27, 37, 42, 44, 45, 46, 47, 48, 54, 55, 58, 59, 61, 62, 64, 66, 69, 70], "content": [26, 67], "context": [27, 51], "control": [26, 66, 70], "conveni": 68, "convers": [7, 46, 47], "convert": [3, 7, 10, 39, 43, 44, 45, 47, 61], "convert_features_to_arrow_schema": [6, 7, 67], "coordin": [42, 46, 48, 61, 62], "copi": [57, 58], "core": [21, 22, 27, 68, 71], "coroutin": 69, "correct": 26, "correspond": [3, 5, 10, 23, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66, 69, 70], "count": [54, 55, 57, 58], "counter": 10, "cover": 46, "coveredindexspan": [24, 41, 42, 46], "coveredindexspansconfig": [24, 41, 46], "cpu": [21, 22, 68, 71], "creat": [1, 3, 11, 12, 40, 51, 64, 68, 69, 70], "crucial": [70, 73], "csv": [15, 19], "csvdatasetwrit": [15, 19, 21], "ctx": 51, "current": [5, 8, 21, 22, 26, 47, 50, 57, 58, 59], "custom": [14, 16, 51, 68, 71, 72], "customiz": 68, "cut_kei": 10, "cutoff": 10, "cutoff_at_slic": [6, 10], "d": [10, 68, 71, 73], "data": [0, 8, 67, 70, 72, 73], "data_dir": [17, 18], "data_fil": [17, 18], "data_processor": [13, 14], "data_statist": [13, 14], "dataaset": 61, "datafilesdict": [17, 18], "datafilespatternsdict": [17, 18], "datapip": [13, 14, 23, 67, 68, 69, 71, 73], "datapipeconfig": [13, 23, 67], "datapoint": 64, "dataset": [7, 8, 10, 12, 13, 15, 19, 20, 21, 22, 23, 26, 27, 29, 30, 31, 33, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66, 68, 69, 70, 71, 72, 73], "dataset_nam": [17, 18], "datasetdict": 23, "datasetinfo": [17, 18], "datasettyp": 23, "datatyp": 7, "dct": 3, "deactiv": [49, 51, 66], "deal": 72, "decis": 73, "decreas": 26, "dedic": 51, "deeper": 70, "def": [27, 69], "defail": [17, 18], "default": [5, 10, 14, 17, 18, 21, 22, 23, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66, 69], "default_factori": 39, "default_head": [25, 26], "default_queri": [25, 26], "default_registri": [1, 5, 67], "defin": [3, 5, 10, 14, 23, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66, 68, 69, 70, 71, 72, 73], "definit": 9, "delimit": [28, 30, 35, 40], "delv": 70, "demand": 72, "demonstr": [69, 73], "depend": [69, 71], "deprec": [17, 18], "depth": [10, 28, 30], "describ": [26, 31, 69], "descript": [10, 17, 18, 25, 26], "deseri": 3, "design": [70, 72], "desir": [69, 71], "detail": [14, 73], "detect": 43, "determinist": 26, "develop": [0, 71], "deviat": [59, 72], "dict": [3, 5, 7, 8, 9, 10, 14, 17, 18, 20, 21, 22, 23, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66, 68, 69, 70], "dictionari": [3, 10, 23, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66, 69, 70], "dicz": 57, "differ": [7, 70, 72], "digraph": 14, "direct": 14, "directli": [27, 34, 50, 64, 71], "directori": [21, 22], "disc_hist": [49, 56], "disc_seq_val_hist": [49, 52], "discard": 39, "discret": [53, 57], "discretehistogram": [49, 53, 56, 57], "discretehistogramconfig": [49, 53, 56, 57], "discretesequencevaluehistogram": [49, 52, 53], "discretesequencevaluehistogramconfig": [49, 52, 53], "disk": [20, 21, 22, 68, 71], "dist": 10, "distanc": 62, "distinct": 73, "distribut": [0, 59, 72, 73], "divers": 72, "do": 50, "document": [18, 26, 50, 66, 68, 69], "doe": [10, 50], "doesn": [7, 9], "domain": [42, 46, 69, 72], "don": [9, 69], "done": 31, "doubl": 7, "downstream": 71, "draw": 14, "drop_last": [35, 37], "dtype": [54, 55, 58], "due": 50, "dump": [3, 68, 71], "durat": 26, "dure": 8, "duti": 7, "dynam": 70, "e": [3, 5, 10, 23, 26, 27, 29, 31, 42, 46, 47, 51, 53, 57, 62, 68, 71], "e_k": [42, 46], "each": [9, 10, 23, 26, 27, 36, 47, 57, 58, 61, 66, 68, 69, 70, 71, 72], "eas": [68, 72], "easili": 68, "ecosystem": [68, 72], "edg": 14, "edge_featur": 14, "edgeattribut": [13, 14, 67], "effect": [42, 66, 69, 70], "effici": [68, 71, 72], "effort": 26, "effortlessli": 71, "either": [26, 27, 42, 43, 46, 66], "element": [27, 47], "empti": [27, 50, 68], "enabl": [26, 68, 69, 70, 71, 72, 73], "encapsul": 69, "encod": [18, 21, 22], "encoding_error": 18, "end": [27, 41, 42, 43, 46, 47, 48, 55, 58, 61, 62], "endpoint": 0, "enhanc": [0, 68], "ensur": [7, 68, 70, 72], "entir": 73, "entiti": [44, 46, 61, 62], "entity_label_spac": [60, 61], "entity_spans_begin": [60, 61], "entity_spans_end": [60, 61], "entity_spans_inclus": [60, 61], "entity_spans_label": [60, 61], "entri": 10, "enum": [14, 43, 61, 62, 66], "enumer": [14, 50, 61, 62, 66], "environ": [26, 72], "equal": 9, "equat": 46, "error": [9, 26], "especi": 8, "essenti": [68, 69, 70], "establish": 68, "evalu": 73, "everi": [27, 40, 69], "exact": [7, 9, 27, 70], "exactli": [7, 29], "exampl": [8, 10, 21, 22, 23, 26, 27, 29, 31, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66, 68, 70, 71, 72], "example_id": [8, 21, 22], "exc": [8, 9, 10], "exc_group": 8, "exce": [8, 10, 30, 62, 68], "exceed": 54, "except": [6, 8], "exclus": [42, 43, 46, 48, 61, 62], "exclusive_span": 43, "execut": [8, 14, 23, 26, 27, 29, 33, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66, 68, 71, 72], "execution_index": [13, 14], "exhaust": 69, "exist": [21, 22, 26, 31, 69, 70], "exist_ok": [20, 21, 22], "exmapl": 64, "exp": 9, "expect": 9, "experi": 0, "explicitli": 66, "explor": [0, 69, 70, 73], "expon": 26, "exponenti": 26, "ext": [50, 57, 58, 59], "extend": [0, 24, 35, 69, 72], "extendsequ": [24, 35, 38], "extendsequenceconfig": [24, 35, 38], "extens": [68, 72], "extern": [69, 72], "extra": [21, 22, 26], "extra_bodi": [25, 26], "extra_head": [25, 26], "extra_queri": [25, 26], "extract": [10, 17, 44, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 68, 69, 70], "f": [21, 22], "face": [68, 69, 72], "facilit": 70, "factor": [3, 26], "factori": [1, 3, 11, 67], "fall": 8, "fals": [20, 21, 22, 23, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66, 69], "fanci": 10, "far": 26, "fast": 66, "faster": [33, 71], "feata": 64, "featur": [0, 7, 9, 10, 12, 13, 14, 16, 17, 18, 23, 24, 26, 27, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66, 69, 71, 73], "feature_a": 9, "feature_b": 9, "feature_check": [6, 67], "feature_collect": 70, "feature_dict": 70, "feature_kei": [6, 27, 52, 53, 54, 55, 56, 57, 58, 59, 64, 67, 69, 73], "featurea": 68, "featureb": 68, "featurecollect": [6, 10, 26, 67, 69, 72], "featuredict": [6, 10, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 61, 62, 64, 66, 67, 69, 72], "featurekei": [6, 10, 23, 26, 27, 29, 30, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66, 67, 69, 72], "featurekeycollect": [10, 31], "featuretyp": [7, 9, 10, 33, 34, 64, 70], "field": [3, 10, 18, 23, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66, 70], "fieldinfo": [3, 10, 23, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66], "file": [17, 18, 20, 21, 22], "filter": [24, 27, 28, 35, 62, 64, 68, 69], "filtered_sequence_featur": [35, 39], "filterfeatur": [24, 28, 29], "filterfeaturesconfig": [24, 28, 29], "filtersequ": [24, 35, 39], "filtersequenceconfig": [24, 35, 39], "final": [8, 71], "finalize_work": [6, 8, 19, 20, 22], "find": [14, 46], "fine": 72, "finish": 8, "first": [10, 34, 43, 70], "fit": [0, 71], "fix": [54, 55], "flag": 34, "flatten": [10, 24, 28], "flattenfeatur": [24, 28, 30], "flattenfeaturesconfig": [24, 28, 30], "flexibl": [68, 69, 72], "float": [8, 10, 14, 20, 21, 22, 26, 54, 55, 58, 59], "flow": [14, 70], "fly": [10, 70], "focus": 26, "follow": [3, 7, 10, 23, 26, 27, 42, 46, 47, 50, 64, 68, 69, 71], "font": 14, "font_siz": 14, "forc": 26, "form": [10, 40, 69, 70], "format": [3, 10, 20, 21, 22, 24, 26, 28, 29, 30, 68, 69], "formatfeatur": [24, 28, 30, 31], "formatfeaturesconfig": [24, 28, 30, 31], "formula": 59, "forward": [3, 14, 23], "framework": [0, 68, 69, 70, 71, 72, 73], "frequenc": 26, "frequency_penalti": [25, 26], "frist": 5, "from": [3, 4, 5, 7, 10, 12, 14, 17, 23, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66, 69, 70, 71, 73], "from_bio": [24, 41], "from_config": [1, 3, 13, 23, 24, 27], "from_dict": [1, 3], "from_feature_kei": [6, 10], "from_json": [1, 3], "from_tupl": [6, 10], "from_word_id": [24, 41], "ftype": [6, 10], "fulfil": 46, "full": 10, "fulli": 72, "function": [0, 3, 4, 5, 7, 8, 9, 12, 17, 18, 23, 25, 26, 27, 43, 50, 57, 58, 69, 70, 72, 73], "functional_valid": 66, "fundament": 70, "further": [26, 50, 69, 71], "furthermor": 66, "futur": 0, "g": [53, 57], "gather": 27, "ge": 26, "gener": [1, 2, 3, 10, 11, 17, 18, 23, 26, 27, 37, 43, 50, 61, 66, 67, 69, 72], "generate_from_arrow_typ": 7, "generatorbasedbuild": 17, "generic_config_typ": [1, 3], "get": [5, 7, 8, 9, 10, 27, 49, 51, 69, 70, 72], "get_hash_regist": [1, 5], "get_lock_for": [49, 51], "get_nested_typ": [6, 7, 67], "get_num_proc": [6, 8], "get_sequence_featur": [6, 9, 67], "get_sequence_length": [6, 9, 67], "get_type_by_hash": [1, 5], "get_type_by_t": [1, 5], "get_type_regist": [1, 5], "git": 71, "github": [7, 71], "given": [3, 4, 5, 8, 9, 10, 14, 20, 21, 23, 27, 36, 37, 43, 50, 51, 53, 54, 55, 57, 58, 59, 62, 64], "global": 47, "global_offsets_begin": [41, 47], "gpt": 26, "graph": [13, 67], "group": [8, 69], "guarante": [10, 26, 43, 70], "guid": 72, "h": 5, "ha": [5, 71], "handi": 27, "handl": [7, 26, 50, 68, 72], "har": [0, 68, 70], "hash": [5, 17, 18], "hash_regist": [1, 5], "hash_tree_bf": [1, 5], "have": [14, 26, 66], "header": 26, "heavili": 68, "helper": [4, 7, 12, 15, 30, 43], "here": [0, 66, 69, 73], "hf": [24, 65, 69, 71], "high": [52, 54, 55, 56, 58], "higher": 26, "hist": [49, 53, 56, 57], "histogram": [49, 53, 54, 55, 56, 57, 58], "histogramconfig": [49, 54, 55, 56, 58], "hold": [5, 69], "how": [10, 26, 64, 69, 70, 71], "howev": [11, 70], "http": [7, 71], "hug": [68, 69, 72], "hugginfac": 66, "huggingfac": [7, 10, 16, 18, 66, 68, 71, 72], "huggingfacetoken": [24, 45, 65, 66, 69, 71], "huggingfacetokenizerconfig": [24, 65, 66, 69, 71], "huggingfacetokenizeroutput": [24, 45, 61, 65, 66], "hype": [0, 17, 18, 29, 30, 42, 48, 69, 70, 71, 73], "i": [0, 3, 5, 7, 8, 9, 10, 11, 14, 15, 21, 22, 23, 26, 27, 29, 31, 33, 36, 42, 43, 44, 46, 47, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66, 68, 69, 70, 71, 72, 73], "id": [5, 8, 20, 21, 22, 26, 39, 45, 54, 55, 58, 62, 66], "idea": 8, "ident": 70, "identifi": [3, 5, 11, 29, 69, 70], "idx_span": [24, 41, 42], "idx_spans_begin": [41, 42], "idx_spans_end": [41, 42], "ignor": [45, 61], "ij": 43, "illustr": 70, "imag": [7, 9, 10, 33, 34, 64], "imdb": 71, "immedi": 69, "immut": 5, "impl": 3, "implement": [3, 7, 8, 18, 20, 21, 22, 26, 27, 50, 51, 59, 72], "import": [0, 69, 71, 73], "improv": [68, 71], "in_featur": [24, 27, 68], "in_feature_sequence_length": [35, 37], "in_tag_prefix": [41, 44, 60, 61], "includ": [9, 23, 26, 27, 68, 69, 71], "inclus": [42, 43, 46, 47, 48, 61, 62], "incorpor": 10, "increas": 26, "increment": 59, "incremental_mean_and_std": [56, 59], "index": [10, 14, 23, 26, 27, 29, 31, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66, 68, 69, 70, 72], "index_batch": [6, 10, 70], "index_exampl": [6, 10, 64, 69, 70], "index_featur": [6, 10, 64, 69, 70], "indic": [9, 10, 14, 23, 27, 33, 34, 43, 44, 45, 47, 48, 50, 51, 53, 54, 55, 57, 58, 59, 62, 66, 69], "individu": [70, 73], "infer": [3, 64], "info": [17, 18], "inform": [7, 14, 18, 26, 43, 50, 53, 54, 55, 57, 58, 59, 66, 68, 69, 73], "inher": 70, "inherit": [4, 5], "init": [57, 58, 59, 72], "init_v": [50, 51, 57, 58, 59], "init_var": [23, 30, 39, 50, 53, 54, 55, 57, 58, 59], "initi": [3, 8, 21, 48, 50, 51, 54, 57, 58, 59, 68, 69], "initial_valu": [49, 50, 56, 57, 58, 59], "initialis": 27, "initialize_work": [6, 8, 19, 20, 21], "input": [14, 23, 26, 27, 29, 30, 31, 33, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66, 68, 69, 70], "input_featur": [13, 14], "input_id": [65, 66, 69], "input_sequ": [60, 61, 62], "insight": 73, "inst": 3, "instal": 72, "instanc": [3, 7, 9, 11, 27, 39, 47, 51, 59, 64, 70, 71, 73], "instanti": [23, 27], "instead": [5, 7, 26, 27, 39, 57, 58, 64], "int": [5, 8, 9, 10, 14, 17, 18, 20, 21, 22, 23, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66, 69, 70], "int32": 10, "integ": [10, 26, 30, 47, 54, 55, 58, 62], "integr": [16, 68, 69, 72], "intend": 69, "intens": 68, "interact": 11, "interior": 61, "intern": [23, 27, 50, 51], "internal_appli": [13, 23], "internal_batch_process": [13, 23, 24, 27, 28, 31, 32, 33, 49, 50, 65, 66, 69], "interv": [21, 22], "inv": 61, "invalid": 70, "invalid_tag": [60, 61], "invalid_v": [60, 61], "invers": [7, 42], "io": [13, 67, 71], "is_act": [49, 51], "is_empti": [49, 51], "is_equ": 9, "is_idx_spans_inclus": [41, 42], "is_inclus": 43, "is_of_typ": 9, "is_prepar": [13, 23, 24, 27], "is_queries_inclus": [41, 46], "is_sequ": 9, "is_simpl": [6, 10], "is_source_inclus": 43, "is_spans_inclus": [41, 42, 46, 48], "is_split_into_word": [65, 66], "is_target_inclus": 43, "item": [8, 9, 37, 39, 44, 45, 61, 62, 68], "iter": [5, 10, 23, 27, 43, 51, 64, 68, 69], "iter_batch_process": [13, 23], "iter_keys_in_featur": [6, 10], "iterabledataset": [8, 21, 23], "iterabledatasetdict": 23, "its": [68, 69, 71, 72], "j": [42, 43, 46], "jinja2": [24, 63], "jinja2config": [24, 63, 64], "join": [30, 40, 59], "join_str_seq": [24, 35], "joined_str": 40, "joinstringsequ": [24, 35, 40], "joinstringsequenceconfig": [24, 35, 40], "json": [3, 15, 18, 19, 20, 21, 24, 26, 32, 34, 71], "json_object": 26, "json_repair": 34, "json_str": [32, 33, 34], "jsonconfig": 18, "jsondatasetwrit": [15, 19, 22, 68, 71], "jsonpars": [24, 32, 33], "jsonparserconfig": [24, 32, 33], "jupyt": 5, "just": [10, 11], "keep": [28, 29, 39, 43, 51], "keep_first": [41, 43], "keep_input_featur": [13, 23, 24, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66, 69], "keep_largest": [41, 43], "keep_last": [41, 43], "keep_smallest": [41, 43], "kei": [10, 14, 23, 26, 27, 29, 30, 36, 38, 39, 40, 50, 51, 53, 54, 55, 57, 58, 59, 64, 69, 70, 71, 72], "kept": 48, "keyword": [17, 18, 21, 22, 23, 66, 69], "kwarg": [3, 8, 14, 17, 18, 23], "kwargs_from_config": [65, 66], "kwargs_from_exampl": [65, 66], "kwd": 51, "l1184": 7, "label": [13, 14, 41, 43, 44, 61], "label_featur": [41, 44], "labelledspansoutput": [24, 41, 43], "larg": [68, 71, 72], "larger": 68, "largest": 43, "last": [43, 46, 68], "layer": [13, 14], "layoutxlmtoken": 66, "lazi": [6, 67, 68, 71], "lazyinst": [6, 11, 67], "lazysharedinst": [6, 11, 67], "le": 26, "lead": 50, "leaf": 31, "learn": 69, "length": [9, 10, 14, 30, 37, 47, 54, 62, 65, 66, 71], "let": [42, 46, 70, 73], "level": [10, 42, 44, 45, 46, 47, 61, 64, 70], "leverag": [68, 69, 70, 72], "librari": [34, 68, 69, 71, 72], "like": [26, 27], "likelihood": 26, "limit": [26, 72], "line": [20, 22, 26], "lint": 71, "list": [0, 5, 7, 8, 9, 10, 14, 17, 18, 23, 26, 27, 29, 30, 31, 33, 34, 37, 38, 39, 43, 50, 53, 54, 55, 57, 58, 59, 62, 64, 66, 68, 69, 70, 72], "liter": [23, 26], "ll": 69, "llm": 26, "load": [3, 18, 26, 34, 66, 68, 71, 72], "load_dataset": [17, 18, 68, 71], "loc_to_glob": [24, 41], "local": [47, 66], "local_offsets_begin": [41, 47], "local_offsets_end": [41, 47], "local_offsets_inclus": [41, 47], "local_to_global_map": [41, 47], "localtoglobaloffset": [24, 41, 47], "localtoglobaloffsetsconfig": [24, 41, 47], "lock": [50, 51], "log": 26, "logic": [8, 50, 69], "logit_bia": [25, 26], "logprob": [25, 26], "longer": 50, "loop": 8, "low": [52, 54, 55, 56, 58], "lower": [26, 55, 58], "m": 43, "machin": 72, "maco": 26, "mai": [0, 26, 69, 71], "main": [51, 70, 72], "make": [26, 29, 53, 54, 55, 57, 58, 59, 73], "make_spans_exclus": [24, 41, 43], "manag": [49, 50, 51, 57, 58, 59, 68, 70, 71, 72], "manipul": [69, 70, 72], "manner": 68, "map": [3, 5, 9, 10, 23, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66, 69], "map_featur": [13, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 60, 61, 62, 63, 64, 65, 66, 69], "mapsto": 27, "mark": [43, 44, 61, 62], "marked_sequ": [60, 62], "marker": [60, 62], "mask": [35, 36, 41, 43, 45, 48, 60, 61, 66], "mass": 26, "match": [7, 9, 10, 12, 18, 23, 27, 62, 64], "matrix": 43, "max": 26, "max_concurrent_cal": [25, 26], "max_depth": 10, "max_length": [52, 54, 65, 66, 71], "max_retri": [25, 26], "max_seq_len_to_unpack": 10, "max_seq_length_to_unpack": [28, 30], "max_sequence_length": [60, 62], "max_token": [25, 26], "max_width": [13, 14], "maximum": [10, 14, 26, 54, 62, 66, 71], "mean": [26, 56, 59, 72], "mean_and_std": [49, 56, 73], "meanandstd": [49, 56, 59, 73], "meanandstdconfig": [49, 56, 59, 73], "meanandstdtupl": [49, 56, 59], "meant": 27, "member": [9, 46, 69], "memori": [8, 68, 71, 72], "ment": 50, "messag": [9, 25, 26], "meta": [5, 26], "metaclass": 5, "metadata": [3, 10, 23, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66], "method": [3, 27, 68, 70, 71], "might": [26, 50, 66], "minim": [48, 68], "mixin": 5, "mode": [26, 68], "model": [0, 3, 10, 12, 23, 25, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66, 69, 70, 71, 73], "model_computed_field": [1, 3, 6, 10, 13, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "model_config": [1, 3, 6, 10, 13, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "model_field": [1, 3, 6, 10, 13, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "model_post_init": [24, 27, 52, 54], "modifi": [10, 26], "modul": [67, 71, 72], "modular": [68, 69], "more": [0, 7, 10, 14, 18, 26, 43, 50, 53, 54, 55, 57, 58, 59, 66, 68, 69, 71, 72, 73], "most": [26, 43], "mp": [8, 21, 22, 50, 51, 57, 58, 59], "much": 33, "multipartite_layout": 14, "multipl": [26, 37, 66, 68, 69, 71], "multiprocess": [8, 26, 50, 51, 57, 58, 59, 68, 72], "must": [3, 5, 8, 26, 27, 31], "my_attention_mask": 69, "my_funct": 26, "my_input_id": 69, "mycustomprocessor": 69, "mycustomprocessorconfig": 69, "n": [43, 56, 59], "name": [3, 5, 9, 10, 14, 17, 18, 23, 25, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66, 69, 70, 73], "name_a": 9, "name_b": 9, "navig": [70, 71], "ndarrai": [43, 54, 55, 58], "necessari": [69, 71], "need": [27, 47, 50, 68, 69, 72], "ner": 46, "nest": [7, 10, 30, 31, 70], "networkx": 14, "new": [3, 23, 26, 27, 38, 40, 50, 51, 57, 58, 61, 62, 64, 68], "new_featur": [13, 23, 24, 27, 66, 68], "new_statistics_report_storag": [49, 51], "new_val": [50, 59], "newlines_in_valu": 18, "next": 71, "node": 14, "node_execution_index": 14, "node_it": 5, "node_label": 14, "node_lay": 14, "node_s": 14, "node_typ": 14, "nodeattribut": [13, 14, 67], "nodetyp": [13, 14, 67], "non": [5, 43], "none": [3, 4, 8, 9, 10, 14, 17, 18, 20, 21, 22, 23, 26, 27, 29, 30, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66, 69], "nonetyp": [26, 27, 29, 30, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66], "normal": 68, "note": [0, 27, 42, 46, 51, 66, 68], "notebook": 5, "now": 71, "np": 43, "nucleu": 26, "num_bin": [52, 54, 55, 56, 58], "num_lay": [13, 14], "num_proc": [8, 20, 21, 22, 68, 71], "num_process": [16, 17], "number": [8, 14, 17, 21, 22, 26, 27, 43, 48, 55, 58, 59, 68, 71], "o": [15, 43, 44, 61], "o_": 43, "obj": 9, "objc_disable_initialize_fork_safeti": 26, "object": [3, 5, 9, 10, 11, 14, 17, 20, 21, 22, 23, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66, 68], "obtain": 70, "occur": 10, "offer": 68, "offset": [47, 66], "offset_map": 66, "offsets_map": [65, 66], "ok": [21, 22], "onc": [0, 8], "one": [9, 23, 26, 27, 29, 43], "ones": 0, "onli": [5, 9, 10, 11, 23, 26, 27, 30, 51, 66, 69, 70, 71], "ons": 0, "onto": 36, "open": [20, 71], "openai": 26, "openai_api_kei": 26, "openai_chat": [24, 25], "openai_org_id": 26, "openai_project_id": 26, "openaichatcomplet": [24, 25, 26], "openaichatcompletionconfig": [24, 25, 26], "openaitool": [24, 25, 26], "openaitoolfunct": [24, 25, 26], "oper": [42, 46, 68, 69, 70, 73], "optim": 0, "option": [48, 66, 69, 71], "order": [8, 14, 37, 46, 51], "organ": [25, 26], "other": [43, 48, 71], "otherwis": [4, 44], "ouput": 27, "out": [23, 26, 27, 29, 30, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 50, 61, 62, 64, 68, 69, 71, 72], "out_batch": [23, 27, 33, 50, 66], "out_d": 68, "out_featur": [13, 23, 24, 27, 64, 68], "out_it": 23, "out_tag": [41, 44, 60, 61], "outlin": 70, "outout_format": 27, "output": [14, 23, 26, 27, 35, 38, 39, 40, 42, 43, 44, 46, 48, 50, 61, 62, 63, 64, 66, 68, 69], "output_featur": [13, 14], "output_format": [13, 23, 24, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66, 69], "outsourc": 50, "over": [5, 10, 23, 27, 37, 42, 43, 45, 48, 51, 53, 54, 55, 68, 73], "overal": 73, "overflow": 66, "overflow_to_sample_map": [65, 66], "overlap": [24, 41, 43, 66], "overwrit": [8, 27, 36, 50, 69], "overwritten": 27, "pa": 7, "pack": 59, "packag": [0, 67, 71, 72], "pad": [65, 66, 71], "pad_to_multiple_of": [65, 66], "paddingstrategi": 66, "page": 72, "pair": 40, "parallel": [0, 8, 37, 68, 71], "paramet": [25, 26, 69, 71], "parameter": 3, "parameter1": 69, "parameter2": 69, "pars": [7, 33, 34, 44, 45], "parser": [13, 24], "part": [10, 61, 66, 68], "particular": 26, "pass": [14, 21, 22, 23, 27, 31, 33, 66, 68, 69], "path": [14, 17, 20, 21, 22, 31, 66, 70], "penal": 26, "per": 61, "perform": [7, 68, 69, 71], "pick": 26, "pickl": 51, "pip": [0, 71], "pipe": [13, 14, 27, 50, 67, 71, 72, 73], "pipelin": [0, 14, 23, 50, 68, 69, 70, 71, 72, 73], "pivot": 70, "plai": 70, "pleas": [0, 18, 26, 48, 50, 64, 66, 68, 69], "plot": [13, 14], "plt": 14, "po": 14, "posit": [10, 14, 26, 30, 47], "potenti": 43, "power": [0, 68, 70, 72], "pre": [5, 47, 66], "precis": 70, "predict": 0, "prefix": [44, 61], "prepar": [23, 24, 27, 50, 72], "prepend": [35, 38], "preprocess": [72, 73], "presence_penalti": [25, 26], "present": [3, 10, 17, 30, 39, 53, 54, 55, 57, 58, 59], "pretrainedtoken": 66, "priorit": [3, 27], "privat": 27, "probabl": 26, "proce": 71, "process": [0, 8, 11, 13, 14, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 72, 73], "processgraph": [13, 14, 67], "processor": [13, 14, 23, 67, 68, 70, 72], "processor1": 68, "processor2": 68, "progress": [21, 22], "project": [0, 25, 26], "prompt": 26, "properti": [2, 3, 5, 7, 8, 10, 14, 17, 23, 26, 27, 29, 37, 39, 44, 51, 61, 62, 64], "provid": [0, 7, 8, 17, 18, 23, 26, 27, 45, 50, 68, 69, 70, 71, 72, 73], "proxi": [57, 58], "purpos": [70, 72], "py": 7, "pyarrow": 7, "pydant": [3, 6, 10, 23, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66, 67, 69], "pydantic_model_from_featur": [6, 12, 67], "pypi": 71, "python": [5, 10], "q": 46, "qa": 46, "qualnam": [14, 43, 61, 62, 66], "queri": [26, 46], "queries_begin": [41, 46], "queries_end": [41, 46], "question": 46, "rai": 0, "rais": [8, 9, 10, 29, 41, 43, 64], "raise_feature_equ": [6, 9, 67], "raise_feature_is_sequ": [6, 9, 67], "raise_features_align": [6, 9, 67], "raise_is_simpl": [6, 10], "raise_object_matches_featur": [6, 9, 67], "random": 26, "rang": [55, 58, 72], "rank": [8, 23, 26, 27, 29, 31, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66, 68, 69], "rate": 26, "rate_limit_exp_backoff": [25, 26], "rate_limit_max_retri": [25, 26], "raw": [23, 27], "raw_featur": [13, 23, 24, 27], "re": [31, 71, 72], "readi": [23, 27, 68, 71], "real": 0, "recip": 10, "recognit": 46, "recurs": 9, "reduc": 68, "ref": 70, "refer": [14, 18, 26, 36, 48, 50, 66, 68, 69, 70], "referenc": [36, 64], "reflect": 50, "reformat": 31, "regist": [5, 49, 50, 51], "register_meta_mixin": [1, 5, 67], "register_typ": [1, 5], "register_type_meta": [1, 5, 67], "registered_kei": [49, 51], "registertyp": [1, 3, 5, 67], "registr": [1, 3, 5, 67], "registri": [1, 2, 3, 67], "relat": [62, 69], "releas": 50, "relev": 50, "relex": [24, 60], "relextagg": [24, 60, 62], "relextaggerconfig": [24, 60, 62], "relextaggeroutput": [24, 60, 62], "reli": 68, "remain": 10, "remaining_batch": 10, "remaining_exampl": 10, "remaining_featur": 10, "remov": [10, 28, 29, 43, 48, 69], "remove_from_batch": [6, 10], "remove_from_exampl": [6, 10], "remove_from_featur": [6, 10], "render": 64, "repair": 34, "repair_json": [24, 32], "repairjsonpars": [24, 32, 33, 34], "repairjsonparserconfig": [24, 32, 34], "repeat": 26, "replac": [3, 10, 23, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66], "repo_id": [17, 18], "report": [24, 49, 50, 53, 54, 55, 57, 58, 59, 73], "reports_it": 51, "repositori": 71, "repres": [7, 14, 42, 69, 70], "represent": [8, 14], "request": [26, 31], "requir": [0, 8, 10, 18, 23, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66, 69, 72], "required_feature_kei": [13, 23, 24, 27, 28, 29, 63, 64], "resloveoverlapsstrategi": 43, "resolv": [4, 5, 43, 48], "resolve_overlap": [24, 41, 43], "resolveoverlapsstrategi": [24, 41, 43, 48], "resolvespanoverlap": [24, 41, 48], "resolvespanoverlapsconfig": [24, 41, 48], "resourc": 72, "respect": [37, 64], "respons": [51, 69], "response_format": [25, 26], "rest": 0, "restrict": 10, "result": [0, 10, 26, 36], "retain": 69, "retri": 26, "retriev": 10, "return": [3, 4, 5, 7, 8, 9, 10, 12, 14, 20, 21, 22, 23, 26, 27, 29, 30, 33, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66, 68, 69, 70], "return_attention_mask": [65, 66], "return_index": [23, 27], "return_length": [65, 66], "return_offsets_map": [65, 66], "return_overflowing_token": 66, "return_special_tokens_mask": [65, 66], "return_token": [65, 66], "return_token_type_id": [65, 66], "return_word_id": [65, 66], "reusabl": 69, "rich": [68, 72], "rlock": 51, "role": [26, 70], "root": [3, 5], "rootedtyperegistryview": [1, 2, 5, 67], "rout": 27, "run": [6, 8, 71], "runtim": 5, "safe": 51, "same": [26, 37, 46, 69, 70], "sampl": [10, 26, 59, 64, 66, 68, 70], "satisfi": 43, "save": [8, 20, 21, 22], "save_dir": [20, 21, 22], "scalabl": [68, 72], "scalar": [57, 58, 59], "scale": 72, "scenario": 71, "schema": [7, 26], "scheme": [6, 10, 14, 27, 32, 33, 34, 44, 61], "seamless": [0, 68, 72], "seamlessli": [68, 72], "search": [5, 72], "second": [21, 22, 70], "section": [70, 72], "see": [7, 14, 17, 18, 26, 30, 43, 45, 50, 53, 54, 55, 57, 58, 59, 64, 66], "seed": [25, 26], "self": [27, 69], "send": 26, "separ": 0, "seper": 59, "seq": [9, 70], "seq_a": 9, "seq_b": 9, "seq_len_hist": [49, 52], "seq_val_hist": [49, 52], "sequenc": [7, 9, 10, 13, 23, 24, 26, 30, 33, 34, 42, 43, 44, 45, 46, 47, 48, 49, 61, 62, 64, 66, 68, 70, 71, 72], "sequencelengthhistogram": [49, 52, 54], "sequencelengthhistogramconfig": [49, 52, 54], "sequencevaluehistogram": [49, 52, 55], "sequencevaluehistogramconfig": [49, 52, 55], "sequenti": 68, "seri": 68, "serial": [3, 51], "serialized_config": 3, "serv": [0, 70], "set": [9, 10, 14, 17, 18, 23, 26, 27, 30, 36, 37, 39, 45, 47, 49, 51, 61, 62, 64, 66, 68, 69, 71, 72], "shape": 43, "shard": [8, 20, 21, 22], "shard_id": [8, 21, 22], "share": [11, 51, 57, 58], "short": 8, "short_desc": [6, 8], "should": [3, 10, 23, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66, 69], "show": 14, "shutdown_timeout": 51, "similar": [7, 10, 30], "simpl": [10, 71], "simple_subkei": [6, 10], "simplifi": 72, "simultan": 27, "sinc": 27, "singl": [10, 14, 23, 27, 42, 43, 46, 57, 58, 59, 69, 70, 72], "size": [14, 37, 54, 55], "skip_json_load": [32, 34], "skipvalid": 66, "slice": [10, 70], "slightli": 7, "small": 72, "smallest": 43, "so": 26, "solut": 69, "solve_typevar": [1, 4, 67], "some": [8, 66, 70, 71], "sourc": [5, 7, 10, 14, 23, 27, 30, 43, 62, 69, 71], "source_begin_mark": [60, 62], "source_end_mark": [60, 62], "source_span": 43, "source_span_begin": [60, 62], "source_span_end": [60, 62], "source_span_inclus": [60, 62], "space": 61, "span": [13, 24, 61, 62], "span_begin": 43, "span_end": 43, "span_label": 43, "spans_begin": [41, 42, 46, 48], "spans_end": [41, 42, 46, 48], "spansoutput": [24, 41, 43], "spawn": [11, 17], "special": [10, 51, 66, 69, 70, 73], "special_tokens_mask": [45, 61, 65, 66], "specif": [4, 5, 10, 27, 43, 47, 61, 64, 66, 68, 69, 70, 71, 72, 73], "specifi": [5, 8, 10, 26, 27, 29, 30, 31, 37, 39, 40, 47, 50, 53, 54, 55, 57, 58, 59, 61, 62, 66, 68, 69, 70, 71], "split": 71, "squad": 46, "src": 7, "src_index": [27, 50], "stage": 68, "standard": [59, 72], "start": [8, 14, 43, 51, 61, 62, 66, 69, 72], "stat": 73, "static": [10, 59], "statis": 51, "statist": [13, 24, 72], "statistic_kei": [49, 50, 53, 54, 55, 57, 58, 59, 73], "statisticreportstorag": 51, "statisticsreport": [24, 49, 50, 51, 53, 54, 55, 57, 58, 59, 73], "statisticsreportmanag": [24, 49, 51], "statisticsreportstorag": [24, 49, 50, 51, 57, 58], "std": [56, 59], "step": [68, 71], "still": [9, 10], "stop": [25, 26], "storag": [50, 51, 57, 58], "storage_opt": [17, 18], "store": [5, 20, 21, 22, 36, 50, 51, 53, 54, 55, 57, 58, 59, 64], "str": [3, 5, 8, 9, 10, 11, 14, 17, 18, 20, 21, 22, 23, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66, 69, 70], "strategi": [41, 43, 48, 66, 73], "stream": [8, 68, 72], "stride": [37, 65, 66], "string": [3, 8, 10, 33, 34, 40, 44, 53, 57, 62, 64, 68, 70], "struct": 7, "structur": [10, 12, 27, 30, 69, 70], "style": 46, "sub": [0, 3, 5, 10, 27, 37, 50, 57, 58, 70], "subclass": [5, 8, 69], "subkei": 10, "submodul": [15, 67], "subpackag": 67, "subprocess": 11, "subset": 43, "super": 69, "support": [8, 26, 68, 71, 72], "sure": [29, 53, 54, 55, 57, 58, 59], "sync": 51, "sync_batch_process": 27, "sync_gen_batch_process": 27, "syncmanag": [24, 49, 51], "system": [26, 71], "t": [2, 3, 4, 5, 7, 9, 11, 27, 29, 31, 36, 37, 38, 39, 40, 42, 44, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 61, 62, 69], "tag": [44, 61], "tag_featur": [41, 44], "tagger": [13, 24], "tailor": [68, 69, 71, 72], "take": [10, 27, 68, 69], "talk": 26, "target": [9, 14, 31, 43, 62, 70], "target_begin_mark": [60, 62], "target_end_mark": [60, 62], "target_span": 43, "target_span_begin": [60, 62], "target_span_end": [60, 62], "target_span_inclus": [60, 62], "task": [27, 68, 70, 71, 72], "tb": 8, "temperatur": [25, 26], "templat": [13, 24], "test": 71, "text": [26, 27, 47, 65, 66, 69, 70, 71], "text_pair": [65, 66], "text_pair_target": [65, 66], "text_target": [65, 66], "textiowrapp": [20, 21, 22], "th": [27, 43, 47], "than": 68, "thei": [26, 68, 70], "them": [8, 17, 18, 37, 71, 72], "thi": [3, 5, 7, 8, 9, 10, 14, 23, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66, 68, 69, 70, 71, 72, 73], "those": 70, "thread": 51, "three": 70, "threshold": [10, 30, 54], "through": [5, 23, 31, 33, 50, 64, 66, 68, 69, 70, 72], "throughout": [68, 70], "thrown": 8, "time": [0, 26, 50, 71], "timeout": [25, 26], "to_dict": [1, 3, 6, 10], "to_flatten": [28, 30], "to_json": [1, 3], "togeth": [68, 69], "token": [13, 17, 18, 24, 26, 42, 44, 45, 46, 47, 61, 62, 69, 71], "token_type_id": [65, 66], "tokenizer_config": [69, 71], "tokenspansfrombiotag": [24, 41, 44], "tokenspansfrombiotagsconfig": [24, 41, 44], "tokenspansfromwordid": [24, 41, 45], "tokenspansfromwordidsconfig": [24, 41, 45], "tool": [25, 26, 72], "tool_choic": [25, 26], "top": [10, 26, 68, 70, 72], "top_logprob": [25, 26], "top_p": [25, 26], "topic": 26, "total": [14, 26, 57, 58, 59], "total_bin_count": 58, "total_hist": 57, "tqdm": [21, 22], "tqdm_kwarg": [8, 20, 21, 22], "tqdm_update_interv": [8, 20, 21, 22], "track": [5, 39, 51], "train": [66, 71], "transform": [66, 68, 69, 71, 72], "translat": [7, 9, 10, 33, 34, 64], "translationvariablelanguag": [7, 9, 10, 33, 34, 64], "travers": 10, "tree": [4, 5], "true": [3, 10, 14, 18, 23, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66, 68, 69, 71], "truncat": [10, 54, 62, 65, 66, 71], "truncationsrategi": 66, "truncationstrategi": 66, "try": 34, "tt": 4, "tune": 72, "tupl": [5, 7, 8, 9, 10, 23, 27, 31, 33, 34, 43, 50, 54, 55, 58, 64, 66, 69, 70], "turbo": 26, "two": [9, 43, 59, 69, 70], "type": [1, 2, 3, 4, 5, 7, 9, 10, 13, 14, 17, 18, 23, 25, 26, 27, 29, 43, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66, 69, 70], "type_hash": [1, 5], "type_id": [1, 3, 5], "type_regist": [1, 5], "type_registri": [1, 2, 5], "typed_json": [15, 16], "typeddict": 26, "typedjsondataset": [15, 16, 18], "typedjsondatasetconfig": [15, 16, 18], "typeerror": [9, 10, 64], "typeregistri": [1, 5, 67], "typesystem": [16, 17], "typevar": 4, "typic": [17, 18, 45, 46, 61, 69], "u": [3, 50], "uncas": [66, 69, 71], "undefin": [9, 14], "under": [36, 50, 51, 53, 54, 55, 57, 58, 59], "underli": [11, 51], "understand": 70, "union": [10, 26, 27, 29, 30, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 61, 62, 64, 66], "unlik": 73, "unpack": [6, 10, 30], "up": [26, 71], "updat": [21, 22, 49, 50, 56, 57, 58, 59], "update_statist": 50, "upper": [10, 30, 55, 58], "uri": 66, "url": 26, "us": [0, 3, 8, 9, 10, 14, 17, 18, 20, 21, 22, 23, 26, 30, 33, 34, 40, 43, 47, 50, 51, 61, 62, 64, 66, 68, 69, 70, 71, 72, 73], "usag": [26, 68, 70, 72, 73], "use_auth_token": [17, 18], "use_thread": 18, "usecas": 46, "useful": 8, "user": [26, 68, 69, 70, 71, 72, 73], "utf": 18, "util": [11, 17, 18, 68, 69, 70, 71, 72], "v": 3, "v1": [3, 10, 23, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66], "val": [50, 51, 57, 58, 59, 69, 70], "vala": 64, "valid": [9, 26, 31, 33, 35, 39, 50, 64, 70], "valid_set": [35, 39], "validate_default": [3, 23, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66], "valu": [6, 7, 9, 10, 14, 24, 26, 33, 34, 38, 39, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 61, 62, 64, 66, 68, 69, 70, 73], "value_typ": 9, "valueerror": [29, 43], "vari": 69, "variabl": [4, 26], "variant": [10, 70], "variou": [68, 69, 71, 73], "verbatim": 26, "verifi": 23, "versatil": 72, "version": [17, 18, 69], "via": [0, 26], "view": 5, "volum": 72, "wa": 8, "wai": [50, 69], "warn": [51, 54, 55], "we": [70, 71], "well": [0, 8, 14, 26, 69], "what": [26, 27], "when": [5, 8, 9, 10, 14, 23, 26, 27, 29, 30, 43, 47, 48, 51, 54, 55, 66, 68, 69, 71, 72], "where": [10, 26, 43, 47, 48, 62, 70, 71], "whether": [9, 10, 21, 22, 23, 26, 27, 34, 42, 43, 46, 47, 48, 51, 61, 62, 64, 66, 69, 72], "which": [0, 3, 9, 10, 14, 21, 22, 26, 36, 39, 43, 45, 47, 48, 50, 51, 53, 54, 55, 57, 58, 59, 62, 64, 69, 70, 71, 73], "while": [26, 43, 70, 72], "whitespac": 40, "whole": [27, 57, 58], "wide": 72, "with_edge_label": 14, "with_label": 14, "within": [0, 68, 69, 70, 73], "without": 48, "word": [45, 47, 66], "word_id": [41, 45, 65, 66], "work": [4, 69, 72], "worker": [8, 20, 21, 22, 71], "worker_id": [8, 20, 21, 22], "worker_shard_file_obj": [19, 20, 21, 22], "workflow": [0, 68, 69, 72], "workload": [8, 72], "would": 10, "wrapper": [8, 10], "write": [20, 21, 22, 57, 58, 68, 71], "writer": [13, 15, 68, 71], "writer_batch_s": [17, 18], "written": 51, "wrt": 62, "x": [10, 27, 68], "y": [10, 27, 68], "ye": 26, "yield": [10, 23, 27, 68, 69], "you": [0, 69, 71, 72], "your": [0, 69, 71, 72], "z": 68, "zero": [58, 59, 66]}, "titles": ["Add-Ons", "base package", "base.auto module", "base.config module", "base.generic module", "base.registry module", "common package", "common.arrow module", "common.consumer module", "common.feature_checks module", "common.feature_key module", "common.lazy module", "common.pydantic module", "data package", "data.graph module", "data.io package", "data.io.datasets package", "data.io.datasets.cas module", "data.io.datasets.typed_json module", "data.io.writers package", "data.io.writers.base module", "data.io.writers.csv module", "data.io.writers.json module", "data.pipe module", "data.processors package", "data.processors.api package", "data.processors.api.openai_chat module", "data.processors.base module", "data.processors.features package", "data.processors.features.filter module", "data.processors.features.flatten module", "data.processors.features.format module", "data.processors.parsers package", "data.processors.parsers.json module", "data.processors.parsers.repair_json module", "data.processors.sequence package", "data.processors.sequence.apply_mask module", "data.processors.sequence.chunk module", "data.processors.sequence.extend module", "data.processors.sequence.filter module", "data.processors.sequence.join_str_seq module", "data.processors.spans package", "data.processors.spans.apply_idx_spans module", "data.processors.spans.common module", "data.processors.spans.from_bio module", "data.processors.spans.from_word_ids module", "data.processors.spans.idx_spans module", "data.processors.spans.loc_to_glob module", "data.processors.spans.overlaps module", "data.processors.statistics package", "data.processors.statistics.base module", "data.processors.statistics.report module", "data.processors.statistics.sequence package", "data.processors.statistics.sequence.disc_seq_val_hist module", "data.processors.statistics.sequence.seq_len_hist module", "data.processors.statistics.sequence.seq_val_hist module", "data.processors.statistics.value package", "data.processors.statistics.value.disc_hist module", "data.processors.statistics.value.hist module", "data.processors.statistics.value.mean_and_std module", "data.processors.taggers package", "data.processors.taggers.bio module", "data.processors.taggers.relex module", "data.processors.templates package", "data.processors.templates.jinja2 module", "data.processors.tokenizers package", "data.processors.tokenizers.hf module", "hyped", "Data Pipe", "Data Processors", "Feature Access", "Getting Started", "Welcome to hyped\u2019s documentation!", "Statistic Processors"], "titleterms": {"": 72, "Ons": 0, "access": 70, "add": 0, "api": [25, 26, 72], "appli": 68, "apply_idx_span": 42, "apply_mask": 36, "arrow": 7, "auto": 2, "avail": 0, "base": [1, 2, 3, 4, 5, 20, 27, 50], "batch": 71, "batch_process": 68, "bio": 61, "ca": 17, "chunk": 37, "common": [6, 7, 8, 9, 10, 11, 12, 43], "comput": 73, "config": 3, "configur": [69, 71], "consum": 8, "content": [1, 6, 13, 15, 16, 19, 24, 25, 28, 32, 35, 41, 49, 52, 56, 60, 63, 65, 72], "csv": 21, "custom": 69, "data": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71], "dataset": [16, 17, 18], "deviat": 73, "disc_hist": 57, "disc_seq_val_hist": 53, "document": 72, "exampl": [69, 73], "extend": 38, "featur": [28, 29, 30, 31, 68, 70, 72], "feature_check": 9, "feature_kei": 10, "featurecollect": 70, "featuredict": 70, "featurekei": 70, "filter": [29, 39], "flatten": 30, "format": 31, "from_bio": 44, "from_word_id": 45, "function": 68, "gener": 4, "get": 71, "graph": 14, "hf": 66, "hist": 58, "hype": [67, 72], "idx_span": 46, "implement": 69, "indic": 72, "init": 68, "instal": [0, 71], "io": [15, 16, 17, 18, 19, 20, 21, 22], "jinja2": 64, "join_str_seq": 40, "json": [22, 33], "kei": 68, "lazi": 11, "loc_to_glob": 47, "main": 68, "mean": 73, "mean_and_std": 59, "modul": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "multiprocess": 71, "openai_chat": 26, "overlap": 48, "packag": [1, 6, 13, 15, 16, 19, 24, 25, 28, 32, 35, 41, 49, 52, 56, 60, 63, 65], "parser": [32, 33, 34], "pipe": [23, 68], "prepar": 68, "process": 71, "processor": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 71, 73], "pydant": 12, "refer": 72, "registri": 5, "relex": 62, "repair_json": 34, "report": 51, "seq_len_hist": 54, "seq_val_hist": 55, "sequenc": [35, 36, 37, 38, 39, 40, 52, 53, 54, 55], "span": [41, 42, 43, 44, 45, 46, 47, 48], "standard": 73, "start": 71, "statist": [49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 73], "stream": 71, "submodul": [1, 6, 13, 16, 19, 24, 25, 28, 32, 35, 41, 49, 52, 56, 60, 63, 65], "subpackag": [13, 15, 24, 49], "tabl": 72, "tagger": [60, 61, 62], "templat": [63, 64], "token": [65, 66], "typed_json": 18, "usag": 71, "valu": [56, 57, 58, 59], "welcom": 72, "writer": [19, 20, 21, 22]}})